void gen0(){
mov (ecx, ptr[rax+rax+0]); dump();
mov (ecx, ptr[rax+rax+1]); dump();
mov (ecx, ptr[rax+rax+1000]); dump();
mov (ecx, ptr[rax+rax-1]); dump();
mov (ecx, ptr[rax+rax-1000]); dump();
mov (ecx, ptr[rax+rax*1+0]); dump();
mov (ecx, ptr[rax+rax*1+1]); dump();
mov (ecx, ptr[rax+rax*1+1000]); dump();
mov (ecx, ptr[rax+rax*1-1]); dump();
mov (ecx, ptr[rax+rax*1-1000]); dump();
mov (ecx, ptr[rax+rax*2+0]); dump();
mov (ecx, ptr[rax+rax*2+1]); dump();
mov (ecx, ptr[rax+rax*2+1000]); dump();
mov (ecx, ptr[rax+rax*2-1]); dump();
mov (ecx, ptr[rax+rax*2-1000]); dump();
mov (ecx, ptr[rax+rax*4+0]); dump();
mov (ecx, ptr[rax+rax*4+1]); dump();
mov (ecx, ptr[rax+rax*4+1000]); dump();
mov (ecx, ptr[rax+rax*4-1]); dump();
mov (ecx, ptr[rax+rax*4-1000]); dump();
mov (ecx, ptr[rax+rax*8+0]); dump();
mov (ecx, ptr[rax+rax*8+1]); dump();
mov (ecx, ptr[rax+rax*8+1000]); dump();
mov (ecx, ptr[rax+rax*8-1]); dump();
mov (ecx, ptr[rax+rax*8-1000]); dump();
mov (ecx, ptr[rax+rcx+0]); dump();
mov (ecx, ptr[rax+rcx+1]); dump();
mov (ecx, ptr[rax+rcx+1000]); dump();
mov (ecx, ptr[rax+rcx-1]); dump();
mov (ecx, ptr[rax+rcx-1000]); dump();
mov (ecx, ptr[rax+rcx*1+0]); dump();
mov (ecx, ptr[rax+rcx*1+1]); dump();
mov (ecx, ptr[rax+rcx*1+1000]); dump();
mov (ecx, ptr[rax+rcx*1-1]); dump();
mov (ecx, ptr[rax+rcx*1-1000]); dump();
mov (ecx, ptr[rax+rcx*2+0]); dump();
mov (ecx, ptr[rax+rcx*2+1]); dump();
mov (ecx, ptr[rax+rcx*2+1000]); dump();
mov (ecx, ptr[rax+rcx*2-1]); dump();
mov (ecx, ptr[rax+rcx*2-1000]); dump();
mov (ecx, ptr[rax+rcx*4+0]); dump();
mov (ecx, ptr[rax+rcx*4+1]); dump();
mov (ecx, ptr[rax+rcx*4+1000]); dump();
mov (ecx, ptr[rax+rcx*4-1]); dump();
mov (ecx, ptr[rax+rcx*4-1000]); dump();
mov (ecx, ptr[rax+rcx*8+0]); dump();
mov (ecx, ptr[rax+rcx*8+1]); dump();
mov (ecx, ptr[rax+rcx*8+1000]); dump();
mov (ecx, ptr[rax+rcx*8-1]); dump();
mov (ecx, ptr[rax+rcx*8-1000]); dump();
mov (ecx, ptr[rax+rdx+0]); dump();
mov (ecx, ptr[rax+rdx+1]); dump();
mov (ecx, ptr[rax+rdx+1000]); dump();
mov (ecx, ptr[rax+rdx-1]); dump();
mov (ecx, ptr[rax+rdx-1000]); dump();
mov (ecx, ptr[rax+rdx*1+0]); dump();
mov (ecx, ptr[rax+rdx*1+1]); dump();
mov (ecx, ptr[rax+rdx*1+1000]); dump();
mov (ecx, ptr[rax+rdx*1-1]); dump();
mov (ecx, ptr[rax+rdx*1-1000]); dump();
mov (ecx, ptr[rax+rdx*2+0]); dump();
mov (ecx, ptr[rax+rdx*2+1]); dump();
mov (ecx, ptr[rax+rdx*2+1000]); dump();
mov (ecx, ptr[rax+rdx*2-1]); dump();
mov (ecx, ptr[rax+rdx*2-1000]); dump();
mov (ecx, ptr[rax+rdx*4+0]); dump();
mov (ecx, ptr[rax+rdx*4+1]); dump();
mov (ecx, ptr[rax+rdx*4+1000]); dump();
mov (ecx, ptr[rax+rdx*4-1]); dump();
mov (ecx, ptr[rax+rdx*4-1000]); dump();
mov (ecx, ptr[rax+rdx*8+0]); dump();
mov (ecx, ptr[rax+rdx*8+1]); dump();
mov (ecx, ptr[rax+rdx*8+1000]); dump();
mov (ecx, ptr[rax+rdx*8-1]); dump();
mov (ecx, ptr[rax+rdx*8-1000]); dump();
mov (ecx, ptr[rax+rbx+0]); dump();
mov (ecx, ptr[rax+rbx+1]); dump();
mov (ecx, ptr[rax+rbx+1000]); dump();
mov (ecx, ptr[rax+rbx-1]); dump();
mov (ecx, ptr[rax+rbx-1000]); dump();
mov (ecx, ptr[rax+rbx*1+0]); dump();
mov (ecx, ptr[rax+rbx*1+1]); dump();
mov (ecx, ptr[rax+rbx*1+1000]); dump();
mov (ecx, ptr[rax+rbx*1-1]); dump();
mov (ecx, ptr[rax+rbx*1-1000]); dump();
mov (ecx, ptr[rax+rbx*2+0]); dump();
mov (ecx, ptr[rax+rbx*2+1]); dump();
mov (ecx, ptr[rax+rbx*2+1000]); dump();
mov (ecx, ptr[rax+rbx*2-1]); dump();
mov (ecx, ptr[rax+rbx*2-1000]); dump();
mov (ecx, ptr[rax+rbx*4+0]); dump();
mov (ecx, ptr[rax+rbx*4+1]); dump();
mov (ecx, ptr[rax+rbx*4+1000]); dump();
mov (ecx, ptr[rax+rbx*4-1]); dump();
mov (ecx, ptr[rax+rbx*4-1000]); dump();
mov (ecx, ptr[rax+rbx*8+0]); dump();
mov (ecx, ptr[rax+rbx*8+1]); dump();
mov (ecx, ptr[rax+rbx*8+1000]); dump();
mov (ecx, ptr[rax+rbx*8-1]); dump();
mov (ecx, ptr[rax+rbx*8-1000]); dump();
}
    void gen1(){
mov (ecx, ptr[rax+rbp+0]); dump();
mov (ecx, ptr[rax+rbp+1]); dump();
mov (ecx, ptr[rax+rbp+1000]); dump();
mov (ecx, ptr[rax+rbp-1]); dump();
mov (ecx, ptr[rax+rbp-1000]); dump();
mov (ecx, ptr[rax+rbp*1+0]); dump();
mov (ecx, ptr[rax+rbp*1+1]); dump();
mov (ecx, ptr[rax+rbp*1+1000]); dump();
mov (ecx, ptr[rax+rbp*1-1]); dump();
mov (ecx, ptr[rax+rbp*1-1000]); dump();
mov (ecx, ptr[rax+rbp*2+0]); dump();
mov (ecx, ptr[rax+rbp*2+1]); dump();
mov (ecx, ptr[rax+rbp*2+1000]); dump();
mov (ecx, ptr[rax+rbp*2-1]); dump();
mov (ecx, ptr[rax+rbp*2-1000]); dump();
mov (ecx, ptr[rax+rbp*4+0]); dump();
mov (ecx, ptr[rax+rbp*4+1]); dump();
mov (ecx, ptr[rax+rbp*4+1000]); dump();
mov (ecx, ptr[rax+rbp*4-1]); dump();
mov (ecx, ptr[rax+rbp*4-1000]); dump();
mov (ecx, ptr[rax+rbp*8+0]); dump();
mov (ecx, ptr[rax+rbp*8+1]); dump();
mov (ecx, ptr[rax+rbp*8+1000]); dump();
mov (ecx, ptr[rax+rbp*8-1]); dump();
mov (ecx, ptr[rax+rbp*8-1000]); dump();
mov (ecx, ptr[rax+rsi+0]); dump();
mov (ecx, ptr[rax+rsi+1]); dump();
mov (ecx, ptr[rax+rsi+1000]); dump();
mov (ecx, ptr[rax+rsi-1]); dump();
mov (ecx, ptr[rax+rsi-1000]); dump();
mov (ecx, ptr[rax+rsi*1+0]); dump();
mov (ecx, ptr[rax+rsi*1+1]); dump();
mov (ecx, ptr[rax+rsi*1+1000]); dump();
mov (ecx, ptr[rax+rsi*1-1]); dump();
mov (ecx, ptr[rax+rsi*1-1000]); dump();
mov (ecx, ptr[rax+rsi*2+0]); dump();
mov (ecx, ptr[rax+rsi*2+1]); dump();
mov (ecx, ptr[rax+rsi*2+1000]); dump();
mov (ecx, ptr[rax+rsi*2-1]); dump();
mov (ecx, ptr[rax+rsi*2-1000]); dump();
mov (ecx, ptr[rax+rsi*4+0]); dump();
mov (ecx, ptr[rax+rsi*4+1]); dump();
mov (ecx, ptr[rax+rsi*4+1000]); dump();
mov (ecx, ptr[rax+rsi*4-1]); dump();
mov (ecx, ptr[rax+rsi*4-1000]); dump();
mov (ecx, ptr[rax+rsi*8+0]); dump();
mov (ecx, ptr[rax+rsi*8+1]); dump();
mov (ecx, ptr[rax+rsi*8+1000]); dump();
mov (ecx, ptr[rax+rsi*8-1]); dump();
mov (ecx, ptr[rax+rsi*8-1000]); dump();
mov (ecx, ptr[rax+rdi+0]); dump();
mov (ecx, ptr[rax+rdi+1]); dump();
mov (ecx, ptr[rax+rdi+1000]); dump();
mov (ecx, ptr[rax+rdi-1]); dump();
mov (ecx, ptr[rax+rdi-1000]); dump();
mov (ecx, ptr[rax+rdi*1+0]); dump();
mov (ecx, ptr[rax+rdi*1+1]); dump();
mov (ecx, ptr[rax+rdi*1+1000]); dump();
mov (ecx, ptr[rax+rdi*1-1]); dump();
mov (ecx, ptr[rax+rdi*1-1000]); dump();
mov (ecx, ptr[rax+rdi*2+0]); dump();
mov (ecx, ptr[rax+rdi*2+1]); dump();
mov (ecx, ptr[rax+rdi*2+1000]); dump();
mov (ecx, ptr[rax+rdi*2-1]); dump();
mov (ecx, ptr[rax+rdi*2-1000]); dump();
mov (ecx, ptr[rax+rdi*4+0]); dump();
mov (ecx, ptr[rax+rdi*4+1]); dump();
mov (ecx, ptr[rax+rdi*4+1000]); dump();
mov (ecx, ptr[rax+rdi*4-1]); dump();
mov (ecx, ptr[rax+rdi*4-1000]); dump();
mov (ecx, ptr[rax+rdi*8+0]); dump();
mov (ecx, ptr[rax+rdi*8+1]); dump();
mov (ecx, ptr[rax+rdi*8+1000]); dump();
mov (ecx, ptr[rax+rdi*8-1]); dump();
mov (ecx, ptr[rax+rdi*8-1000]); dump();
mov (ecx, ptr[rax+r9+0]); dump();
mov (ecx, ptr[rax+r9+1]); dump();
mov (ecx, ptr[rax+r9+1000]); dump();
mov (ecx, ptr[rax+r9-1]); dump();
mov (ecx, ptr[rax+r9-1000]); dump();
mov (ecx, ptr[rax+r9*1+0]); dump();
mov (ecx, ptr[rax+r9*1+1]); dump();
mov (ecx, ptr[rax+r9*1+1000]); dump();
mov (ecx, ptr[rax+r9*1-1]); dump();
mov (ecx, ptr[rax+r9*1-1000]); dump();
mov (ecx, ptr[rax+r9*2+0]); dump();
mov (ecx, ptr[rax+r9*2+1]); dump();
mov (ecx, ptr[rax+r9*2+1000]); dump();
mov (ecx, ptr[rax+r9*2-1]); dump();
mov (ecx, ptr[rax+r9*2-1000]); dump();
mov (ecx, ptr[rax+r9*4+0]); dump();
mov (ecx, ptr[rax+r9*4+1]); dump();
mov (ecx, ptr[rax+r9*4+1000]); dump();
mov (ecx, ptr[rax+r9*4-1]); dump();
mov (ecx, ptr[rax+r9*4-1000]); dump();
mov (ecx, ptr[rax+r9*8+0]); dump();
mov (ecx, ptr[rax+r9*8+1]); dump();
mov (ecx, ptr[rax+r9*8+1000]); dump();
mov (ecx, ptr[rax+r9*8-1]); dump();
mov (ecx, ptr[rax+r9*8-1000]); dump();
}
    void gen2(){
mov (ecx, ptr[rax+r10+0]); dump();
mov (ecx, ptr[rax+r10+1]); dump();
mov (ecx, ptr[rax+r10+1000]); dump();
mov (ecx, ptr[rax+r10-1]); dump();
mov (ecx, ptr[rax+r10-1000]); dump();
mov (ecx, ptr[rax+r10*1+0]); dump();
mov (ecx, ptr[rax+r10*1+1]); dump();
mov (ecx, ptr[rax+r10*1+1000]); dump();
mov (ecx, ptr[rax+r10*1-1]); dump();
mov (ecx, ptr[rax+r10*1-1000]); dump();
mov (ecx, ptr[rax+r10*2+0]); dump();
mov (ecx, ptr[rax+r10*2+1]); dump();
mov (ecx, ptr[rax+r10*2+1000]); dump();
mov (ecx, ptr[rax+r10*2-1]); dump();
mov (ecx, ptr[rax+r10*2-1000]); dump();
mov (ecx, ptr[rax+r10*4+0]); dump();
mov (ecx, ptr[rax+r10*4+1]); dump();
mov (ecx, ptr[rax+r10*4+1000]); dump();
mov (ecx, ptr[rax+r10*4-1]); dump();
mov (ecx, ptr[rax+r10*4-1000]); dump();
mov (ecx, ptr[rax+r10*8+0]); dump();
mov (ecx, ptr[rax+r10*8+1]); dump();
mov (ecx, ptr[rax+r10*8+1000]); dump();
mov (ecx, ptr[rax+r10*8-1]); dump();
mov (ecx, ptr[rax+r10*8-1000]); dump();
mov (ecx, ptr[rax+r11+0]); dump();
mov (ecx, ptr[rax+r11+1]); dump();
mov (ecx, ptr[rax+r11+1000]); dump();
mov (ecx, ptr[rax+r11-1]); dump();
mov (ecx, ptr[rax+r11-1000]); dump();
mov (ecx, ptr[rax+r11*1+0]); dump();
mov (ecx, ptr[rax+r11*1+1]); dump();
mov (ecx, ptr[rax+r11*1+1000]); dump();
mov (ecx, ptr[rax+r11*1-1]); dump();
mov (ecx, ptr[rax+r11*1-1000]); dump();
mov (ecx, ptr[rax+r11*2+0]); dump();
mov (ecx, ptr[rax+r11*2+1]); dump();
mov (ecx, ptr[rax+r11*2+1000]); dump();
mov (ecx, ptr[rax+r11*2-1]); dump();
mov (ecx, ptr[rax+r11*2-1000]); dump();
mov (ecx, ptr[rax+r11*4+0]); dump();
mov (ecx, ptr[rax+r11*4+1]); dump();
mov (ecx, ptr[rax+r11*4+1000]); dump();
mov (ecx, ptr[rax+r11*4-1]); dump();
mov (ecx, ptr[rax+r11*4-1000]); dump();
mov (ecx, ptr[rax+r11*8+0]); dump();
mov (ecx, ptr[rax+r11*8+1]); dump();
mov (ecx, ptr[rax+r11*8+1000]); dump();
mov (ecx, ptr[rax+r11*8-1]); dump();
mov (ecx, ptr[rax+r11*8-1000]); dump();
mov (ecx, ptr[rax+r12+0]); dump();
mov (ecx, ptr[rax+r12+1]); dump();
mov (ecx, ptr[rax+r12+1000]); dump();
mov (ecx, ptr[rax+r12-1]); dump();
mov (ecx, ptr[rax+r12-1000]); dump();
mov (ecx, ptr[rax+r12*1+0]); dump();
mov (ecx, ptr[rax+r12*1+1]); dump();
mov (ecx, ptr[rax+r12*1+1000]); dump();
mov (ecx, ptr[rax+r12*1-1]); dump();
mov (ecx, ptr[rax+r12*1-1000]); dump();
mov (ecx, ptr[rax+r12*2+0]); dump();
mov (ecx, ptr[rax+r12*2+1]); dump();
mov (ecx, ptr[rax+r12*2+1000]); dump();
mov (ecx, ptr[rax+r12*2-1]); dump();
mov (ecx, ptr[rax+r12*2-1000]); dump();
mov (ecx, ptr[rax+r12*4+0]); dump();
mov (ecx, ptr[rax+r12*4+1]); dump();
mov (ecx, ptr[rax+r12*4+1000]); dump();
mov (ecx, ptr[rax+r12*4-1]); dump();
mov (ecx, ptr[rax+r12*4-1000]); dump();
mov (ecx, ptr[rax+r12*8+0]); dump();
mov (ecx, ptr[rax+r12*8+1]); dump();
mov (ecx, ptr[rax+r12*8+1000]); dump();
mov (ecx, ptr[rax+r12*8-1]); dump();
mov (ecx, ptr[rax+r12*8-1000]); dump();
mov (ecx, ptr[rax+r13+0]); dump();
mov (ecx, ptr[rax+r13+1]); dump();
mov (ecx, ptr[rax+r13+1000]); dump();
mov (ecx, ptr[rax+r13-1]); dump();
mov (ecx, ptr[rax+r13-1000]); dump();
mov (ecx, ptr[rax+r13*1+0]); dump();
mov (ecx, ptr[rax+r13*1+1]); dump();
mov (ecx, ptr[rax+r13*1+1000]); dump();
mov (ecx, ptr[rax+r13*1-1]); dump();
mov (ecx, ptr[rax+r13*1-1000]); dump();
mov (ecx, ptr[rax+r13*2+0]); dump();
mov (ecx, ptr[rax+r13*2+1]); dump();
mov (ecx, ptr[rax+r13*2+1000]); dump();
mov (ecx, ptr[rax+r13*2-1]); dump();
mov (ecx, ptr[rax+r13*2-1000]); dump();
mov (ecx, ptr[rax+r13*4+0]); dump();
mov (ecx, ptr[rax+r13*4+1]); dump();
mov (ecx, ptr[rax+r13*4+1000]); dump();
mov (ecx, ptr[rax+r13*4-1]); dump();
mov (ecx, ptr[rax+r13*4-1000]); dump();
mov (ecx, ptr[rax+r13*8+0]); dump();
mov (ecx, ptr[rax+r13*8+1]); dump();
mov (ecx, ptr[rax+r13*8+1000]); dump();
mov (ecx, ptr[rax+r13*8-1]); dump();
mov (ecx, ptr[rax+r13*8-1000]); dump();
}
    void gen3(){
mov (ecx, ptr[rax+r14+0]); dump();
mov (ecx, ptr[rax+r14+1]); dump();
mov (ecx, ptr[rax+r14+1000]); dump();
mov (ecx, ptr[rax+r14-1]); dump();
mov (ecx, ptr[rax+r14-1000]); dump();
mov (ecx, ptr[rax+r14*1+0]); dump();
mov (ecx, ptr[rax+r14*1+1]); dump();
mov (ecx, ptr[rax+r14*1+1000]); dump();
mov (ecx, ptr[rax+r14*1-1]); dump();
mov (ecx, ptr[rax+r14*1-1000]); dump();
mov (ecx, ptr[rax+r14*2+0]); dump();
mov (ecx, ptr[rax+r14*2+1]); dump();
mov (ecx, ptr[rax+r14*2+1000]); dump();
mov (ecx, ptr[rax+r14*2-1]); dump();
mov (ecx, ptr[rax+r14*2-1000]); dump();
mov (ecx, ptr[rax+r14*4+0]); dump();
mov (ecx, ptr[rax+r14*4+1]); dump();
mov (ecx, ptr[rax+r14*4+1000]); dump();
mov (ecx, ptr[rax+r14*4-1]); dump();
mov (ecx, ptr[rax+r14*4-1000]); dump();
mov (ecx, ptr[rax+r14*8+0]); dump();
mov (ecx, ptr[rax+r14*8+1]); dump();
mov (ecx, ptr[rax+r14*8+1000]); dump();
mov (ecx, ptr[rax+r14*8-1]); dump();
mov (ecx, ptr[rax+r14*8-1000]); dump();
mov (ecx, ptr[rax+r15+0]); dump();
mov (ecx, ptr[rax+r15+1]); dump();
mov (ecx, ptr[rax+r15+1000]); dump();
mov (ecx, ptr[rax+r15-1]); dump();
mov (ecx, ptr[rax+r15-1000]); dump();
mov (ecx, ptr[rax+r15*1+0]); dump();
mov (ecx, ptr[rax+r15*1+1]); dump();
mov (ecx, ptr[rax+r15*1+1000]); dump();
mov (ecx, ptr[rax+r15*1-1]); dump();
mov (ecx, ptr[rax+r15*1-1000]); dump();
mov (ecx, ptr[rax+r15*2+0]); dump();
mov (ecx, ptr[rax+r15*2+1]); dump();
mov (ecx, ptr[rax+r15*2+1000]); dump();
mov (ecx, ptr[rax+r15*2-1]); dump();
mov (ecx, ptr[rax+r15*2-1000]); dump();
mov (ecx, ptr[rax+r15*4+0]); dump();
mov (ecx, ptr[rax+r15*4+1]); dump();
mov (ecx, ptr[rax+r15*4+1000]); dump();
mov (ecx, ptr[rax+r15*4-1]); dump();
mov (ecx, ptr[rax+r15*4-1000]); dump();
mov (ecx, ptr[rax+r15*8+0]); dump();
mov (ecx, ptr[rax+r15*8+1]); dump();
mov (ecx, ptr[rax+r15*8+1000]); dump();
mov (ecx, ptr[rax+r15*8-1]); dump();
mov (ecx, ptr[rax+r15*8-1000]); dump();
mov (ecx, ptr[rax+0]); dump();
mov (ecx, ptr[rax+1]); dump();
mov (ecx, ptr[rax+1000]); dump();
mov (ecx, ptr[rax-1]); dump();
mov (ecx, ptr[rax-1000]); dump();
mov (ecx, ptr[rax+0]); dump();
mov (ecx, ptr[rax+1]); dump();
mov (ecx, ptr[rax+1000]); dump();
mov (ecx, ptr[rax-1]); dump();
mov (ecx, ptr[rax-1000]); dump();
mov (ecx, ptr[rax+0]); dump();
mov (ecx, ptr[rax+1]); dump();
mov (ecx, ptr[rax+1000]); dump();
mov (ecx, ptr[rax-1]); dump();
mov (ecx, ptr[rax-1000]); dump();
mov (ecx, ptr[rax+0]); dump();
mov (ecx, ptr[rax+1]); dump();
mov (ecx, ptr[rax+1000]); dump();
mov (ecx, ptr[rax-1]); dump();
mov (ecx, ptr[rax-1000]); dump();
mov (ecx, ptr[rax+0]); dump();
mov (ecx, ptr[rax+1]); dump();
mov (ecx, ptr[rax+1000]); dump();
mov (ecx, ptr[rax-1]); dump();
mov (ecx, ptr[rax-1000]); dump();
mov (ecx, ptr[rcx+rax+0]); dump();
mov (ecx, ptr[rcx+rax+1]); dump();
mov (ecx, ptr[rcx+rax+1000]); dump();
mov (ecx, ptr[rcx+rax-1]); dump();
mov (ecx, ptr[rcx+rax-1000]); dump();
mov (ecx, ptr[rcx+rax*1+0]); dump();
mov (ecx, ptr[rcx+rax*1+1]); dump();
mov (ecx, ptr[rcx+rax*1+1000]); dump();
mov (ecx, ptr[rcx+rax*1-1]); dump();
mov (ecx, ptr[rcx+rax*1-1000]); dump();
mov (ecx, ptr[rcx+rax*2+0]); dump();
mov (ecx, ptr[rcx+rax*2+1]); dump();
mov (ecx, ptr[rcx+rax*2+1000]); dump();
mov (ecx, ptr[rcx+rax*2-1]); dump();
mov (ecx, ptr[rcx+rax*2-1000]); dump();
mov (ecx, ptr[rcx+rax*4+0]); dump();
mov (ecx, ptr[rcx+rax*4+1]); dump();
mov (ecx, ptr[rcx+rax*4+1000]); dump();
mov (ecx, ptr[rcx+rax*4-1]); dump();
mov (ecx, ptr[rcx+rax*4-1000]); dump();
mov (ecx, ptr[rcx+rax*8+0]); dump();
mov (ecx, ptr[rcx+rax*8+1]); dump();
mov (ecx, ptr[rcx+rax*8+1000]); dump();
mov (ecx, ptr[rcx+rax*8-1]); dump();
mov (ecx, ptr[rcx+rax*8-1000]); dump();
}
    void gen4(){
mov (ecx, ptr[rcx+rcx+0]); dump();
mov (ecx, ptr[rcx+rcx+1]); dump();
mov (ecx, ptr[rcx+rcx+1000]); dump();
mov (ecx, ptr[rcx+rcx-1]); dump();
mov (ecx, ptr[rcx+rcx-1000]); dump();
mov (ecx, ptr[rcx+rcx*1+0]); dump();
mov (ecx, ptr[rcx+rcx*1+1]); dump();
mov (ecx, ptr[rcx+rcx*1+1000]); dump();
mov (ecx, ptr[rcx+rcx*1-1]); dump();
mov (ecx, ptr[rcx+rcx*1-1000]); dump();
mov (ecx, ptr[rcx+rcx*2+0]); dump();
mov (ecx, ptr[rcx+rcx*2+1]); dump();
mov (ecx, ptr[rcx+rcx*2+1000]); dump();
mov (ecx, ptr[rcx+rcx*2-1]); dump();
mov (ecx, ptr[rcx+rcx*2-1000]); dump();
mov (ecx, ptr[rcx+rcx*4+0]); dump();
mov (ecx, ptr[rcx+rcx*4+1]); dump();
mov (ecx, ptr[rcx+rcx*4+1000]); dump();
mov (ecx, ptr[rcx+rcx*4-1]); dump();
mov (ecx, ptr[rcx+rcx*4-1000]); dump();
mov (ecx, ptr[rcx+rcx*8+0]); dump();
mov (ecx, ptr[rcx+rcx*8+1]); dump();
mov (ecx, ptr[rcx+rcx*8+1000]); dump();
mov (ecx, ptr[rcx+rcx*8-1]); dump();
mov (ecx, ptr[rcx+rcx*8-1000]); dump();
mov (ecx, ptr[rcx+rdx+0]); dump();
mov (ecx, ptr[rcx+rdx+1]); dump();
mov (ecx, ptr[rcx+rdx+1000]); dump();
mov (ecx, ptr[rcx+rdx-1]); dump();
mov (ecx, ptr[rcx+rdx-1000]); dump();
mov (ecx, ptr[rcx+rdx*1+0]); dump();
mov (ecx, ptr[rcx+rdx*1+1]); dump();
mov (ecx, ptr[rcx+rdx*1+1000]); dump();
mov (ecx, ptr[rcx+rdx*1-1]); dump();
mov (ecx, ptr[rcx+rdx*1-1000]); dump();
mov (ecx, ptr[rcx+rdx*2+0]); dump();
mov (ecx, ptr[rcx+rdx*2+1]); dump();
mov (ecx, ptr[rcx+rdx*2+1000]); dump();
mov (ecx, ptr[rcx+rdx*2-1]); dump();
mov (ecx, ptr[rcx+rdx*2-1000]); dump();
mov (ecx, ptr[rcx+rdx*4+0]); dump();
mov (ecx, ptr[rcx+rdx*4+1]); dump();
mov (ecx, ptr[rcx+rdx*4+1000]); dump();
mov (ecx, ptr[rcx+rdx*4-1]); dump();
mov (ecx, ptr[rcx+rdx*4-1000]); dump();
mov (ecx, ptr[rcx+rdx*8+0]); dump();
mov (ecx, ptr[rcx+rdx*8+1]); dump();
mov (ecx, ptr[rcx+rdx*8+1000]); dump();
mov (ecx, ptr[rcx+rdx*8-1]); dump();
mov (ecx, ptr[rcx+rdx*8-1000]); dump();
mov (ecx, ptr[rcx+rbx+0]); dump();
mov (ecx, ptr[rcx+rbx+1]); dump();
mov (ecx, ptr[rcx+rbx+1000]); dump();
mov (ecx, ptr[rcx+rbx-1]); dump();
mov (ecx, ptr[rcx+rbx-1000]); dump();
mov (ecx, ptr[rcx+rbx*1+0]); dump();
mov (ecx, ptr[rcx+rbx*1+1]); dump();
mov (ecx, ptr[rcx+rbx*1+1000]); dump();
mov (ecx, ptr[rcx+rbx*1-1]); dump();
mov (ecx, ptr[rcx+rbx*1-1000]); dump();
mov (ecx, ptr[rcx+rbx*2+0]); dump();
mov (ecx, ptr[rcx+rbx*2+1]); dump();
mov (ecx, ptr[rcx+rbx*2+1000]); dump();
mov (ecx, ptr[rcx+rbx*2-1]); dump();
mov (ecx, ptr[rcx+rbx*2-1000]); dump();
mov (ecx, ptr[rcx+rbx*4+0]); dump();
mov (ecx, ptr[rcx+rbx*4+1]); dump();
mov (ecx, ptr[rcx+rbx*4+1000]); dump();
mov (ecx, ptr[rcx+rbx*4-1]); dump();
mov (ecx, ptr[rcx+rbx*4-1000]); dump();
mov (ecx, ptr[rcx+rbx*8+0]); dump();
mov (ecx, ptr[rcx+rbx*8+1]); dump();
mov (ecx, ptr[rcx+rbx*8+1000]); dump();
mov (ecx, ptr[rcx+rbx*8-1]); dump();
mov (ecx, ptr[rcx+rbx*8-1000]); dump();
mov (ecx, ptr[rcx+rbp+0]); dump();
mov (ecx, ptr[rcx+rbp+1]); dump();
mov (ecx, ptr[rcx+rbp+1000]); dump();
mov (ecx, ptr[rcx+rbp-1]); dump();
mov (ecx, ptr[rcx+rbp-1000]); dump();
mov (ecx, ptr[rcx+rbp*1+0]); dump();
mov (ecx, ptr[rcx+rbp*1+1]); dump();
mov (ecx, ptr[rcx+rbp*1+1000]); dump();
mov (ecx, ptr[rcx+rbp*1-1]); dump();
mov (ecx, ptr[rcx+rbp*1-1000]); dump();
mov (ecx, ptr[rcx+rbp*2+0]); dump();
mov (ecx, ptr[rcx+rbp*2+1]); dump();
mov (ecx, ptr[rcx+rbp*2+1000]); dump();
mov (ecx, ptr[rcx+rbp*2-1]); dump();
mov (ecx, ptr[rcx+rbp*2-1000]); dump();
mov (ecx, ptr[rcx+rbp*4+0]); dump();
mov (ecx, ptr[rcx+rbp*4+1]); dump();
mov (ecx, ptr[rcx+rbp*4+1000]); dump();
mov (ecx, ptr[rcx+rbp*4-1]); dump();
mov (ecx, ptr[rcx+rbp*4-1000]); dump();
mov (ecx, ptr[rcx+rbp*8+0]); dump();
mov (ecx, ptr[rcx+rbp*8+1]); dump();
mov (ecx, ptr[rcx+rbp*8+1000]); dump();
mov (ecx, ptr[rcx+rbp*8-1]); dump();
mov (ecx, ptr[rcx+rbp*8-1000]); dump();
}
    void gen5(){
mov (ecx, ptr[rcx+rsi+0]); dump();
mov (ecx, ptr[rcx+rsi+1]); dump();
mov (ecx, ptr[rcx+rsi+1000]); dump();
mov (ecx, ptr[rcx+rsi-1]); dump();
mov (ecx, ptr[rcx+rsi-1000]); dump();
mov (ecx, ptr[rcx+rsi*1+0]); dump();
mov (ecx, ptr[rcx+rsi*1+1]); dump();
mov (ecx, ptr[rcx+rsi*1+1000]); dump();
mov (ecx, ptr[rcx+rsi*1-1]); dump();
mov (ecx, ptr[rcx+rsi*1-1000]); dump();
mov (ecx, ptr[rcx+rsi*2+0]); dump();
mov (ecx, ptr[rcx+rsi*2+1]); dump();
mov (ecx, ptr[rcx+rsi*2+1000]); dump();
mov (ecx, ptr[rcx+rsi*2-1]); dump();
mov (ecx, ptr[rcx+rsi*2-1000]); dump();
mov (ecx, ptr[rcx+rsi*4+0]); dump();
mov (ecx, ptr[rcx+rsi*4+1]); dump();
mov (ecx, ptr[rcx+rsi*4+1000]); dump();
mov (ecx, ptr[rcx+rsi*4-1]); dump();
mov (ecx, ptr[rcx+rsi*4-1000]); dump();
mov (ecx, ptr[rcx+rsi*8+0]); dump();
mov (ecx, ptr[rcx+rsi*8+1]); dump();
mov (ecx, ptr[rcx+rsi*8+1000]); dump();
mov (ecx, ptr[rcx+rsi*8-1]); dump();
mov (ecx, ptr[rcx+rsi*8-1000]); dump();
mov (ecx, ptr[rcx+rdi+0]); dump();
mov (ecx, ptr[rcx+rdi+1]); dump();
mov (ecx, ptr[rcx+rdi+1000]); dump();
mov (ecx, ptr[rcx+rdi-1]); dump();
mov (ecx, ptr[rcx+rdi-1000]); dump();
mov (ecx, ptr[rcx+rdi*1+0]); dump();
mov (ecx, ptr[rcx+rdi*1+1]); dump();
mov (ecx, ptr[rcx+rdi*1+1000]); dump();
mov (ecx, ptr[rcx+rdi*1-1]); dump();
mov (ecx, ptr[rcx+rdi*1-1000]); dump();
mov (ecx, ptr[rcx+rdi*2+0]); dump();
mov (ecx, ptr[rcx+rdi*2+1]); dump();
mov (ecx, ptr[rcx+rdi*2+1000]); dump();
mov (ecx, ptr[rcx+rdi*2-1]); dump();
mov (ecx, ptr[rcx+rdi*2-1000]); dump();
mov (ecx, ptr[rcx+rdi*4+0]); dump();
mov (ecx, ptr[rcx+rdi*4+1]); dump();
mov (ecx, ptr[rcx+rdi*4+1000]); dump();
mov (ecx, ptr[rcx+rdi*4-1]); dump();
mov (ecx, ptr[rcx+rdi*4-1000]); dump();
mov (ecx, ptr[rcx+rdi*8+0]); dump();
mov (ecx, ptr[rcx+rdi*8+1]); dump();
mov (ecx, ptr[rcx+rdi*8+1000]); dump();
mov (ecx, ptr[rcx+rdi*8-1]); dump();
mov (ecx, ptr[rcx+rdi*8-1000]); dump();
mov (ecx, ptr[rcx+r9+0]); dump();
mov (ecx, ptr[rcx+r9+1]); dump();
mov (ecx, ptr[rcx+r9+1000]); dump();
mov (ecx, ptr[rcx+r9-1]); dump();
mov (ecx, ptr[rcx+r9-1000]); dump();
mov (ecx, ptr[rcx+r9*1+0]); dump();
mov (ecx, ptr[rcx+r9*1+1]); dump();
mov (ecx, ptr[rcx+r9*1+1000]); dump();
mov (ecx, ptr[rcx+r9*1-1]); dump();
mov (ecx, ptr[rcx+r9*1-1000]); dump();
mov (ecx, ptr[rcx+r9*2+0]); dump();
mov (ecx, ptr[rcx+r9*2+1]); dump();
mov (ecx, ptr[rcx+r9*2+1000]); dump();
mov (ecx, ptr[rcx+r9*2-1]); dump();
mov (ecx, ptr[rcx+r9*2-1000]); dump();
mov (ecx, ptr[rcx+r9*4+0]); dump();
mov (ecx, ptr[rcx+r9*4+1]); dump();
mov (ecx, ptr[rcx+r9*4+1000]); dump();
mov (ecx, ptr[rcx+r9*4-1]); dump();
mov (ecx, ptr[rcx+r9*4-1000]); dump();
mov (ecx, ptr[rcx+r9*8+0]); dump();
mov (ecx, ptr[rcx+r9*8+1]); dump();
mov (ecx, ptr[rcx+r9*8+1000]); dump();
mov (ecx, ptr[rcx+r9*8-1]); dump();
mov (ecx, ptr[rcx+r9*8-1000]); dump();
mov (ecx, ptr[rcx+r10+0]); dump();
mov (ecx, ptr[rcx+r10+1]); dump();
mov (ecx, ptr[rcx+r10+1000]); dump();
mov (ecx, ptr[rcx+r10-1]); dump();
mov (ecx, ptr[rcx+r10-1000]); dump();
mov (ecx, ptr[rcx+r10*1+0]); dump();
mov (ecx, ptr[rcx+r10*1+1]); dump();
mov (ecx, ptr[rcx+r10*1+1000]); dump();
mov (ecx, ptr[rcx+r10*1-1]); dump();
mov (ecx, ptr[rcx+r10*1-1000]); dump();
mov (ecx, ptr[rcx+r10*2+0]); dump();
mov (ecx, ptr[rcx+r10*2+1]); dump();
mov (ecx, ptr[rcx+r10*2+1000]); dump();
mov (ecx, ptr[rcx+r10*2-1]); dump();
mov (ecx, ptr[rcx+r10*2-1000]); dump();
mov (ecx, ptr[rcx+r10*4+0]); dump();
mov (ecx, ptr[rcx+r10*4+1]); dump();
mov (ecx, ptr[rcx+r10*4+1000]); dump();
mov (ecx, ptr[rcx+r10*4-1]); dump();
mov (ecx, ptr[rcx+r10*4-1000]); dump();
mov (ecx, ptr[rcx+r10*8+0]); dump();
mov (ecx, ptr[rcx+r10*8+1]); dump();
mov (ecx, ptr[rcx+r10*8+1000]); dump();
mov (ecx, ptr[rcx+r10*8-1]); dump();
mov (ecx, ptr[rcx+r10*8-1000]); dump();
}
    void gen6(){
mov (ecx, ptr[rcx+r11+0]); dump();
mov (ecx, ptr[rcx+r11+1]); dump();
mov (ecx, ptr[rcx+r11+1000]); dump();
mov (ecx, ptr[rcx+r11-1]); dump();
mov (ecx, ptr[rcx+r11-1000]); dump();
mov (ecx, ptr[rcx+r11*1+0]); dump();
mov (ecx, ptr[rcx+r11*1+1]); dump();
mov (ecx, ptr[rcx+r11*1+1000]); dump();
mov (ecx, ptr[rcx+r11*1-1]); dump();
mov (ecx, ptr[rcx+r11*1-1000]); dump();
mov (ecx, ptr[rcx+r11*2+0]); dump();
mov (ecx, ptr[rcx+r11*2+1]); dump();
mov (ecx, ptr[rcx+r11*2+1000]); dump();
mov (ecx, ptr[rcx+r11*2-1]); dump();
mov (ecx, ptr[rcx+r11*2-1000]); dump();
mov (ecx, ptr[rcx+r11*4+0]); dump();
mov (ecx, ptr[rcx+r11*4+1]); dump();
mov (ecx, ptr[rcx+r11*4+1000]); dump();
mov (ecx, ptr[rcx+r11*4-1]); dump();
mov (ecx, ptr[rcx+r11*4-1000]); dump();
mov (ecx, ptr[rcx+r11*8+0]); dump();
mov (ecx, ptr[rcx+r11*8+1]); dump();
mov (ecx, ptr[rcx+r11*8+1000]); dump();
mov (ecx, ptr[rcx+r11*8-1]); dump();
mov (ecx, ptr[rcx+r11*8-1000]); dump();
mov (ecx, ptr[rcx+r12+0]); dump();
mov (ecx, ptr[rcx+r12+1]); dump();
mov (ecx, ptr[rcx+r12+1000]); dump();
mov (ecx, ptr[rcx+r12-1]); dump();
mov (ecx, ptr[rcx+r12-1000]); dump();
mov (ecx, ptr[rcx+r12*1+0]); dump();
mov (ecx, ptr[rcx+r12*1+1]); dump();
mov (ecx, ptr[rcx+r12*1+1000]); dump();
mov (ecx, ptr[rcx+r12*1-1]); dump();
mov (ecx, ptr[rcx+r12*1-1000]); dump();
mov (ecx, ptr[rcx+r12*2+0]); dump();
mov (ecx, ptr[rcx+r12*2+1]); dump();
mov (ecx, ptr[rcx+r12*2+1000]); dump();
mov (ecx, ptr[rcx+r12*2-1]); dump();
mov (ecx, ptr[rcx+r12*2-1000]); dump();
mov (ecx, ptr[rcx+r12*4+0]); dump();
mov (ecx, ptr[rcx+r12*4+1]); dump();
mov (ecx, ptr[rcx+r12*4+1000]); dump();
mov (ecx, ptr[rcx+r12*4-1]); dump();
mov (ecx, ptr[rcx+r12*4-1000]); dump();
mov (ecx, ptr[rcx+r12*8+0]); dump();
mov (ecx, ptr[rcx+r12*8+1]); dump();
mov (ecx, ptr[rcx+r12*8+1000]); dump();
mov (ecx, ptr[rcx+r12*8-1]); dump();
mov (ecx, ptr[rcx+r12*8-1000]); dump();
mov (ecx, ptr[rcx+r13+0]); dump();
mov (ecx, ptr[rcx+r13+1]); dump();
mov (ecx, ptr[rcx+r13+1000]); dump();
mov (ecx, ptr[rcx+r13-1]); dump();
mov (ecx, ptr[rcx+r13-1000]); dump();
mov (ecx, ptr[rcx+r13*1+0]); dump();
mov (ecx, ptr[rcx+r13*1+1]); dump();
mov (ecx, ptr[rcx+r13*1+1000]); dump();
mov (ecx, ptr[rcx+r13*1-1]); dump();
mov (ecx, ptr[rcx+r13*1-1000]); dump();
mov (ecx, ptr[rcx+r13*2+0]); dump();
mov (ecx, ptr[rcx+r13*2+1]); dump();
mov (ecx, ptr[rcx+r13*2+1000]); dump();
mov (ecx, ptr[rcx+r13*2-1]); dump();
mov (ecx, ptr[rcx+r13*2-1000]); dump();
mov (ecx, ptr[rcx+r13*4+0]); dump();
mov (ecx, ptr[rcx+r13*4+1]); dump();
mov (ecx, ptr[rcx+r13*4+1000]); dump();
mov (ecx, ptr[rcx+r13*4-1]); dump();
mov (ecx, ptr[rcx+r13*4-1000]); dump();
mov (ecx, ptr[rcx+r13*8+0]); dump();
mov (ecx, ptr[rcx+r13*8+1]); dump();
mov (ecx, ptr[rcx+r13*8+1000]); dump();
mov (ecx, ptr[rcx+r13*8-1]); dump();
mov (ecx, ptr[rcx+r13*8-1000]); dump();
mov (ecx, ptr[rcx+r14+0]); dump();
mov (ecx, ptr[rcx+r14+1]); dump();
mov (ecx, ptr[rcx+r14+1000]); dump();
mov (ecx, ptr[rcx+r14-1]); dump();
mov (ecx, ptr[rcx+r14-1000]); dump();
mov (ecx, ptr[rcx+r14*1+0]); dump();
mov (ecx, ptr[rcx+r14*1+1]); dump();
mov (ecx, ptr[rcx+r14*1+1000]); dump();
mov (ecx, ptr[rcx+r14*1-1]); dump();
mov (ecx, ptr[rcx+r14*1-1000]); dump();
mov (ecx, ptr[rcx+r14*2+0]); dump();
mov (ecx, ptr[rcx+r14*2+1]); dump();
mov (ecx, ptr[rcx+r14*2+1000]); dump();
mov (ecx, ptr[rcx+r14*2-1]); dump();
mov (ecx, ptr[rcx+r14*2-1000]); dump();
mov (ecx, ptr[rcx+r14*4+0]); dump();
mov (ecx, ptr[rcx+r14*4+1]); dump();
mov (ecx, ptr[rcx+r14*4+1000]); dump();
mov (ecx, ptr[rcx+r14*4-1]); dump();
mov (ecx, ptr[rcx+r14*4-1000]); dump();
mov (ecx, ptr[rcx+r14*8+0]); dump();
mov (ecx, ptr[rcx+r14*8+1]); dump();
mov (ecx, ptr[rcx+r14*8+1000]); dump();
mov (ecx, ptr[rcx+r14*8-1]); dump();
mov (ecx, ptr[rcx+r14*8-1000]); dump();
}
    void gen7(){
mov (ecx, ptr[rcx+r15+0]); dump();
mov (ecx, ptr[rcx+r15+1]); dump();
mov (ecx, ptr[rcx+r15+1000]); dump();
mov (ecx, ptr[rcx+r15-1]); dump();
mov (ecx, ptr[rcx+r15-1000]); dump();
mov (ecx, ptr[rcx+r15*1+0]); dump();
mov (ecx, ptr[rcx+r15*1+1]); dump();
mov (ecx, ptr[rcx+r15*1+1000]); dump();
mov (ecx, ptr[rcx+r15*1-1]); dump();
mov (ecx, ptr[rcx+r15*1-1000]); dump();
mov (ecx, ptr[rcx+r15*2+0]); dump();
mov (ecx, ptr[rcx+r15*2+1]); dump();
mov (ecx, ptr[rcx+r15*2+1000]); dump();
mov (ecx, ptr[rcx+r15*2-1]); dump();
mov (ecx, ptr[rcx+r15*2-1000]); dump();
mov (ecx, ptr[rcx+r15*4+0]); dump();
mov (ecx, ptr[rcx+r15*4+1]); dump();
mov (ecx, ptr[rcx+r15*4+1000]); dump();
mov (ecx, ptr[rcx+r15*4-1]); dump();
mov (ecx, ptr[rcx+r15*4-1000]); dump();
mov (ecx, ptr[rcx+r15*8+0]); dump();
mov (ecx, ptr[rcx+r15*8+1]); dump();
mov (ecx, ptr[rcx+r15*8+1000]); dump();
mov (ecx, ptr[rcx+r15*8-1]); dump();
mov (ecx, ptr[rcx+r15*8-1000]); dump();
mov (ecx, ptr[rcx+0]); dump();
mov (ecx, ptr[rcx+1]); dump();
mov (ecx, ptr[rcx+1000]); dump();
mov (ecx, ptr[rcx-1]); dump();
mov (ecx, ptr[rcx-1000]); dump();
mov (ecx, ptr[rcx+0]); dump();
mov (ecx, ptr[rcx+1]); dump();
mov (ecx, ptr[rcx+1000]); dump();
mov (ecx, ptr[rcx-1]); dump();
mov (ecx, ptr[rcx-1000]); dump();
mov (ecx, ptr[rcx+0]); dump();
mov (ecx, ptr[rcx+1]); dump();
mov (ecx, ptr[rcx+1000]); dump();
mov (ecx, ptr[rcx-1]); dump();
mov (ecx, ptr[rcx-1000]); dump();
mov (ecx, ptr[rcx+0]); dump();
mov (ecx, ptr[rcx+1]); dump();
mov (ecx, ptr[rcx+1000]); dump();
mov (ecx, ptr[rcx-1]); dump();
mov (ecx, ptr[rcx-1000]); dump();
mov (ecx, ptr[rcx+0]); dump();
mov (ecx, ptr[rcx+1]); dump();
mov (ecx, ptr[rcx+1000]); dump();
mov (ecx, ptr[rcx-1]); dump();
mov (ecx, ptr[rcx-1000]); dump();
mov (ecx, ptr[rdx+rax+0]); dump();
mov (ecx, ptr[rdx+rax+1]); dump();
mov (ecx, ptr[rdx+rax+1000]); dump();
mov (ecx, ptr[rdx+rax-1]); dump();
mov (ecx, ptr[rdx+rax-1000]); dump();
mov (ecx, ptr[rdx+rax*1+0]); dump();
mov (ecx, ptr[rdx+rax*1+1]); dump();
mov (ecx, ptr[rdx+rax*1+1000]); dump();
mov (ecx, ptr[rdx+rax*1-1]); dump();
mov (ecx, ptr[rdx+rax*1-1000]); dump();
mov (ecx, ptr[rdx+rax*2+0]); dump();
mov (ecx, ptr[rdx+rax*2+1]); dump();
mov (ecx, ptr[rdx+rax*2+1000]); dump();
mov (ecx, ptr[rdx+rax*2-1]); dump();
mov (ecx, ptr[rdx+rax*2-1000]); dump();
mov (ecx, ptr[rdx+rax*4+0]); dump();
mov (ecx, ptr[rdx+rax*4+1]); dump();
mov (ecx, ptr[rdx+rax*4+1000]); dump();
mov (ecx, ptr[rdx+rax*4-1]); dump();
mov (ecx, ptr[rdx+rax*4-1000]); dump();
mov (ecx, ptr[rdx+rax*8+0]); dump();
mov (ecx, ptr[rdx+rax*8+1]); dump();
mov (ecx, ptr[rdx+rax*8+1000]); dump();
mov (ecx, ptr[rdx+rax*8-1]); dump();
mov (ecx, ptr[rdx+rax*8-1000]); dump();
mov (ecx, ptr[rdx+rcx+0]); dump();
mov (ecx, ptr[rdx+rcx+1]); dump();
mov (ecx, ptr[rdx+rcx+1000]); dump();
mov (ecx, ptr[rdx+rcx-1]); dump();
mov (ecx, ptr[rdx+rcx-1000]); dump();
mov (ecx, ptr[rdx+rcx*1+0]); dump();
mov (ecx, ptr[rdx+rcx*1+1]); dump();
mov (ecx, ptr[rdx+rcx*1+1000]); dump();
mov (ecx, ptr[rdx+rcx*1-1]); dump();
mov (ecx, ptr[rdx+rcx*1-1000]); dump();
mov (ecx, ptr[rdx+rcx*2+0]); dump();
mov (ecx, ptr[rdx+rcx*2+1]); dump();
mov (ecx, ptr[rdx+rcx*2+1000]); dump();
mov (ecx, ptr[rdx+rcx*2-1]); dump();
mov (ecx, ptr[rdx+rcx*2-1000]); dump();
mov (ecx, ptr[rdx+rcx*4+0]); dump();
mov (ecx, ptr[rdx+rcx*4+1]); dump();
mov (ecx, ptr[rdx+rcx*4+1000]); dump();
mov (ecx, ptr[rdx+rcx*4-1]); dump();
mov (ecx, ptr[rdx+rcx*4-1000]); dump();
mov (ecx, ptr[rdx+rcx*8+0]); dump();
mov (ecx, ptr[rdx+rcx*8+1]); dump();
mov (ecx, ptr[rdx+rcx*8+1000]); dump();
mov (ecx, ptr[rdx+rcx*8-1]); dump();
mov (ecx, ptr[rdx+rcx*8-1000]); dump();
}
    void gen8(){
mov (ecx, ptr[rdx+rdx+0]); dump();
mov (ecx, ptr[rdx+rdx+1]); dump();
mov (ecx, ptr[rdx+rdx+1000]); dump();
mov (ecx, ptr[rdx+rdx-1]); dump();
mov (ecx, ptr[rdx+rdx-1000]); dump();
mov (ecx, ptr[rdx+rdx*1+0]); dump();
mov (ecx, ptr[rdx+rdx*1+1]); dump();
mov (ecx, ptr[rdx+rdx*1+1000]); dump();
mov (ecx, ptr[rdx+rdx*1-1]); dump();
mov (ecx, ptr[rdx+rdx*1-1000]); dump();
mov (ecx, ptr[rdx+rdx*2+0]); dump();
mov (ecx, ptr[rdx+rdx*2+1]); dump();
mov (ecx, ptr[rdx+rdx*2+1000]); dump();
mov (ecx, ptr[rdx+rdx*2-1]); dump();
mov (ecx, ptr[rdx+rdx*2-1000]); dump();
mov (ecx, ptr[rdx+rdx*4+0]); dump();
mov (ecx, ptr[rdx+rdx*4+1]); dump();
mov (ecx, ptr[rdx+rdx*4+1000]); dump();
mov (ecx, ptr[rdx+rdx*4-1]); dump();
mov (ecx, ptr[rdx+rdx*4-1000]); dump();
mov (ecx, ptr[rdx+rdx*8+0]); dump();
mov (ecx, ptr[rdx+rdx*8+1]); dump();
mov (ecx, ptr[rdx+rdx*8+1000]); dump();
mov (ecx, ptr[rdx+rdx*8-1]); dump();
mov (ecx, ptr[rdx+rdx*8-1000]); dump();
mov (ecx, ptr[rdx+rbx+0]); dump();
mov (ecx, ptr[rdx+rbx+1]); dump();
mov (ecx, ptr[rdx+rbx+1000]); dump();
mov (ecx, ptr[rdx+rbx-1]); dump();
mov (ecx, ptr[rdx+rbx-1000]); dump();
mov (ecx, ptr[rdx+rbx*1+0]); dump();
mov (ecx, ptr[rdx+rbx*1+1]); dump();
mov (ecx, ptr[rdx+rbx*1+1000]); dump();
mov (ecx, ptr[rdx+rbx*1-1]); dump();
mov (ecx, ptr[rdx+rbx*1-1000]); dump();
mov (ecx, ptr[rdx+rbx*2+0]); dump();
mov (ecx, ptr[rdx+rbx*2+1]); dump();
mov (ecx, ptr[rdx+rbx*2+1000]); dump();
mov (ecx, ptr[rdx+rbx*2-1]); dump();
mov (ecx, ptr[rdx+rbx*2-1000]); dump();
mov (ecx, ptr[rdx+rbx*4+0]); dump();
mov (ecx, ptr[rdx+rbx*4+1]); dump();
mov (ecx, ptr[rdx+rbx*4+1000]); dump();
mov (ecx, ptr[rdx+rbx*4-1]); dump();
mov (ecx, ptr[rdx+rbx*4-1000]); dump();
mov (ecx, ptr[rdx+rbx*8+0]); dump();
mov (ecx, ptr[rdx+rbx*8+1]); dump();
mov (ecx, ptr[rdx+rbx*8+1000]); dump();
mov (ecx, ptr[rdx+rbx*8-1]); dump();
mov (ecx, ptr[rdx+rbx*8-1000]); dump();
mov (ecx, ptr[rdx+rbp+0]); dump();
mov (ecx, ptr[rdx+rbp+1]); dump();
mov (ecx, ptr[rdx+rbp+1000]); dump();
mov (ecx, ptr[rdx+rbp-1]); dump();
mov (ecx, ptr[rdx+rbp-1000]); dump();
mov (ecx, ptr[rdx+rbp*1+0]); dump();
mov (ecx, ptr[rdx+rbp*1+1]); dump();
mov (ecx, ptr[rdx+rbp*1+1000]); dump();
mov (ecx, ptr[rdx+rbp*1-1]); dump();
mov (ecx, ptr[rdx+rbp*1-1000]); dump();
mov (ecx, ptr[rdx+rbp*2+0]); dump();
mov (ecx, ptr[rdx+rbp*2+1]); dump();
mov (ecx, ptr[rdx+rbp*2+1000]); dump();
mov (ecx, ptr[rdx+rbp*2-1]); dump();
mov (ecx, ptr[rdx+rbp*2-1000]); dump();
mov (ecx, ptr[rdx+rbp*4+0]); dump();
mov (ecx, ptr[rdx+rbp*4+1]); dump();
mov (ecx, ptr[rdx+rbp*4+1000]); dump();
mov (ecx, ptr[rdx+rbp*4-1]); dump();
mov (ecx, ptr[rdx+rbp*4-1000]); dump();
mov (ecx, ptr[rdx+rbp*8+0]); dump();
mov (ecx, ptr[rdx+rbp*8+1]); dump();
mov (ecx, ptr[rdx+rbp*8+1000]); dump();
mov (ecx, ptr[rdx+rbp*8-1]); dump();
mov (ecx, ptr[rdx+rbp*8-1000]); dump();
mov (ecx, ptr[rdx+rsi+0]); dump();
mov (ecx, ptr[rdx+rsi+1]); dump();
mov (ecx, ptr[rdx+rsi+1000]); dump();
mov (ecx, ptr[rdx+rsi-1]); dump();
mov (ecx, ptr[rdx+rsi-1000]); dump();
mov (ecx, ptr[rdx+rsi*1+0]); dump();
mov (ecx, ptr[rdx+rsi*1+1]); dump();
mov (ecx, ptr[rdx+rsi*1+1000]); dump();
mov (ecx, ptr[rdx+rsi*1-1]); dump();
mov (ecx, ptr[rdx+rsi*1-1000]); dump();
mov (ecx, ptr[rdx+rsi*2+0]); dump();
mov (ecx, ptr[rdx+rsi*2+1]); dump();
mov (ecx, ptr[rdx+rsi*2+1000]); dump();
mov (ecx, ptr[rdx+rsi*2-1]); dump();
mov (ecx, ptr[rdx+rsi*2-1000]); dump();
mov (ecx, ptr[rdx+rsi*4+0]); dump();
mov (ecx, ptr[rdx+rsi*4+1]); dump();
mov (ecx, ptr[rdx+rsi*4+1000]); dump();
mov (ecx, ptr[rdx+rsi*4-1]); dump();
mov (ecx, ptr[rdx+rsi*4-1000]); dump();
mov (ecx, ptr[rdx+rsi*8+0]); dump();
mov (ecx, ptr[rdx+rsi*8+1]); dump();
mov (ecx, ptr[rdx+rsi*8+1000]); dump();
mov (ecx, ptr[rdx+rsi*8-1]); dump();
mov (ecx, ptr[rdx+rsi*8-1000]); dump();
}
    void gen9(){
mov (ecx, ptr[rdx+rdi+0]); dump();
mov (ecx, ptr[rdx+rdi+1]); dump();
mov (ecx, ptr[rdx+rdi+1000]); dump();
mov (ecx, ptr[rdx+rdi-1]); dump();
mov (ecx, ptr[rdx+rdi-1000]); dump();
mov (ecx, ptr[rdx+rdi*1+0]); dump();
mov (ecx, ptr[rdx+rdi*1+1]); dump();
mov (ecx, ptr[rdx+rdi*1+1000]); dump();
mov (ecx, ptr[rdx+rdi*1-1]); dump();
mov (ecx, ptr[rdx+rdi*1-1000]); dump();
mov (ecx, ptr[rdx+rdi*2+0]); dump();
mov (ecx, ptr[rdx+rdi*2+1]); dump();
mov (ecx, ptr[rdx+rdi*2+1000]); dump();
mov (ecx, ptr[rdx+rdi*2-1]); dump();
mov (ecx, ptr[rdx+rdi*2-1000]); dump();
mov (ecx, ptr[rdx+rdi*4+0]); dump();
mov (ecx, ptr[rdx+rdi*4+1]); dump();
mov (ecx, ptr[rdx+rdi*4+1000]); dump();
mov (ecx, ptr[rdx+rdi*4-1]); dump();
mov (ecx, ptr[rdx+rdi*4-1000]); dump();
mov (ecx, ptr[rdx+rdi*8+0]); dump();
mov (ecx, ptr[rdx+rdi*8+1]); dump();
mov (ecx, ptr[rdx+rdi*8+1000]); dump();
mov (ecx, ptr[rdx+rdi*8-1]); dump();
mov (ecx, ptr[rdx+rdi*8-1000]); dump();
mov (ecx, ptr[rdx+r9+0]); dump();
mov (ecx, ptr[rdx+r9+1]); dump();
mov (ecx, ptr[rdx+r9+1000]); dump();
mov (ecx, ptr[rdx+r9-1]); dump();
mov (ecx, ptr[rdx+r9-1000]); dump();
mov (ecx, ptr[rdx+r9*1+0]); dump();
mov (ecx, ptr[rdx+r9*1+1]); dump();
mov (ecx, ptr[rdx+r9*1+1000]); dump();
mov (ecx, ptr[rdx+r9*1-1]); dump();
mov (ecx, ptr[rdx+r9*1-1000]); dump();
mov (ecx, ptr[rdx+r9*2+0]); dump();
mov (ecx, ptr[rdx+r9*2+1]); dump();
mov (ecx, ptr[rdx+r9*2+1000]); dump();
mov (ecx, ptr[rdx+r9*2-1]); dump();
mov (ecx, ptr[rdx+r9*2-1000]); dump();
mov (ecx, ptr[rdx+r9*4+0]); dump();
mov (ecx, ptr[rdx+r9*4+1]); dump();
mov (ecx, ptr[rdx+r9*4+1000]); dump();
mov (ecx, ptr[rdx+r9*4-1]); dump();
mov (ecx, ptr[rdx+r9*4-1000]); dump();
mov (ecx, ptr[rdx+r9*8+0]); dump();
mov (ecx, ptr[rdx+r9*8+1]); dump();
mov (ecx, ptr[rdx+r9*8+1000]); dump();
mov (ecx, ptr[rdx+r9*8-1]); dump();
mov (ecx, ptr[rdx+r9*8-1000]); dump();
mov (ecx, ptr[rdx+r10+0]); dump();
mov (ecx, ptr[rdx+r10+1]); dump();
mov (ecx, ptr[rdx+r10+1000]); dump();
mov (ecx, ptr[rdx+r10-1]); dump();
mov (ecx, ptr[rdx+r10-1000]); dump();
mov (ecx, ptr[rdx+r10*1+0]); dump();
mov (ecx, ptr[rdx+r10*1+1]); dump();
mov (ecx, ptr[rdx+r10*1+1000]); dump();
mov (ecx, ptr[rdx+r10*1-1]); dump();
mov (ecx, ptr[rdx+r10*1-1000]); dump();
mov (ecx, ptr[rdx+r10*2+0]); dump();
mov (ecx, ptr[rdx+r10*2+1]); dump();
mov (ecx, ptr[rdx+r10*2+1000]); dump();
mov (ecx, ptr[rdx+r10*2-1]); dump();
mov (ecx, ptr[rdx+r10*2-1000]); dump();
mov (ecx, ptr[rdx+r10*4+0]); dump();
mov (ecx, ptr[rdx+r10*4+1]); dump();
mov (ecx, ptr[rdx+r10*4+1000]); dump();
mov (ecx, ptr[rdx+r10*4-1]); dump();
mov (ecx, ptr[rdx+r10*4-1000]); dump();
mov (ecx, ptr[rdx+r10*8+0]); dump();
mov (ecx, ptr[rdx+r10*8+1]); dump();
mov (ecx, ptr[rdx+r10*8+1000]); dump();
mov (ecx, ptr[rdx+r10*8-1]); dump();
mov (ecx, ptr[rdx+r10*8-1000]); dump();
mov (ecx, ptr[rdx+r11+0]); dump();
mov (ecx, ptr[rdx+r11+1]); dump();
mov (ecx, ptr[rdx+r11+1000]); dump();
mov (ecx, ptr[rdx+r11-1]); dump();
mov (ecx, ptr[rdx+r11-1000]); dump();
mov (ecx, ptr[rdx+r11*1+0]); dump();
mov (ecx, ptr[rdx+r11*1+1]); dump();
mov (ecx, ptr[rdx+r11*1+1000]); dump();
mov (ecx, ptr[rdx+r11*1-1]); dump();
mov (ecx, ptr[rdx+r11*1-1000]); dump();
mov (ecx, ptr[rdx+r11*2+0]); dump();
mov (ecx, ptr[rdx+r11*2+1]); dump();
mov (ecx, ptr[rdx+r11*2+1000]); dump();
mov (ecx, ptr[rdx+r11*2-1]); dump();
mov (ecx, ptr[rdx+r11*2-1000]); dump();
mov (ecx, ptr[rdx+r11*4+0]); dump();
mov (ecx, ptr[rdx+r11*4+1]); dump();
mov (ecx, ptr[rdx+r11*4+1000]); dump();
mov (ecx, ptr[rdx+r11*4-1]); dump();
mov (ecx, ptr[rdx+r11*4-1000]); dump();
mov (ecx, ptr[rdx+r11*8+0]); dump();
mov (ecx, ptr[rdx+r11*8+1]); dump();
mov (ecx, ptr[rdx+r11*8+1000]); dump();
mov (ecx, ptr[rdx+r11*8-1]); dump();
mov (ecx, ptr[rdx+r11*8-1000]); dump();
}
    void gen10(){
mov (ecx, ptr[rdx+r12+0]); dump();
mov (ecx, ptr[rdx+r12+1]); dump();
mov (ecx, ptr[rdx+r12+1000]); dump();
mov (ecx, ptr[rdx+r12-1]); dump();
mov (ecx, ptr[rdx+r12-1000]); dump();
mov (ecx, ptr[rdx+r12*1+0]); dump();
mov (ecx, ptr[rdx+r12*1+1]); dump();
mov (ecx, ptr[rdx+r12*1+1000]); dump();
mov (ecx, ptr[rdx+r12*1-1]); dump();
mov (ecx, ptr[rdx+r12*1-1000]); dump();
mov (ecx, ptr[rdx+r12*2+0]); dump();
mov (ecx, ptr[rdx+r12*2+1]); dump();
mov (ecx, ptr[rdx+r12*2+1000]); dump();
mov (ecx, ptr[rdx+r12*2-1]); dump();
mov (ecx, ptr[rdx+r12*2-1000]); dump();
mov (ecx, ptr[rdx+r12*4+0]); dump();
mov (ecx, ptr[rdx+r12*4+1]); dump();
mov (ecx, ptr[rdx+r12*4+1000]); dump();
mov (ecx, ptr[rdx+r12*4-1]); dump();
mov (ecx, ptr[rdx+r12*4-1000]); dump();
mov (ecx, ptr[rdx+r12*8+0]); dump();
mov (ecx, ptr[rdx+r12*8+1]); dump();
mov (ecx, ptr[rdx+r12*8+1000]); dump();
mov (ecx, ptr[rdx+r12*8-1]); dump();
mov (ecx, ptr[rdx+r12*8-1000]); dump();
mov (ecx, ptr[rdx+r13+0]); dump();
mov (ecx, ptr[rdx+r13+1]); dump();
mov (ecx, ptr[rdx+r13+1000]); dump();
mov (ecx, ptr[rdx+r13-1]); dump();
mov (ecx, ptr[rdx+r13-1000]); dump();
mov (ecx, ptr[rdx+r13*1+0]); dump();
mov (ecx, ptr[rdx+r13*1+1]); dump();
mov (ecx, ptr[rdx+r13*1+1000]); dump();
mov (ecx, ptr[rdx+r13*1-1]); dump();
mov (ecx, ptr[rdx+r13*1-1000]); dump();
mov (ecx, ptr[rdx+r13*2+0]); dump();
mov (ecx, ptr[rdx+r13*2+1]); dump();
mov (ecx, ptr[rdx+r13*2+1000]); dump();
mov (ecx, ptr[rdx+r13*2-1]); dump();
mov (ecx, ptr[rdx+r13*2-1000]); dump();
mov (ecx, ptr[rdx+r13*4+0]); dump();
mov (ecx, ptr[rdx+r13*4+1]); dump();
mov (ecx, ptr[rdx+r13*4+1000]); dump();
mov (ecx, ptr[rdx+r13*4-1]); dump();
mov (ecx, ptr[rdx+r13*4-1000]); dump();
mov (ecx, ptr[rdx+r13*8+0]); dump();
mov (ecx, ptr[rdx+r13*8+1]); dump();
mov (ecx, ptr[rdx+r13*8+1000]); dump();
mov (ecx, ptr[rdx+r13*8-1]); dump();
mov (ecx, ptr[rdx+r13*8-1000]); dump();
mov (ecx, ptr[rdx+r14+0]); dump();
mov (ecx, ptr[rdx+r14+1]); dump();
mov (ecx, ptr[rdx+r14+1000]); dump();
mov (ecx, ptr[rdx+r14-1]); dump();
mov (ecx, ptr[rdx+r14-1000]); dump();
mov (ecx, ptr[rdx+r14*1+0]); dump();
mov (ecx, ptr[rdx+r14*1+1]); dump();
mov (ecx, ptr[rdx+r14*1+1000]); dump();
mov (ecx, ptr[rdx+r14*1-1]); dump();
mov (ecx, ptr[rdx+r14*1-1000]); dump();
mov (ecx, ptr[rdx+r14*2+0]); dump();
mov (ecx, ptr[rdx+r14*2+1]); dump();
mov (ecx, ptr[rdx+r14*2+1000]); dump();
mov (ecx, ptr[rdx+r14*2-1]); dump();
mov (ecx, ptr[rdx+r14*2-1000]); dump();
mov (ecx, ptr[rdx+r14*4+0]); dump();
mov (ecx, ptr[rdx+r14*4+1]); dump();
mov (ecx, ptr[rdx+r14*4+1000]); dump();
mov (ecx, ptr[rdx+r14*4-1]); dump();
mov (ecx, ptr[rdx+r14*4-1000]); dump();
mov (ecx, ptr[rdx+r14*8+0]); dump();
mov (ecx, ptr[rdx+r14*8+1]); dump();
mov (ecx, ptr[rdx+r14*8+1000]); dump();
mov (ecx, ptr[rdx+r14*8-1]); dump();
mov (ecx, ptr[rdx+r14*8-1000]); dump();
mov (ecx, ptr[rdx+r15+0]); dump();
mov (ecx, ptr[rdx+r15+1]); dump();
mov (ecx, ptr[rdx+r15+1000]); dump();
mov (ecx, ptr[rdx+r15-1]); dump();
mov (ecx, ptr[rdx+r15-1000]); dump();
mov (ecx, ptr[rdx+r15*1+0]); dump();
mov (ecx, ptr[rdx+r15*1+1]); dump();
mov (ecx, ptr[rdx+r15*1+1000]); dump();
mov (ecx, ptr[rdx+r15*1-1]); dump();
mov (ecx, ptr[rdx+r15*1-1000]); dump();
mov (ecx, ptr[rdx+r15*2+0]); dump();
mov (ecx, ptr[rdx+r15*2+1]); dump();
mov (ecx, ptr[rdx+r15*2+1000]); dump();
mov (ecx, ptr[rdx+r15*2-1]); dump();
mov (ecx, ptr[rdx+r15*2-1000]); dump();
mov (ecx, ptr[rdx+r15*4+0]); dump();
mov (ecx, ptr[rdx+r15*4+1]); dump();
mov (ecx, ptr[rdx+r15*4+1000]); dump();
mov (ecx, ptr[rdx+r15*4-1]); dump();
mov (ecx, ptr[rdx+r15*4-1000]); dump();
mov (ecx, ptr[rdx+r15*8+0]); dump();
mov (ecx, ptr[rdx+r15*8+1]); dump();
mov (ecx, ptr[rdx+r15*8+1000]); dump();
mov (ecx, ptr[rdx+r15*8-1]); dump();
mov (ecx, ptr[rdx+r15*8-1000]); dump();
}
    void gen11(){
mov (ecx, ptr[rdx+0]); dump();
mov (ecx, ptr[rdx+1]); dump();
mov (ecx, ptr[rdx+1000]); dump();
mov (ecx, ptr[rdx-1]); dump();
mov (ecx, ptr[rdx-1000]); dump();
mov (ecx, ptr[rdx+0]); dump();
mov (ecx, ptr[rdx+1]); dump();
mov (ecx, ptr[rdx+1000]); dump();
mov (ecx, ptr[rdx-1]); dump();
mov (ecx, ptr[rdx-1000]); dump();
mov (ecx, ptr[rdx+0]); dump();
mov (ecx, ptr[rdx+1]); dump();
mov (ecx, ptr[rdx+1000]); dump();
mov (ecx, ptr[rdx-1]); dump();
mov (ecx, ptr[rdx-1000]); dump();
mov (ecx, ptr[rdx+0]); dump();
mov (ecx, ptr[rdx+1]); dump();
mov (ecx, ptr[rdx+1000]); dump();
mov (ecx, ptr[rdx-1]); dump();
mov (ecx, ptr[rdx-1000]); dump();
mov (ecx, ptr[rdx+0]); dump();
mov (ecx, ptr[rdx+1]); dump();
mov (ecx, ptr[rdx+1000]); dump();
mov (ecx, ptr[rdx-1]); dump();
mov (ecx, ptr[rdx-1000]); dump();
mov (ecx, ptr[rbx+rax+0]); dump();
mov (ecx, ptr[rbx+rax+1]); dump();
mov (ecx, ptr[rbx+rax+1000]); dump();
mov (ecx, ptr[rbx+rax-1]); dump();
mov (ecx, ptr[rbx+rax-1000]); dump();
mov (ecx, ptr[rbx+rax*1+0]); dump();
mov (ecx, ptr[rbx+rax*1+1]); dump();
mov (ecx, ptr[rbx+rax*1+1000]); dump();
mov (ecx, ptr[rbx+rax*1-1]); dump();
mov (ecx, ptr[rbx+rax*1-1000]); dump();
mov (ecx, ptr[rbx+rax*2+0]); dump();
mov (ecx, ptr[rbx+rax*2+1]); dump();
mov (ecx, ptr[rbx+rax*2+1000]); dump();
mov (ecx, ptr[rbx+rax*2-1]); dump();
mov (ecx, ptr[rbx+rax*2-1000]); dump();
mov (ecx, ptr[rbx+rax*4+0]); dump();
mov (ecx, ptr[rbx+rax*4+1]); dump();
mov (ecx, ptr[rbx+rax*4+1000]); dump();
mov (ecx, ptr[rbx+rax*4-1]); dump();
mov (ecx, ptr[rbx+rax*4-1000]); dump();
mov (ecx, ptr[rbx+rax*8+0]); dump();
mov (ecx, ptr[rbx+rax*8+1]); dump();
mov (ecx, ptr[rbx+rax*8+1000]); dump();
mov (ecx, ptr[rbx+rax*8-1]); dump();
mov (ecx, ptr[rbx+rax*8-1000]); dump();
mov (ecx, ptr[rbx+rcx+0]); dump();
mov (ecx, ptr[rbx+rcx+1]); dump();
mov (ecx, ptr[rbx+rcx+1000]); dump();
mov (ecx, ptr[rbx+rcx-1]); dump();
mov (ecx, ptr[rbx+rcx-1000]); dump();
mov (ecx, ptr[rbx+rcx*1+0]); dump();
mov (ecx, ptr[rbx+rcx*1+1]); dump();
mov (ecx, ptr[rbx+rcx*1+1000]); dump();
mov (ecx, ptr[rbx+rcx*1-1]); dump();
mov (ecx, ptr[rbx+rcx*1-1000]); dump();
mov (ecx, ptr[rbx+rcx*2+0]); dump();
mov (ecx, ptr[rbx+rcx*2+1]); dump();
mov (ecx, ptr[rbx+rcx*2+1000]); dump();
mov (ecx, ptr[rbx+rcx*2-1]); dump();
mov (ecx, ptr[rbx+rcx*2-1000]); dump();
mov (ecx, ptr[rbx+rcx*4+0]); dump();
mov (ecx, ptr[rbx+rcx*4+1]); dump();
mov (ecx, ptr[rbx+rcx*4+1000]); dump();
mov (ecx, ptr[rbx+rcx*4-1]); dump();
mov (ecx, ptr[rbx+rcx*4-1000]); dump();
mov (ecx, ptr[rbx+rcx*8+0]); dump();
mov (ecx, ptr[rbx+rcx*8+1]); dump();
mov (ecx, ptr[rbx+rcx*8+1000]); dump();
mov (ecx, ptr[rbx+rcx*8-1]); dump();
mov (ecx, ptr[rbx+rcx*8-1000]); dump();
mov (ecx, ptr[rbx+rdx+0]); dump();
mov (ecx, ptr[rbx+rdx+1]); dump();
mov (ecx, ptr[rbx+rdx+1000]); dump();
mov (ecx, ptr[rbx+rdx-1]); dump();
mov (ecx, ptr[rbx+rdx-1000]); dump();
mov (ecx, ptr[rbx+rdx*1+0]); dump();
mov (ecx, ptr[rbx+rdx*1+1]); dump();
mov (ecx, ptr[rbx+rdx*1+1000]); dump();
mov (ecx, ptr[rbx+rdx*1-1]); dump();
mov (ecx, ptr[rbx+rdx*1-1000]); dump();
mov (ecx, ptr[rbx+rdx*2+0]); dump();
mov (ecx, ptr[rbx+rdx*2+1]); dump();
mov (ecx, ptr[rbx+rdx*2+1000]); dump();
mov (ecx, ptr[rbx+rdx*2-1]); dump();
mov (ecx, ptr[rbx+rdx*2-1000]); dump();
mov (ecx, ptr[rbx+rdx*4+0]); dump();
mov (ecx, ptr[rbx+rdx*4+1]); dump();
mov (ecx, ptr[rbx+rdx*4+1000]); dump();
mov (ecx, ptr[rbx+rdx*4-1]); dump();
mov (ecx, ptr[rbx+rdx*4-1000]); dump();
mov (ecx, ptr[rbx+rdx*8+0]); dump();
mov (ecx, ptr[rbx+rdx*8+1]); dump();
mov (ecx, ptr[rbx+rdx*8+1000]); dump();
mov (ecx, ptr[rbx+rdx*8-1]); dump();
mov (ecx, ptr[rbx+rdx*8-1000]); dump();
}
    void gen12(){
mov (ecx, ptr[rbx+rbx+0]); dump();
mov (ecx, ptr[rbx+rbx+1]); dump();
mov (ecx, ptr[rbx+rbx+1000]); dump();
mov (ecx, ptr[rbx+rbx-1]); dump();
mov (ecx, ptr[rbx+rbx-1000]); dump();
mov (ecx, ptr[rbx+rbx*1+0]); dump();
mov (ecx, ptr[rbx+rbx*1+1]); dump();
mov (ecx, ptr[rbx+rbx*1+1000]); dump();
mov (ecx, ptr[rbx+rbx*1-1]); dump();
mov (ecx, ptr[rbx+rbx*1-1000]); dump();
mov (ecx, ptr[rbx+rbx*2+0]); dump();
mov (ecx, ptr[rbx+rbx*2+1]); dump();
mov (ecx, ptr[rbx+rbx*2+1000]); dump();
mov (ecx, ptr[rbx+rbx*2-1]); dump();
mov (ecx, ptr[rbx+rbx*2-1000]); dump();
mov (ecx, ptr[rbx+rbx*4+0]); dump();
mov (ecx, ptr[rbx+rbx*4+1]); dump();
mov (ecx, ptr[rbx+rbx*4+1000]); dump();
mov (ecx, ptr[rbx+rbx*4-1]); dump();
mov (ecx, ptr[rbx+rbx*4-1000]); dump();
mov (ecx, ptr[rbx+rbx*8+0]); dump();
mov (ecx, ptr[rbx+rbx*8+1]); dump();
mov (ecx, ptr[rbx+rbx*8+1000]); dump();
mov (ecx, ptr[rbx+rbx*8-1]); dump();
mov (ecx, ptr[rbx+rbx*8-1000]); dump();
mov (ecx, ptr[rbx+rbp+0]); dump();
mov (ecx, ptr[rbx+rbp+1]); dump();
mov (ecx, ptr[rbx+rbp+1000]); dump();
mov (ecx, ptr[rbx+rbp-1]); dump();
mov (ecx, ptr[rbx+rbp-1000]); dump();
mov (ecx, ptr[rbx+rbp*1+0]); dump();
mov (ecx, ptr[rbx+rbp*1+1]); dump();
mov (ecx, ptr[rbx+rbp*1+1000]); dump();
mov (ecx, ptr[rbx+rbp*1-1]); dump();
mov (ecx, ptr[rbx+rbp*1-1000]); dump();
mov (ecx, ptr[rbx+rbp*2+0]); dump();
mov (ecx, ptr[rbx+rbp*2+1]); dump();
mov (ecx, ptr[rbx+rbp*2+1000]); dump();
mov (ecx, ptr[rbx+rbp*2-1]); dump();
mov (ecx, ptr[rbx+rbp*2-1000]); dump();
mov (ecx, ptr[rbx+rbp*4+0]); dump();
mov (ecx, ptr[rbx+rbp*4+1]); dump();
mov (ecx, ptr[rbx+rbp*4+1000]); dump();
mov (ecx, ptr[rbx+rbp*4-1]); dump();
mov (ecx, ptr[rbx+rbp*4-1000]); dump();
mov (ecx, ptr[rbx+rbp*8+0]); dump();
mov (ecx, ptr[rbx+rbp*8+1]); dump();
mov (ecx, ptr[rbx+rbp*8+1000]); dump();
mov (ecx, ptr[rbx+rbp*8-1]); dump();
mov (ecx, ptr[rbx+rbp*8-1000]); dump();
mov (ecx, ptr[rbx+rsi+0]); dump();
mov (ecx, ptr[rbx+rsi+1]); dump();
mov (ecx, ptr[rbx+rsi+1000]); dump();
mov (ecx, ptr[rbx+rsi-1]); dump();
mov (ecx, ptr[rbx+rsi-1000]); dump();
mov (ecx, ptr[rbx+rsi*1+0]); dump();
mov (ecx, ptr[rbx+rsi*1+1]); dump();
mov (ecx, ptr[rbx+rsi*1+1000]); dump();
mov (ecx, ptr[rbx+rsi*1-1]); dump();
mov (ecx, ptr[rbx+rsi*1-1000]); dump();
mov (ecx, ptr[rbx+rsi*2+0]); dump();
mov (ecx, ptr[rbx+rsi*2+1]); dump();
mov (ecx, ptr[rbx+rsi*2+1000]); dump();
mov (ecx, ptr[rbx+rsi*2-1]); dump();
mov (ecx, ptr[rbx+rsi*2-1000]); dump();
mov (ecx, ptr[rbx+rsi*4+0]); dump();
mov (ecx, ptr[rbx+rsi*4+1]); dump();
mov (ecx, ptr[rbx+rsi*4+1000]); dump();
mov (ecx, ptr[rbx+rsi*4-1]); dump();
mov (ecx, ptr[rbx+rsi*4-1000]); dump();
mov (ecx, ptr[rbx+rsi*8+0]); dump();
mov (ecx, ptr[rbx+rsi*8+1]); dump();
mov (ecx, ptr[rbx+rsi*8+1000]); dump();
mov (ecx, ptr[rbx+rsi*8-1]); dump();
mov (ecx, ptr[rbx+rsi*8-1000]); dump();
mov (ecx, ptr[rbx+rdi+0]); dump();
mov (ecx, ptr[rbx+rdi+1]); dump();
mov (ecx, ptr[rbx+rdi+1000]); dump();
mov (ecx, ptr[rbx+rdi-1]); dump();
mov (ecx, ptr[rbx+rdi-1000]); dump();
mov (ecx, ptr[rbx+rdi*1+0]); dump();
mov (ecx, ptr[rbx+rdi*1+1]); dump();
mov (ecx, ptr[rbx+rdi*1+1000]); dump();
mov (ecx, ptr[rbx+rdi*1-1]); dump();
mov (ecx, ptr[rbx+rdi*1-1000]); dump();
mov (ecx, ptr[rbx+rdi*2+0]); dump();
mov (ecx, ptr[rbx+rdi*2+1]); dump();
mov (ecx, ptr[rbx+rdi*2+1000]); dump();
mov (ecx, ptr[rbx+rdi*2-1]); dump();
mov (ecx, ptr[rbx+rdi*2-1000]); dump();
mov (ecx, ptr[rbx+rdi*4+0]); dump();
mov (ecx, ptr[rbx+rdi*4+1]); dump();
mov (ecx, ptr[rbx+rdi*4+1000]); dump();
mov (ecx, ptr[rbx+rdi*4-1]); dump();
mov (ecx, ptr[rbx+rdi*4-1000]); dump();
mov (ecx, ptr[rbx+rdi*8+0]); dump();
mov (ecx, ptr[rbx+rdi*8+1]); dump();
mov (ecx, ptr[rbx+rdi*8+1000]); dump();
mov (ecx, ptr[rbx+rdi*8-1]); dump();
mov (ecx, ptr[rbx+rdi*8-1000]); dump();
}
    void gen13(){
mov (ecx, ptr[rbx+r9+0]); dump();
mov (ecx, ptr[rbx+r9+1]); dump();
mov (ecx, ptr[rbx+r9+1000]); dump();
mov (ecx, ptr[rbx+r9-1]); dump();
mov (ecx, ptr[rbx+r9-1000]); dump();
mov (ecx, ptr[rbx+r9*1+0]); dump();
mov (ecx, ptr[rbx+r9*1+1]); dump();
mov (ecx, ptr[rbx+r9*1+1000]); dump();
mov (ecx, ptr[rbx+r9*1-1]); dump();
mov (ecx, ptr[rbx+r9*1-1000]); dump();
mov (ecx, ptr[rbx+r9*2+0]); dump();
mov (ecx, ptr[rbx+r9*2+1]); dump();
mov (ecx, ptr[rbx+r9*2+1000]); dump();
mov (ecx, ptr[rbx+r9*2-1]); dump();
mov (ecx, ptr[rbx+r9*2-1000]); dump();
mov (ecx, ptr[rbx+r9*4+0]); dump();
mov (ecx, ptr[rbx+r9*4+1]); dump();
mov (ecx, ptr[rbx+r9*4+1000]); dump();
mov (ecx, ptr[rbx+r9*4-1]); dump();
mov (ecx, ptr[rbx+r9*4-1000]); dump();
mov (ecx, ptr[rbx+r9*8+0]); dump();
mov (ecx, ptr[rbx+r9*8+1]); dump();
mov (ecx, ptr[rbx+r9*8+1000]); dump();
mov (ecx, ptr[rbx+r9*8-1]); dump();
mov (ecx, ptr[rbx+r9*8-1000]); dump();
mov (ecx, ptr[rbx+r10+0]); dump();
mov (ecx, ptr[rbx+r10+1]); dump();
mov (ecx, ptr[rbx+r10+1000]); dump();
mov (ecx, ptr[rbx+r10-1]); dump();
mov (ecx, ptr[rbx+r10-1000]); dump();
mov (ecx, ptr[rbx+r10*1+0]); dump();
mov (ecx, ptr[rbx+r10*1+1]); dump();
mov (ecx, ptr[rbx+r10*1+1000]); dump();
mov (ecx, ptr[rbx+r10*1-1]); dump();
mov (ecx, ptr[rbx+r10*1-1000]); dump();
mov (ecx, ptr[rbx+r10*2+0]); dump();
mov (ecx, ptr[rbx+r10*2+1]); dump();
mov (ecx, ptr[rbx+r10*2+1000]); dump();
mov (ecx, ptr[rbx+r10*2-1]); dump();
mov (ecx, ptr[rbx+r10*2-1000]); dump();
mov (ecx, ptr[rbx+r10*4+0]); dump();
mov (ecx, ptr[rbx+r10*4+1]); dump();
mov (ecx, ptr[rbx+r10*4+1000]); dump();
mov (ecx, ptr[rbx+r10*4-1]); dump();
mov (ecx, ptr[rbx+r10*4-1000]); dump();
mov (ecx, ptr[rbx+r10*8+0]); dump();
mov (ecx, ptr[rbx+r10*8+1]); dump();
mov (ecx, ptr[rbx+r10*8+1000]); dump();
mov (ecx, ptr[rbx+r10*8-1]); dump();
mov (ecx, ptr[rbx+r10*8-1000]); dump();
mov (ecx, ptr[rbx+r11+0]); dump();
mov (ecx, ptr[rbx+r11+1]); dump();
mov (ecx, ptr[rbx+r11+1000]); dump();
mov (ecx, ptr[rbx+r11-1]); dump();
mov (ecx, ptr[rbx+r11-1000]); dump();
mov (ecx, ptr[rbx+r11*1+0]); dump();
mov (ecx, ptr[rbx+r11*1+1]); dump();
mov (ecx, ptr[rbx+r11*1+1000]); dump();
mov (ecx, ptr[rbx+r11*1-1]); dump();
mov (ecx, ptr[rbx+r11*1-1000]); dump();
mov (ecx, ptr[rbx+r11*2+0]); dump();
mov (ecx, ptr[rbx+r11*2+1]); dump();
mov (ecx, ptr[rbx+r11*2+1000]); dump();
mov (ecx, ptr[rbx+r11*2-1]); dump();
mov (ecx, ptr[rbx+r11*2-1000]); dump();
mov (ecx, ptr[rbx+r11*4+0]); dump();
mov (ecx, ptr[rbx+r11*4+1]); dump();
mov (ecx, ptr[rbx+r11*4+1000]); dump();
mov (ecx, ptr[rbx+r11*4-1]); dump();
mov (ecx, ptr[rbx+r11*4-1000]); dump();
mov (ecx, ptr[rbx+r11*8+0]); dump();
mov (ecx, ptr[rbx+r11*8+1]); dump();
mov (ecx, ptr[rbx+r11*8+1000]); dump();
mov (ecx, ptr[rbx+r11*8-1]); dump();
mov (ecx, ptr[rbx+r11*8-1000]); dump();
mov (ecx, ptr[rbx+r12+0]); dump();
mov (ecx, ptr[rbx+r12+1]); dump();
mov (ecx, ptr[rbx+r12+1000]); dump();
mov (ecx, ptr[rbx+r12-1]); dump();
mov (ecx, ptr[rbx+r12-1000]); dump();
mov (ecx, ptr[rbx+r12*1+0]); dump();
mov (ecx, ptr[rbx+r12*1+1]); dump();
mov (ecx, ptr[rbx+r12*1+1000]); dump();
mov (ecx, ptr[rbx+r12*1-1]); dump();
mov (ecx, ptr[rbx+r12*1-1000]); dump();
mov (ecx, ptr[rbx+r12*2+0]); dump();
mov (ecx, ptr[rbx+r12*2+1]); dump();
mov (ecx, ptr[rbx+r12*2+1000]); dump();
mov (ecx, ptr[rbx+r12*2-1]); dump();
mov (ecx, ptr[rbx+r12*2-1000]); dump();
mov (ecx, ptr[rbx+r12*4+0]); dump();
mov (ecx, ptr[rbx+r12*4+1]); dump();
mov (ecx, ptr[rbx+r12*4+1000]); dump();
mov (ecx, ptr[rbx+r12*4-1]); dump();
mov (ecx, ptr[rbx+r12*4-1000]); dump();
mov (ecx, ptr[rbx+r12*8+0]); dump();
mov (ecx, ptr[rbx+r12*8+1]); dump();
mov (ecx, ptr[rbx+r12*8+1000]); dump();
mov (ecx, ptr[rbx+r12*8-1]); dump();
mov (ecx, ptr[rbx+r12*8-1000]); dump();
}
    void gen14(){
mov (ecx, ptr[rbx+r13+0]); dump();
mov (ecx, ptr[rbx+r13+1]); dump();
mov (ecx, ptr[rbx+r13+1000]); dump();
mov (ecx, ptr[rbx+r13-1]); dump();
mov (ecx, ptr[rbx+r13-1000]); dump();
mov (ecx, ptr[rbx+r13*1+0]); dump();
mov (ecx, ptr[rbx+r13*1+1]); dump();
mov (ecx, ptr[rbx+r13*1+1000]); dump();
mov (ecx, ptr[rbx+r13*1-1]); dump();
mov (ecx, ptr[rbx+r13*1-1000]); dump();
mov (ecx, ptr[rbx+r13*2+0]); dump();
mov (ecx, ptr[rbx+r13*2+1]); dump();
mov (ecx, ptr[rbx+r13*2+1000]); dump();
mov (ecx, ptr[rbx+r13*2-1]); dump();
mov (ecx, ptr[rbx+r13*2-1000]); dump();
mov (ecx, ptr[rbx+r13*4+0]); dump();
mov (ecx, ptr[rbx+r13*4+1]); dump();
mov (ecx, ptr[rbx+r13*4+1000]); dump();
mov (ecx, ptr[rbx+r13*4-1]); dump();
mov (ecx, ptr[rbx+r13*4-1000]); dump();
mov (ecx, ptr[rbx+r13*8+0]); dump();
mov (ecx, ptr[rbx+r13*8+1]); dump();
mov (ecx, ptr[rbx+r13*8+1000]); dump();
mov (ecx, ptr[rbx+r13*8-1]); dump();
mov (ecx, ptr[rbx+r13*8-1000]); dump();
mov (ecx, ptr[rbx+r14+0]); dump();
mov (ecx, ptr[rbx+r14+1]); dump();
mov (ecx, ptr[rbx+r14+1000]); dump();
mov (ecx, ptr[rbx+r14-1]); dump();
mov (ecx, ptr[rbx+r14-1000]); dump();
mov (ecx, ptr[rbx+r14*1+0]); dump();
mov (ecx, ptr[rbx+r14*1+1]); dump();
mov (ecx, ptr[rbx+r14*1+1000]); dump();
mov (ecx, ptr[rbx+r14*1-1]); dump();
mov (ecx, ptr[rbx+r14*1-1000]); dump();
mov (ecx, ptr[rbx+r14*2+0]); dump();
mov (ecx, ptr[rbx+r14*2+1]); dump();
mov (ecx, ptr[rbx+r14*2+1000]); dump();
mov (ecx, ptr[rbx+r14*2-1]); dump();
mov (ecx, ptr[rbx+r14*2-1000]); dump();
mov (ecx, ptr[rbx+r14*4+0]); dump();
mov (ecx, ptr[rbx+r14*4+1]); dump();
mov (ecx, ptr[rbx+r14*4+1000]); dump();
mov (ecx, ptr[rbx+r14*4-1]); dump();
mov (ecx, ptr[rbx+r14*4-1000]); dump();
mov (ecx, ptr[rbx+r14*8+0]); dump();
mov (ecx, ptr[rbx+r14*8+1]); dump();
mov (ecx, ptr[rbx+r14*8+1000]); dump();
mov (ecx, ptr[rbx+r14*8-1]); dump();
mov (ecx, ptr[rbx+r14*8-1000]); dump();
mov (ecx, ptr[rbx+r15+0]); dump();
mov (ecx, ptr[rbx+r15+1]); dump();
mov (ecx, ptr[rbx+r15+1000]); dump();
mov (ecx, ptr[rbx+r15-1]); dump();
mov (ecx, ptr[rbx+r15-1000]); dump();
mov (ecx, ptr[rbx+r15*1+0]); dump();
mov (ecx, ptr[rbx+r15*1+1]); dump();
mov (ecx, ptr[rbx+r15*1+1000]); dump();
mov (ecx, ptr[rbx+r15*1-1]); dump();
mov (ecx, ptr[rbx+r15*1-1000]); dump();
mov (ecx, ptr[rbx+r15*2+0]); dump();
mov (ecx, ptr[rbx+r15*2+1]); dump();
mov (ecx, ptr[rbx+r15*2+1000]); dump();
mov (ecx, ptr[rbx+r15*2-1]); dump();
mov (ecx, ptr[rbx+r15*2-1000]); dump();
mov (ecx, ptr[rbx+r15*4+0]); dump();
mov (ecx, ptr[rbx+r15*4+1]); dump();
mov (ecx, ptr[rbx+r15*4+1000]); dump();
mov (ecx, ptr[rbx+r15*4-1]); dump();
mov (ecx, ptr[rbx+r15*4-1000]); dump();
mov (ecx, ptr[rbx+r15*8+0]); dump();
mov (ecx, ptr[rbx+r15*8+1]); dump();
mov (ecx, ptr[rbx+r15*8+1000]); dump();
mov (ecx, ptr[rbx+r15*8-1]); dump();
mov (ecx, ptr[rbx+r15*8-1000]); dump();
mov (ecx, ptr[rbx+0]); dump();
mov (ecx, ptr[rbx+1]); dump();
mov (ecx, ptr[rbx+1000]); dump();
mov (ecx, ptr[rbx-1]); dump();
mov (ecx, ptr[rbx-1000]); dump();
mov (ecx, ptr[rbx+0]); dump();
mov (ecx, ptr[rbx+1]); dump();
mov (ecx, ptr[rbx+1000]); dump();
mov (ecx, ptr[rbx-1]); dump();
mov (ecx, ptr[rbx-1000]); dump();
mov (ecx, ptr[rbx+0]); dump();
mov (ecx, ptr[rbx+1]); dump();
mov (ecx, ptr[rbx+1000]); dump();
mov (ecx, ptr[rbx-1]); dump();
mov (ecx, ptr[rbx-1000]); dump();
mov (ecx, ptr[rbx+0]); dump();
mov (ecx, ptr[rbx+1]); dump();
mov (ecx, ptr[rbx+1000]); dump();
mov (ecx, ptr[rbx-1]); dump();
mov (ecx, ptr[rbx-1000]); dump();
mov (ecx, ptr[rbx+0]); dump();
mov (ecx, ptr[rbx+1]); dump();
mov (ecx, ptr[rbx+1000]); dump();
mov (ecx, ptr[rbx-1]); dump();
mov (ecx, ptr[rbx-1000]); dump();
}
    void gen15(){
mov (ecx, ptr[rsp+rax+0]); dump();
mov (ecx, ptr[rsp+rax+1]); dump();
mov (ecx, ptr[rsp+rax+1000]); dump();
mov (ecx, ptr[rsp+rax-1]); dump();
mov (ecx, ptr[rsp+rax-1000]); dump();
mov (ecx, ptr[rsp+rax*1+0]); dump();
mov (ecx, ptr[rsp+rax*1+1]); dump();
mov (ecx, ptr[rsp+rax*1+1000]); dump();
mov (ecx, ptr[rsp+rax*1-1]); dump();
mov (ecx, ptr[rsp+rax*1-1000]); dump();
mov (ecx, ptr[rsp+rax*2+0]); dump();
mov (ecx, ptr[rsp+rax*2+1]); dump();
mov (ecx, ptr[rsp+rax*2+1000]); dump();
mov (ecx, ptr[rsp+rax*2-1]); dump();
mov (ecx, ptr[rsp+rax*2-1000]); dump();
mov (ecx, ptr[rsp+rax*4+0]); dump();
mov (ecx, ptr[rsp+rax*4+1]); dump();
mov (ecx, ptr[rsp+rax*4+1000]); dump();
mov (ecx, ptr[rsp+rax*4-1]); dump();
mov (ecx, ptr[rsp+rax*4-1000]); dump();
mov (ecx, ptr[rsp+rax*8+0]); dump();
mov (ecx, ptr[rsp+rax*8+1]); dump();
mov (ecx, ptr[rsp+rax*8+1000]); dump();
mov (ecx, ptr[rsp+rax*8-1]); dump();
mov (ecx, ptr[rsp+rax*8-1000]); dump();
mov (ecx, ptr[rsp+rcx+0]); dump();
mov (ecx, ptr[rsp+rcx+1]); dump();
mov (ecx, ptr[rsp+rcx+1000]); dump();
mov (ecx, ptr[rsp+rcx-1]); dump();
mov (ecx, ptr[rsp+rcx-1000]); dump();
mov (ecx, ptr[rsp+rcx*1+0]); dump();
mov (ecx, ptr[rsp+rcx*1+1]); dump();
mov (ecx, ptr[rsp+rcx*1+1000]); dump();
mov (ecx, ptr[rsp+rcx*1-1]); dump();
mov (ecx, ptr[rsp+rcx*1-1000]); dump();
mov (ecx, ptr[rsp+rcx*2+0]); dump();
mov (ecx, ptr[rsp+rcx*2+1]); dump();
mov (ecx, ptr[rsp+rcx*2+1000]); dump();
mov (ecx, ptr[rsp+rcx*2-1]); dump();
mov (ecx, ptr[rsp+rcx*2-1000]); dump();
mov (ecx, ptr[rsp+rcx*4+0]); dump();
mov (ecx, ptr[rsp+rcx*4+1]); dump();
mov (ecx, ptr[rsp+rcx*4+1000]); dump();
mov (ecx, ptr[rsp+rcx*4-1]); dump();
mov (ecx, ptr[rsp+rcx*4-1000]); dump();
mov (ecx, ptr[rsp+rcx*8+0]); dump();
mov (ecx, ptr[rsp+rcx*8+1]); dump();
mov (ecx, ptr[rsp+rcx*8+1000]); dump();
mov (ecx, ptr[rsp+rcx*8-1]); dump();
mov (ecx, ptr[rsp+rcx*8-1000]); dump();
mov (ecx, ptr[rsp+rdx+0]); dump();
mov (ecx, ptr[rsp+rdx+1]); dump();
mov (ecx, ptr[rsp+rdx+1000]); dump();
mov (ecx, ptr[rsp+rdx-1]); dump();
mov (ecx, ptr[rsp+rdx-1000]); dump();
mov (ecx, ptr[rsp+rdx*1+0]); dump();
mov (ecx, ptr[rsp+rdx*1+1]); dump();
mov (ecx, ptr[rsp+rdx*1+1000]); dump();
mov (ecx, ptr[rsp+rdx*1-1]); dump();
mov (ecx, ptr[rsp+rdx*1-1000]); dump();
mov (ecx, ptr[rsp+rdx*2+0]); dump();
mov (ecx, ptr[rsp+rdx*2+1]); dump();
mov (ecx, ptr[rsp+rdx*2+1000]); dump();
mov (ecx, ptr[rsp+rdx*2-1]); dump();
mov (ecx, ptr[rsp+rdx*2-1000]); dump();
mov (ecx, ptr[rsp+rdx*4+0]); dump();
mov (ecx, ptr[rsp+rdx*4+1]); dump();
mov (ecx, ptr[rsp+rdx*4+1000]); dump();
mov (ecx, ptr[rsp+rdx*4-1]); dump();
mov (ecx, ptr[rsp+rdx*4-1000]); dump();
mov (ecx, ptr[rsp+rdx*8+0]); dump();
mov (ecx, ptr[rsp+rdx*8+1]); dump();
mov (ecx, ptr[rsp+rdx*8+1000]); dump();
mov (ecx, ptr[rsp+rdx*8-1]); dump();
mov (ecx, ptr[rsp+rdx*8-1000]); dump();
mov (ecx, ptr[rsp+rbx+0]); dump();
mov (ecx, ptr[rsp+rbx+1]); dump();
mov (ecx, ptr[rsp+rbx+1000]); dump();
mov (ecx, ptr[rsp+rbx-1]); dump();
mov (ecx, ptr[rsp+rbx-1000]); dump();
mov (ecx, ptr[rsp+rbx*1+0]); dump();
mov (ecx, ptr[rsp+rbx*1+1]); dump();
mov (ecx, ptr[rsp+rbx*1+1000]); dump();
mov (ecx, ptr[rsp+rbx*1-1]); dump();
mov (ecx, ptr[rsp+rbx*1-1000]); dump();
mov (ecx, ptr[rsp+rbx*2+0]); dump();
mov (ecx, ptr[rsp+rbx*2+1]); dump();
mov (ecx, ptr[rsp+rbx*2+1000]); dump();
mov (ecx, ptr[rsp+rbx*2-1]); dump();
mov (ecx, ptr[rsp+rbx*2-1000]); dump();
mov (ecx, ptr[rsp+rbx*4+0]); dump();
mov (ecx, ptr[rsp+rbx*4+1]); dump();
mov (ecx, ptr[rsp+rbx*4+1000]); dump();
mov (ecx, ptr[rsp+rbx*4-1]); dump();
mov (ecx, ptr[rsp+rbx*4-1000]); dump();
mov (ecx, ptr[rsp+rbx*8+0]); dump();
mov (ecx, ptr[rsp+rbx*8+1]); dump();
mov (ecx, ptr[rsp+rbx*8+1000]); dump();
mov (ecx, ptr[rsp+rbx*8-1]); dump();
mov (ecx, ptr[rsp+rbx*8-1000]); dump();
}
    void gen16(){
mov (ecx, ptr[rsp+rbp+0]); dump();
mov (ecx, ptr[rsp+rbp+1]); dump();
mov (ecx, ptr[rsp+rbp+1000]); dump();
mov (ecx, ptr[rsp+rbp-1]); dump();
mov (ecx, ptr[rsp+rbp-1000]); dump();
mov (ecx, ptr[rsp+rbp*1+0]); dump();
mov (ecx, ptr[rsp+rbp*1+1]); dump();
mov (ecx, ptr[rsp+rbp*1+1000]); dump();
mov (ecx, ptr[rsp+rbp*1-1]); dump();
mov (ecx, ptr[rsp+rbp*1-1000]); dump();
mov (ecx, ptr[rsp+rbp*2+0]); dump();
mov (ecx, ptr[rsp+rbp*2+1]); dump();
mov (ecx, ptr[rsp+rbp*2+1000]); dump();
mov (ecx, ptr[rsp+rbp*2-1]); dump();
mov (ecx, ptr[rsp+rbp*2-1000]); dump();
mov (ecx, ptr[rsp+rbp*4+0]); dump();
mov (ecx, ptr[rsp+rbp*4+1]); dump();
mov (ecx, ptr[rsp+rbp*4+1000]); dump();
mov (ecx, ptr[rsp+rbp*4-1]); dump();
mov (ecx, ptr[rsp+rbp*4-1000]); dump();
mov (ecx, ptr[rsp+rbp*8+0]); dump();
mov (ecx, ptr[rsp+rbp*8+1]); dump();
mov (ecx, ptr[rsp+rbp*8+1000]); dump();
mov (ecx, ptr[rsp+rbp*8-1]); dump();
mov (ecx, ptr[rsp+rbp*8-1000]); dump();
mov (ecx, ptr[rsp+rsi+0]); dump();
mov (ecx, ptr[rsp+rsi+1]); dump();
mov (ecx, ptr[rsp+rsi+1000]); dump();
mov (ecx, ptr[rsp+rsi-1]); dump();
mov (ecx, ptr[rsp+rsi-1000]); dump();
mov (ecx, ptr[rsp+rsi*1+0]); dump();
mov (ecx, ptr[rsp+rsi*1+1]); dump();
mov (ecx, ptr[rsp+rsi*1+1000]); dump();
mov (ecx, ptr[rsp+rsi*1-1]); dump();
mov (ecx, ptr[rsp+rsi*1-1000]); dump();
mov (ecx, ptr[rsp+rsi*2+0]); dump();
mov (ecx, ptr[rsp+rsi*2+1]); dump();
mov (ecx, ptr[rsp+rsi*2+1000]); dump();
mov (ecx, ptr[rsp+rsi*2-1]); dump();
mov (ecx, ptr[rsp+rsi*2-1000]); dump();
mov (ecx, ptr[rsp+rsi*4+0]); dump();
mov (ecx, ptr[rsp+rsi*4+1]); dump();
mov (ecx, ptr[rsp+rsi*4+1000]); dump();
mov (ecx, ptr[rsp+rsi*4-1]); dump();
mov (ecx, ptr[rsp+rsi*4-1000]); dump();
mov (ecx, ptr[rsp+rsi*8+0]); dump();
mov (ecx, ptr[rsp+rsi*8+1]); dump();
mov (ecx, ptr[rsp+rsi*8+1000]); dump();
mov (ecx, ptr[rsp+rsi*8-1]); dump();
mov (ecx, ptr[rsp+rsi*8-1000]); dump();
mov (ecx, ptr[rsp+rdi+0]); dump();
mov (ecx, ptr[rsp+rdi+1]); dump();
mov (ecx, ptr[rsp+rdi+1000]); dump();
mov (ecx, ptr[rsp+rdi-1]); dump();
mov (ecx, ptr[rsp+rdi-1000]); dump();
mov (ecx, ptr[rsp+rdi*1+0]); dump();
mov (ecx, ptr[rsp+rdi*1+1]); dump();
mov (ecx, ptr[rsp+rdi*1+1000]); dump();
mov (ecx, ptr[rsp+rdi*1-1]); dump();
mov (ecx, ptr[rsp+rdi*1-1000]); dump();
mov (ecx, ptr[rsp+rdi*2+0]); dump();
mov (ecx, ptr[rsp+rdi*2+1]); dump();
mov (ecx, ptr[rsp+rdi*2+1000]); dump();
mov (ecx, ptr[rsp+rdi*2-1]); dump();
mov (ecx, ptr[rsp+rdi*2-1000]); dump();
mov (ecx, ptr[rsp+rdi*4+0]); dump();
mov (ecx, ptr[rsp+rdi*4+1]); dump();
mov (ecx, ptr[rsp+rdi*4+1000]); dump();
mov (ecx, ptr[rsp+rdi*4-1]); dump();
mov (ecx, ptr[rsp+rdi*4-1000]); dump();
mov (ecx, ptr[rsp+rdi*8+0]); dump();
mov (ecx, ptr[rsp+rdi*8+1]); dump();
mov (ecx, ptr[rsp+rdi*8+1000]); dump();
mov (ecx, ptr[rsp+rdi*8-1]); dump();
mov (ecx, ptr[rsp+rdi*8-1000]); dump();
mov (ecx, ptr[rsp+r9+0]); dump();
mov (ecx, ptr[rsp+r9+1]); dump();
mov (ecx, ptr[rsp+r9+1000]); dump();
mov (ecx, ptr[rsp+r9-1]); dump();
mov (ecx, ptr[rsp+r9-1000]); dump();
mov (ecx, ptr[rsp+r9*1+0]); dump();
mov (ecx, ptr[rsp+r9*1+1]); dump();
mov (ecx, ptr[rsp+r9*1+1000]); dump();
mov (ecx, ptr[rsp+r9*1-1]); dump();
mov (ecx, ptr[rsp+r9*1-1000]); dump();
mov (ecx, ptr[rsp+r9*2+0]); dump();
mov (ecx, ptr[rsp+r9*2+1]); dump();
mov (ecx, ptr[rsp+r9*2+1000]); dump();
mov (ecx, ptr[rsp+r9*2-1]); dump();
mov (ecx, ptr[rsp+r9*2-1000]); dump();
mov (ecx, ptr[rsp+r9*4+0]); dump();
mov (ecx, ptr[rsp+r9*4+1]); dump();
mov (ecx, ptr[rsp+r9*4+1000]); dump();
mov (ecx, ptr[rsp+r9*4-1]); dump();
mov (ecx, ptr[rsp+r9*4-1000]); dump();
mov (ecx, ptr[rsp+r9*8+0]); dump();
mov (ecx, ptr[rsp+r9*8+1]); dump();
mov (ecx, ptr[rsp+r9*8+1000]); dump();
mov (ecx, ptr[rsp+r9*8-1]); dump();
mov (ecx, ptr[rsp+r9*8-1000]); dump();
}
    void gen17(){
mov (ecx, ptr[rsp+r10+0]); dump();
mov (ecx, ptr[rsp+r10+1]); dump();
mov (ecx, ptr[rsp+r10+1000]); dump();
mov (ecx, ptr[rsp+r10-1]); dump();
mov (ecx, ptr[rsp+r10-1000]); dump();
mov (ecx, ptr[rsp+r10*1+0]); dump();
mov (ecx, ptr[rsp+r10*1+1]); dump();
mov (ecx, ptr[rsp+r10*1+1000]); dump();
mov (ecx, ptr[rsp+r10*1-1]); dump();
mov (ecx, ptr[rsp+r10*1-1000]); dump();
mov (ecx, ptr[rsp+r10*2+0]); dump();
mov (ecx, ptr[rsp+r10*2+1]); dump();
mov (ecx, ptr[rsp+r10*2+1000]); dump();
mov (ecx, ptr[rsp+r10*2-1]); dump();
mov (ecx, ptr[rsp+r10*2-1000]); dump();
mov (ecx, ptr[rsp+r10*4+0]); dump();
mov (ecx, ptr[rsp+r10*4+1]); dump();
mov (ecx, ptr[rsp+r10*4+1000]); dump();
mov (ecx, ptr[rsp+r10*4-1]); dump();
mov (ecx, ptr[rsp+r10*4-1000]); dump();
mov (ecx, ptr[rsp+r10*8+0]); dump();
mov (ecx, ptr[rsp+r10*8+1]); dump();
mov (ecx, ptr[rsp+r10*8+1000]); dump();
mov (ecx, ptr[rsp+r10*8-1]); dump();
mov (ecx, ptr[rsp+r10*8-1000]); dump();
mov (ecx, ptr[rsp+r11+0]); dump();
mov (ecx, ptr[rsp+r11+1]); dump();
mov (ecx, ptr[rsp+r11+1000]); dump();
mov (ecx, ptr[rsp+r11-1]); dump();
mov (ecx, ptr[rsp+r11-1000]); dump();
mov (ecx, ptr[rsp+r11*1+0]); dump();
mov (ecx, ptr[rsp+r11*1+1]); dump();
mov (ecx, ptr[rsp+r11*1+1000]); dump();
mov (ecx, ptr[rsp+r11*1-1]); dump();
mov (ecx, ptr[rsp+r11*1-1000]); dump();
mov (ecx, ptr[rsp+r11*2+0]); dump();
mov (ecx, ptr[rsp+r11*2+1]); dump();
mov (ecx, ptr[rsp+r11*2+1000]); dump();
mov (ecx, ptr[rsp+r11*2-1]); dump();
mov (ecx, ptr[rsp+r11*2-1000]); dump();
mov (ecx, ptr[rsp+r11*4+0]); dump();
mov (ecx, ptr[rsp+r11*4+1]); dump();
mov (ecx, ptr[rsp+r11*4+1000]); dump();
mov (ecx, ptr[rsp+r11*4-1]); dump();
mov (ecx, ptr[rsp+r11*4-1000]); dump();
mov (ecx, ptr[rsp+r11*8+0]); dump();
mov (ecx, ptr[rsp+r11*8+1]); dump();
mov (ecx, ptr[rsp+r11*8+1000]); dump();
mov (ecx, ptr[rsp+r11*8-1]); dump();
mov (ecx, ptr[rsp+r11*8-1000]); dump();
mov (ecx, ptr[rsp+r12+0]); dump();
mov (ecx, ptr[rsp+r12+1]); dump();
mov (ecx, ptr[rsp+r12+1000]); dump();
mov (ecx, ptr[rsp+r12-1]); dump();
mov (ecx, ptr[rsp+r12-1000]); dump();
mov (ecx, ptr[rsp+r12*1+0]); dump();
mov (ecx, ptr[rsp+r12*1+1]); dump();
mov (ecx, ptr[rsp+r12*1+1000]); dump();
mov (ecx, ptr[rsp+r12*1-1]); dump();
mov (ecx, ptr[rsp+r12*1-1000]); dump();
mov (ecx, ptr[rsp+r12*2+0]); dump();
mov (ecx, ptr[rsp+r12*2+1]); dump();
mov (ecx, ptr[rsp+r12*2+1000]); dump();
mov (ecx, ptr[rsp+r12*2-1]); dump();
mov (ecx, ptr[rsp+r12*2-1000]); dump();
mov (ecx, ptr[rsp+r12*4+0]); dump();
mov (ecx, ptr[rsp+r12*4+1]); dump();
mov (ecx, ptr[rsp+r12*4+1000]); dump();
mov (ecx, ptr[rsp+r12*4-1]); dump();
mov (ecx, ptr[rsp+r12*4-1000]); dump();
mov (ecx, ptr[rsp+r12*8+0]); dump();
mov (ecx, ptr[rsp+r12*8+1]); dump();
mov (ecx, ptr[rsp+r12*8+1000]); dump();
mov (ecx, ptr[rsp+r12*8-1]); dump();
mov (ecx, ptr[rsp+r12*8-1000]); dump();
mov (ecx, ptr[rsp+r13+0]); dump();
mov (ecx, ptr[rsp+r13+1]); dump();
mov (ecx, ptr[rsp+r13+1000]); dump();
mov (ecx, ptr[rsp+r13-1]); dump();
mov (ecx, ptr[rsp+r13-1000]); dump();
mov (ecx, ptr[rsp+r13*1+0]); dump();
mov (ecx, ptr[rsp+r13*1+1]); dump();
mov (ecx, ptr[rsp+r13*1+1000]); dump();
mov (ecx, ptr[rsp+r13*1-1]); dump();
mov (ecx, ptr[rsp+r13*1-1000]); dump();
mov (ecx, ptr[rsp+r13*2+0]); dump();
mov (ecx, ptr[rsp+r13*2+1]); dump();
mov (ecx, ptr[rsp+r13*2+1000]); dump();
mov (ecx, ptr[rsp+r13*2-1]); dump();
mov (ecx, ptr[rsp+r13*2-1000]); dump();
mov (ecx, ptr[rsp+r13*4+0]); dump();
mov (ecx, ptr[rsp+r13*4+1]); dump();
mov (ecx, ptr[rsp+r13*4+1000]); dump();
mov (ecx, ptr[rsp+r13*4-1]); dump();
mov (ecx, ptr[rsp+r13*4-1000]); dump();
mov (ecx, ptr[rsp+r13*8+0]); dump();
mov (ecx, ptr[rsp+r13*8+1]); dump();
mov (ecx, ptr[rsp+r13*8+1000]); dump();
mov (ecx, ptr[rsp+r13*8-1]); dump();
mov (ecx, ptr[rsp+r13*8-1000]); dump();
}
    void gen18(){
mov (ecx, ptr[rsp+r14+0]); dump();
mov (ecx, ptr[rsp+r14+1]); dump();
mov (ecx, ptr[rsp+r14+1000]); dump();
mov (ecx, ptr[rsp+r14-1]); dump();
mov (ecx, ptr[rsp+r14-1000]); dump();
mov (ecx, ptr[rsp+r14*1+0]); dump();
mov (ecx, ptr[rsp+r14*1+1]); dump();
mov (ecx, ptr[rsp+r14*1+1000]); dump();
mov (ecx, ptr[rsp+r14*1-1]); dump();
mov (ecx, ptr[rsp+r14*1-1000]); dump();
mov (ecx, ptr[rsp+r14*2+0]); dump();
mov (ecx, ptr[rsp+r14*2+1]); dump();
mov (ecx, ptr[rsp+r14*2+1000]); dump();
mov (ecx, ptr[rsp+r14*2-1]); dump();
mov (ecx, ptr[rsp+r14*2-1000]); dump();
mov (ecx, ptr[rsp+r14*4+0]); dump();
mov (ecx, ptr[rsp+r14*4+1]); dump();
mov (ecx, ptr[rsp+r14*4+1000]); dump();
mov (ecx, ptr[rsp+r14*4-1]); dump();
mov (ecx, ptr[rsp+r14*4-1000]); dump();
mov (ecx, ptr[rsp+r14*8+0]); dump();
mov (ecx, ptr[rsp+r14*8+1]); dump();
mov (ecx, ptr[rsp+r14*8+1000]); dump();
mov (ecx, ptr[rsp+r14*8-1]); dump();
mov (ecx, ptr[rsp+r14*8-1000]); dump();
mov (ecx, ptr[rsp+r15+0]); dump();
mov (ecx, ptr[rsp+r15+1]); dump();
mov (ecx, ptr[rsp+r15+1000]); dump();
mov (ecx, ptr[rsp+r15-1]); dump();
mov (ecx, ptr[rsp+r15-1000]); dump();
mov (ecx, ptr[rsp+r15*1+0]); dump();
mov (ecx, ptr[rsp+r15*1+1]); dump();
mov (ecx, ptr[rsp+r15*1+1000]); dump();
mov (ecx, ptr[rsp+r15*1-1]); dump();
mov (ecx, ptr[rsp+r15*1-1000]); dump();
mov (ecx, ptr[rsp+r15*2+0]); dump();
mov (ecx, ptr[rsp+r15*2+1]); dump();
mov (ecx, ptr[rsp+r15*2+1000]); dump();
mov (ecx, ptr[rsp+r15*2-1]); dump();
mov (ecx, ptr[rsp+r15*2-1000]); dump();
mov (ecx, ptr[rsp+r15*4+0]); dump();
mov (ecx, ptr[rsp+r15*4+1]); dump();
mov (ecx, ptr[rsp+r15*4+1000]); dump();
mov (ecx, ptr[rsp+r15*4-1]); dump();
mov (ecx, ptr[rsp+r15*4-1000]); dump();
mov (ecx, ptr[rsp+r15*8+0]); dump();
mov (ecx, ptr[rsp+r15*8+1]); dump();
mov (ecx, ptr[rsp+r15*8+1000]); dump();
mov (ecx, ptr[rsp+r15*8-1]); dump();
mov (ecx, ptr[rsp+r15*8-1000]); dump();
mov (ecx, ptr[rsp+0]); dump();
mov (ecx, ptr[rsp+1]); dump();
mov (ecx, ptr[rsp+1000]); dump();
mov (ecx, ptr[rsp-1]); dump();
mov (ecx, ptr[rsp-1000]); dump();
mov (ecx, ptr[rsp+0]); dump();
mov (ecx, ptr[rsp+1]); dump();
mov (ecx, ptr[rsp+1000]); dump();
mov (ecx, ptr[rsp-1]); dump();
mov (ecx, ptr[rsp-1000]); dump();
mov (ecx, ptr[rsp+0]); dump();
mov (ecx, ptr[rsp+1]); dump();
mov (ecx, ptr[rsp+1000]); dump();
mov (ecx, ptr[rsp-1]); dump();
mov (ecx, ptr[rsp-1000]); dump();
mov (ecx, ptr[rsp+0]); dump();
mov (ecx, ptr[rsp+1]); dump();
mov (ecx, ptr[rsp+1000]); dump();
mov (ecx, ptr[rsp-1]); dump();
mov (ecx, ptr[rsp-1000]); dump();
mov (ecx, ptr[rsp+0]); dump();
mov (ecx, ptr[rsp+1]); dump();
mov (ecx, ptr[rsp+1000]); dump();
mov (ecx, ptr[rsp-1]); dump();
mov (ecx, ptr[rsp-1000]); dump();
mov (ecx, ptr[rbp+rax+0]); dump();
mov (ecx, ptr[rbp+rax+1]); dump();
mov (ecx, ptr[rbp+rax+1000]); dump();
mov (ecx, ptr[rbp+rax-1]); dump();
mov (ecx, ptr[rbp+rax-1000]); dump();
mov (ecx, ptr[rbp+rax*1+0]); dump();
mov (ecx, ptr[rbp+rax*1+1]); dump();
mov (ecx, ptr[rbp+rax*1+1000]); dump();
mov (ecx, ptr[rbp+rax*1-1]); dump();
mov (ecx, ptr[rbp+rax*1-1000]); dump();
mov (ecx, ptr[rbp+rax*2+0]); dump();
mov (ecx, ptr[rbp+rax*2+1]); dump();
mov (ecx, ptr[rbp+rax*2+1000]); dump();
mov (ecx, ptr[rbp+rax*2-1]); dump();
mov (ecx, ptr[rbp+rax*2-1000]); dump();
mov (ecx, ptr[rbp+rax*4+0]); dump();
mov (ecx, ptr[rbp+rax*4+1]); dump();
mov (ecx, ptr[rbp+rax*4+1000]); dump();
mov (ecx, ptr[rbp+rax*4-1]); dump();
mov (ecx, ptr[rbp+rax*4-1000]); dump();
mov (ecx, ptr[rbp+rax*8+0]); dump();
mov (ecx, ptr[rbp+rax*8+1]); dump();
mov (ecx, ptr[rbp+rax*8+1000]); dump();
mov (ecx, ptr[rbp+rax*8-1]); dump();
mov (ecx, ptr[rbp+rax*8-1000]); dump();
}
    void gen19(){
mov (ecx, ptr[rbp+rcx+0]); dump();
mov (ecx, ptr[rbp+rcx+1]); dump();
mov (ecx, ptr[rbp+rcx+1000]); dump();
mov (ecx, ptr[rbp+rcx-1]); dump();
mov (ecx, ptr[rbp+rcx-1000]); dump();
mov (ecx, ptr[rbp+rcx*1+0]); dump();
mov (ecx, ptr[rbp+rcx*1+1]); dump();
mov (ecx, ptr[rbp+rcx*1+1000]); dump();
mov (ecx, ptr[rbp+rcx*1-1]); dump();
mov (ecx, ptr[rbp+rcx*1-1000]); dump();
mov (ecx, ptr[rbp+rcx*2+0]); dump();
mov (ecx, ptr[rbp+rcx*2+1]); dump();
mov (ecx, ptr[rbp+rcx*2+1000]); dump();
mov (ecx, ptr[rbp+rcx*2-1]); dump();
mov (ecx, ptr[rbp+rcx*2-1000]); dump();
mov (ecx, ptr[rbp+rcx*4+0]); dump();
mov (ecx, ptr[rbp+rcx*4+1]); dump();
mov (ecx, ptr[rbp+rcx*4+1000]); dump();
mov (ecx, ptr[rbp+rcx*4-1]); dump();
mov (ecx, ptr[rbp+rcx*4-1000]); dump();
mov (ecx, ptr[rbp+rcx*8+0]); dump();
mov (ecx, ptr[rbp+rcx*8+1]); dump();
mov (ecx, ptr[rbp+rcx*8+1000]); dump();
mov (ecx, ptr[rbp+rcx*8-1]); dump();
mov (ecx, ptr[rbp+rcx*8-1000]); dump();
mov (ecx, ptr[rbp+rdx+0]); dump();
mov (ecx, ptr[rbp+rdx+1]); dump();
mov (ecx, ptr[rbp+rdx+1000]); dump();
mov (ecx, ptr[rbp+rdx-1]); dump();
mov (ecx, ptr[rbp+rdx-1000]); dump();
mov (ecx, ptr[rbp+rdx*1+0]); dump();
mov (ecx, ptr[rbp+rdx*1+1]); dump();
mov (ecx, ptr[rbp+rdx*1+1000]); dump();
mov (ecx, ptr[rbp+rdx*1-1]); dump();
mov (ecx, ptr[rbp+rdx*1-1000]); dump();
mov (ecx, ptr[rbp+rdx*2+0]); dump();
mov (ecx, ptr[rbp+rdx*2+1]); dump();
mov (ecx, ptr[rbp+rdx*2+1000]); dump();
mov (ecx, ptr[rbp+rdx*2-1]); dump();
mov (ecx, ptr[rbp+rdx*2-1000]); dump();
mov (ecx, ptr[rbp+rdx*4+0]); dump();
mov (ecx, ptr[rbp+rdx*4+1]); dump();
mov (ecx, ptr[rbp+rdx*4+1000]); dump();
mov (ecx, ptr[rbp+rdx*4-1]); dump();
mov (ecx, ptr[rbp+rdx*4-1000]); dump();
mov (ecx, ptr[rbp+rdx*8+0]); dump();
mov (ecx, ptr[rbp+rdx*8+1]); dump();
mov (ecx, ptr[rbp+rdx*8+1000]); dump();
mov (ecx, ptr[rbp+rdx*8-1]); dump();
mov (ecx, ptr[rbp+rdx*8-1000]); dump();
mov (ecx, ptr[rbp+rbx+0]); dump();
mov (ecx, ptr[rbp+rbx+1]); dump();
mov (ecx, ptr[rbp+rbx+1000]); dump();
mov (ecx, ptr[rbp+rbx-1]); dump();
mov (ecx, ptr[rbp+rbx-1000]); dump();
mov (ecx, ptr[rbp+rbx*1+0]); dump();
mov (ecx, ptr[rbp+rbx*1+1]); dump();
mov (ecx, ptr[rbp+rbx*1+1000]); dump();
mov (ecx, ptr[rbp+rbx*1-1]); dump();
mov (ecx, ptr[rbp+rbx*1-1000]); dump();
mov (ecx, ptr[rbp+rbx*2+0]); dump();
mov (ecx, ptr[rbp+rbx*2+1]); dump();
mov (ecx, ptr[rbp+rbx*2+1000]); dump();
mov (ecx, ptr[rbp+rbx*2-1]); dump();
mov (ecx, ptr[rbp+rbx*2-1000]); dump();
mov (ecx, ptr[rbp+rbx*4+0]); dump();
mov (ecx, ptr[rbp+rbx*4+1]); dump();
mov (ecx, ptr[rbp+rbx*4+1000]); dump();
mov (ecx, ptr[rbp+rbx*4-1]); dump();
mov (ecx, ptr[rbp+rbx*4-1000]); dump();
mov (ecx, ptr[rbp+rbx*8+0]); dump();
mov (ecx, ptr[rbp+rbx*8+1]); dump();
mov (ecx, ptr[rbp+rbx*8+1000]); dump();
mov (ecx, ptr[rbp+rbx*8-1]); dump();
mov (ecx, ptr[rbp+rbx*8-1000]); dump();
mov (ecx, ptr[rbp+rbp+0]); dump();
mov (ecx, ptr[rbp+rbp+1]); dump();
mov (ecx, ptr[rbp+rbp+1000]); dump();
mov (ecx, ptr[rbp+rbp-1]); dump();
mov (ecx, ptr[rbp+rbp-1000]); dump();
mov (ecx, ptr[rbp+rbp*1+0]); dump();
mov (ecx, ptr[rbp+rbp*1+1]); dump();
mov (ecx, ptr[rbp+rbp*1+1000]); dump();
mov (ecx, ptr[rbp+rbp*1-1]); dump();
mov (ecx, ptr[rbp+rbp*1-1000]); dump();
mov (ecx, ptr[rbp+rbp*2+0]); dump();
mov (ecx, ptr[rbp+rbp*2+1]); dump();
mov (ecx, ptr[rbp+rbp*2+1000]); dump();
mov (ecx, ptr[rbp+rbp*2-1]); dump();
mov (ecx, ptr[rbp+rbp*2-1000]); dump();
mov (ecx, ptr[rbp+rbp*4+0]); dump();
mov (ecx, ptr[rbp+rbp*4+1]); dump();
mov (ecx, ptr[rbp+rbp*4+1000]); dump();
mov (ecx, ptr[rbp+rbp*4-1]); dump();
mov (ecx, ptr[rbp+rbp*4-1000]); dump();
mov (ecx, ptr[rbp+rbp*8+0]); dump();
mov (ecx, ptr[rbp+rbp*8+1]); dump();
mov (ecx, ptr[rbp+rbp*8+1000]); dump();
mov (ecx, ptr[rbp+rbp*8-1]); dump();
mov (ecx, ptr[rbp+rbp*8-1000]); dump();
}
    void gen20(){
mov (ecx, ptr[rbp+rsi+0]); dump();
mov (ecx, ptr[rbp+rsi+1]); dump();
mov (ecx, ptr[rbp+rsi+1000]); dump();
mov (ecx, ptr[rbp+rsi-1]); dump();
mov (ecx, ptr[rbp+rsi-1000]); dump();
mov (ecx, ptr[rbp+rsi*1+0]); dump();
mov (ecx, ptr[rbp+rsi*1+1]); dump();
mov (ecx, ptr[rbp+rsi*1+1000]); dump();
mov (ecx, ptr[rbp+rsi*1-1]); dump();
mov (ecx, ptr[rbp+rsi*1-1000]); dump();
mov (ecx, ptr[rbp+rsi*2+0]); dump();
mov (ecx, ptr[rbp+rsi*2+1]); dump();
mov (ecx, ptr[rbp+rsi*2+1000]); dump();
mov (ecx, ptr[rbp+rsi*2-1]); dump();
mov (ecx, ptr[rbp+rsi*2-1000]); dump();
mov (ecx, ptr[rbp+rsi*4+0]); dump();
mov (ecx, ptr[rbp+rsi*4+1]); dump();
mov (ecx, ptr[rbp+rsi*4+1000]); dump();
mov (ecx, ptr[rbp+rsi*4-1]); dump();
mov (ecx, ptr[rbp+rsi*4-1000]); dump();
mov (ecx, ptr[rbp+rsi*8+0]); dump();
mov (ecx, ptr[rbp+rsi*8+1]); dump();
mov (ecx, ptr[rbp+rsi*8+1000]); dump();
mov (ecx, ptr[rbp+rsi*8-1]); dump();
mov (ecx, ptr[rbp+rsi*8-1000]); dump();
mov (ecx, ptr[rbp+rdi+0]); dump();
mov (ecx, ptr[rbp+rdi+1]); dump();
mov (ecx, ptr[rbp+rdi+1000]); dump();
mov (ecx, ptr[rbp+rdi-1]); dump();
mov (ecx, ptr[rbp+rdi-1000]); dump();
mov (ecx, ptr[rbp+rdi*1+0]); dump();
mov (ecx, ptr[rbp+rdi*1+1]); dump();
mov (ecx, ptr[rbp+rdi*1+1000]); dump();
mov (ecx, ptr[rbp+rdi*1-1]); dump();
mov (ecx, ptr[rbp+rdi*1-1000]); dump();
mov (ecx, ptr[rbp+rdi*2+0]); dump();
mov (ecx, ptr[rbp+rdi*2+1]); dump();
mov (ecx, ptr[rbp+rdi*2+1000]); dump();
mov (ecx, ptr[rbp+rdi*2-1]); dump();
mov (ecx, ptr[rbp+rdi*2-1000]); dump();
mov (ecx, ptr[rbp+rdi*4+0]); dump();
mov (ecx, ptr[rbp+rdi*4+1]); dump();
mov (ecx, ptr[rbp+rdi*4+1000]); dump();
mov (ecx, ptr[rbp+rdi*4-1]); dump();
mov (ecx, ptr[rbp+rdi*4-1000]); dump();
mov (ecx, ptr[rbp+rdi*8+0]); dump();
mov (ecx, ptr[rbp+rdi*8+1]); dump();
mov (ecx, ptr[rbp+rdi*8+1000]); dump();
mov (ecx, ptr[rbp+rdi*8-1]); dump();
mov (ecx, ptr[rbp+rdi*8-1000]); dump();
mov (ecx, ptr[rbp+r9+0]); dump();
mov (ecx, ptr[rbp+r9+1]); dump();
mov (ecx, ptr[rbp+r9+1000]); dump();
mov (ecx, ptr[rbp+r9-1]); dump();
mov (ecx, ptr[rbp+r9-1000]); dump();
mov (ecx, ptr[rbp+r9*1+0]); dump();
mov (ecx, ptr[rbp+r9*1+1]); dump();
mov (ecx, ptr[rbp+r9*1+1000]); dump();
mov (ecx, ptr[rbp+r9*1-1]); dump();
mov (ecx, ptr[rbp+r9*1-1000]); dump();
mov (ecx, ptr[rbp+r9*2+0]); dump();
mov (ecx, ptr[rbp+r9*2+1]); dump();
mov (ecx, ptr[rbp+r9*2+1000]); dump();
mov (ecx, ptr[rbp+r9*2-1]); dump();
mov (ecx, ptr[rbp+r9*2-1000]); dump();
mov (ecx, ptr[rbp+r9*4+0]); dump();
mov (ecx, ptr[rbp+r9*4+1]); dump();
mov (ecx, ptr[rbp+r9*4+1000]); dump();
mov (ecx, ptr[rbp+r9*4-1]); dump();
mov (ecx, ptr[rbp+r9*4-1000]); dump();
mov (ecx, ptr[rbp+r9*8+0]); dump();
mov (ecx, ptr[rbp+r9*8+1]); dump();
mov (ecx, ptr[rbp+r9*8+1000]); dump();
mov (ecx, ptr[rbp+r9*8-1]); dump();
mov (ecx, ptr[rbp+r9*8-1000]); dump();
mov (ecx, ptr[rbp+r10+0]); dump();
mov (ecx, ptr[rbp+r10+1]); dump();
mov (ecx, ptr[rbp+r10+1000]); dump();
mov (ecx, ptr[rbp+r10-1]); dump();
mov (ecx, ptr[rbp+r10-1000]); dump();
mov (ecx, ptr[rbp+r10*1+0]); dump();
mov (ecx, ptr[rbp+r10*1+1]); dump();
mov (ecx, ptr[rbp+r10*1+1000]); dump();
mov (ecx, ptr[rbp+r10*1-1]); dump();
mov (ecx, ptr[rbp+r10*1-1000]); dump();
mov (ecx, ptr[rbp+r10*2+0]); dump();
mov (ecx, ptr[rbp+r10*2+1]); dump();
mov (ecx, ptr[rbp+r10*2+1000]); dump();
mov (ecx, ptr[rbp+r10*2-1]); dump();
mov (ecx, ptr[rbp+r10*2-1000]); dump();
mov (ecx, ptr[rbp+r10*4+0]); dump();
mov (ecx, ptr[rbp+r10*4+1]); dump();
mov (ecx, ptr[rbp+r10*4+1000]); dump();
mov (ecx, ptr[rbp+r10*4-1]); dump();
mov (ecx, ptr[rbp+r10*4-1000]); dump();
mov (ecx, ptr[rbp+r10*8+0]); dump();
mov (ecx, ptr[rbp+r10*8+1]); dump();
mov (ecx, ptr[rbp+r10*8+1000]); dump();
mov (ecx, ptr[rbp+r10*8-1]); dump();
mov (ecx, ptr[rbp+r10*8-1000]); dump();
}
    void gen21(){
mov (ecx, ptr[rbp+r11+0]); dump();
mov (ecx, ptr[rbp+r11+1]); dump();
mov (ecx, ptr[rbp+r11+1000]); dump();
mov (ecx, ptr[rbp+r11-1]); dump();
mov (ecx, ptr[rbp+r11-1000]); dump();
mov (ecx, ptr[rbp+r11*1+0]); dump();
mov (ecx, ptr[rbp+r11*1+1]); dump();
mov (ecx, ptr[rbp+r11*1+1000]); dump();
mov (ecx, ptr[rbp+r11*1-1]); dump();
mov (ecx, ptr[rbp+r11*1-1000]); dump();
mov (ecx, ptr[rbp+r11*2+0]); dump();
mov (ecx, ptr[rbp+r11*2+1]); dump();
mov (ecx, ptr[rbp+r11*2+1000]); dump();
mov (ecx, ptr[rbp+r11*2-1]); dump();
mov (ecx, ptr[rbp+r11*2-1000]); dump();
mov (ecx, ptr[rbp+r11*4+0]); dump();
mov (ecx, ptr[rbp+r11*4+1]); dump();
mov (ecx, ptr[rbp+r11*4+1000]); dump();
mov (ecx, ptr[rbp+r11*4-1]); dump();
mov (ecx, ptr[rbp+r11*4-1000]); dump();
mov (ecx, ptr[rbp+r11*8+0]); dump();
mov (ecx, ptr[rbp+r11*8+1]); dump();
mov (ecx, ptr[rbp+r11*8+1000]); dump();
mov (ecx, ptr[rbp+r11*8-1]); dump();
mov (ecx, ptr[rbp+r11*8-1000]); dump();
mov (ecx, ptr[rbp+r12+0]); dump();
mov (ecx, ptr[rbp+r12+1]); dump();
mov (ecx, ptr[rbp+r12+1000]); dump();
mov (ecx, ptr[rbp+r12-1]); dump();
mov (ecx, ptr[rbp+r12-1000]); dump();
mov (ecx, ptr[rbp+r12*1+0]); dump();
mov (ecx, ptr[rbp+r12*1+1]); dump();
mov (ecx, ptr[rbp+r12*1+1000]); dump();
mov (ecx, ptr[rbp+r12*1-1]); dump();
mov (ecx, ptr[rbp+r12*1-1000]); dump();
mov (ecx, ptr[rbp+r12*2+0]); dump();
mov (ecx, ptr[rbp+r12*2+1]); dump();
mov (ecx, ptr[rbp+r12*2+1000]); dump();
mov (ecx, ptr[rbp+r12*2-1]); dump();
mov (ecx, ptr[rbp+r12*2-1000]); dump();
mov (ecx, ptr[rbp+r12*4+0]); dump();
mov (ecx, ptr[rbp+r12*4+1]); dump();
mov (ecx, ptr[rbp+r12*4+1000]); dump();
mov (ecx, ptr[rbp+r12*4-1]); dump();
mov (ecx, ptr[rbp+r12*4-1000]); dump();
mov (ecx, ptr[rbp+r12*8+0]); dump();
mov (ecx, ptr[rbp+r12*8+1]); dump();
mov (ecx, ptr[rbp+r12*8+1000]); dump();
mov (ecx, ptr[rbp+r12*8-1]); dump();
mov (ecx, ptr[rbp+r12*8-1000]); dump();
mov (ecx, ptr[rbp+r13+0]); dump();
mov (ecx, ptr[rbp+r13+1]); dump();
mov (ecx, ptr[rbp+r13+1000]); dump();
mov (ecx, ptr[rbp+r13-1]); dump();
mov (ecx, ptr[rbp+r13-1000]); dump();
mov (ecx, ptr[rbp+r13*1+0]); dump();
mov (ecx, ptr[rbp+r13*1+1]); dump();
mov (ecx, ptr[rbp+r13*1+1000]); dump();
mov (ecx, ptr[rbp+r13*1-1]); dump();
mov (ecx, ptr[rbp+r13*1-1000]); dump();
mov (ecx, ptr[rbp+r13*2+0]); dump();
mov (ecx, ptr[rbp+r13*2+1]); dump();
mov (ecx, ptr[rbp+r13*2+1000]); dump();
mov (ecx, ptr[rbp+r13*2-1]); dump();
mov (ecx, ptr[rbp+r13*2-1000]); dump();
mov (ecx, ptr[rbp+r13*4+0]); dump();
mov (ecx, ptr[rbp+r13*4+1]); dump();
mov (ecx, ptr[rbp+r13*4+1000]); dump();
mov (ecx, ptr[rbp+r13*4-1]); dump();
mov (ecx, ptr[rbp+r13*4-1000]); dump();
mov (ecx, ptr[rbp+r13*8+0]); dump();
mov (ecx, ptr[rbp+r13*8+1]); dump();
mov (ecx, ptr[rbp+r13*8+1000]); dump();
mov (ecx, ptr[rbp+r13*8-1]); dump();
mov (ecx, ptr[rbp+r13*8-1000]); dump();
mov (ecx, ptr[rbp+r14+0]); dump();
mov (ecx, ptr[rbp+r14+1]); dump();
mov (ecx, ptr[rbp+r14+1000]); dump();
mov (ecx, ptr[rbp+r14-1]); dump();
mov (ecx, ptr[rbp+r14-1000]); dump();
mov (ecx, ptr[rbp+r14*1+0]); dump();
mov (ecx, ptr[rbp+r14*1+1]); dump();
mov (ecx, ptr[rbp+r14*1+1000]); dump();
mov (ecx, ptr[rbp+r14*1-1]); dump();
mov (ecx, ptr[rbp+r14*1-1000]); dump();
mov (ecx, ptr[rbp+r14*2+0]); dump();
mov (ecx, ptr[rbp+r14*2+1]); dump();
mov (ecx, ptr[rbp+r14*2+1000]); dump();
mov (ecx, ptr[rbp+r14*2-1]); dump();
mov (ecx, ptr[rbp+r14*2-1000]); dump();
mov (ecx, ptr[rbp+r14*4+0]); dump();
mov (ecx, ptr[rbp+r14*4+1]); dump();
mov (ecx, ptr[rbp+r14*4+1000]); dump();
mov (ecx, ptr[rbp+r14*4-1]); dump();
mov (ecx, ptr[rbp+r14*4-1000]); dump();
mov (ecx, ptr[rbp+r14*8+0]); dump();
mov (ecx, ptr[rbp+r14*8+1]); dump();
mov (ecx, ptr[rbp+r14*8+1000]); dump();
mov (ecx, ptr[rbp+r14*8-1]); dump();
mov (ecx, ptr[rbp+r14*8-1000]); dump();
}
    void gen22(){
mov (ecx, ptr[rbp+r15+0]); dump();
mov (ecx, ptr[rbp+r15+1]); dump();
mov (ecx, ptr[rbp+r15+1000]); dump();
mov (ecx, ptr[rbp+r15-1]); dump();
mov (ecx, ptr[rbp+r15-1000]); dump();
mov (ecx, ptr[rbp+r15*1+0]); dump();
mov (ecx, ptr[rbp+r15*1+1]); dump();
mov (ecx, ptr[rbp+r15*1+1000]); dump();
mov (ecx, ptr[rbp+r15*1-1]); dump();
mov (ecx, ptr[rbp+r15*1-1000]); dump();
mov (ecx, ptr[rbp+r15*2+0]); dump();
mov (ecx, ptr[rbp+r15*2+1]); dump();
mov (ecx, ptr[rbp+r15*2+1000]); dump();
mov (ecx, ptr[rbp+r15*2-1]); dump();
mov (ecx, ptr[rbp+r15*2-1000]); dump();
mov (ecx, ptr[rbp+r15*4+0]); dump();
mov (ecx, ptr[rbp+r15*4+1]); dump();
mov (ecx, ptr[rbp+r15*4+1000]); dump();
mov (ecx, ptr[rbp+r15*4-1]); dump();
mov (ecx, ptr[rbp+r15*4-1000]); dump();
mov (ecx, ptr[rbp+r15*8+0]); dump();
mov (ecx, ptr[rbp+r15*8+1]); dump();
mov (ecx, ptr[rbp+r15*8+1000]); dump();
mov (ecx, ptr[rbp+r15*8-1]); dump();
mov (ecx, ptr[rbp+r15*8-1000]); dump();
mov (ecx, ptr[rbp+0]); dump();
mov (ecx, ptr[rbp+1]); dump();
mov (ecx, ptr[rbp+1000]); dump();
mov (ecx, ptr[rbp-1]); dump();
mov (ecx, ptr[rbp-1000]); dump();
mov (ecx, ptr[rbp+0]); dump();
mov (ecx, ptr[rbp+1]); dump();
mov (ecx, ptr[rbp+1000]); dump();
mov (ecx, ptr[rbp-1]); dump();
mov (ecx, ptr[rbp-1000]); dump();
mov (ecx, ptr[rbp+0]); dump();
mov (ecx, ptr[rbp+1]); dump();
mov (ecx, ptr[rbp+1000]); dump();
mov (ecx, ptr[rbp-1]); dump();
mov (ecx, ptr[rbp-1000]); dump();
mov (ecx, ptr[rbp+0]); dump();
mov (ecx, ptr[rbp+1]); dump();
mov (ecx, ptr[rbp+1000]); dump();
mov (ecx, ptr[rbp-1]); dump();
mov (ecx, ptr[rbp-1000]); dump();
mov (ecx, ptr[rbp+0]); dump();
mov (ecx, ptr[rbp+1]); dump();
mov (ecx, ptr[rbp+1000]); dump();
mov (ecx, ptr[rbp-1]); dump();
mov (ecx, ptr[rbp-1000]); dump();
mov (ecx, ptr[rsi+rax+0]); dump();
mov (ecx, ptr[rsi+rax+1]); dump();
mov (ecx, ptr[rsi+rax+1000]); dump();
mov (ecx, ptr[rsi+rax-1]); dump();
mov (ecx, ptr[rsi+rax-1000]); dump();
mov (ecx, ptr[rsi+rax*1+0]); dump();
mov (ecx, ptr[rsi+rax*1+1]); dump();
mov (ecx, ptr[rsi+rax*1+1000]); dump();
mov (ecx, ptr[rsi+rax*1-1]); dump();
mov (ecx, ptr[rsi+rax*1-1000]); dump();
mov (ecx, ptr[rsi+rax*2+0]); dump();
mov (ecx, ptr[rsi+rax*2+1]); dump();
mov (ecx, ptr[rsi+rax*2+1000]); dump();
mov (ecx, ptr[rsi+rax*2-1]); dump();
mov (ecx, ptr[rsi+rax*2-1000]); dump();
mov (ecx, ptr[rsi+rax*4+0]); dump();
mov (ecx, ptr[rsi+rax*4+1]); dump();
mov (ecx, ptr[rsi+rax*4+1000]); dump();
mov (ecx, ptr[rsi+rax*4-1]); dump();
mov (ecx, ptr[rsi+rax*4-1000]); dump();
mov (ecx, ptr[rsi+rax*8+0]); dump();
mov (ecx, ptr[rsi+rax*8+1]); dump();
mov (ecx, ptr[rsi+rax*8+1000]); dump();
mov (ecx, ptr[rsi+rax*8-1]); dump();
mov (ecx, ptr[rsi+rax*8-1000]); dump();
mov (ecx, ptr[rsi+rcx+0]); dump();
mov (ecx, ptr[rsi+rcx+1]); dump();
mov (ecx, ptr[rsi+rcx+1000]); dump();
mov (ecx, ptr[rsi+rcx-1]); dump();
mov (ecx, ptr[rsi+rcx-1000]); dump();
mov (ecx, ptr[rsi+rcx*1+0]); dump();
mov (ecx, ptr[rsi+rcx*1+1]); dump();
mov (ecx, ptr[rsi+rcx*1+1000]); dump();
mov (ecx, ptr[rsi+rcx*1-1]); dump();
mov (ecx, ptr[rsi+rcx*1-1000]); dump();
mov (ecx, ptr[rsi+rcx*2+0]); dump();
mov (ecx, ptr[rsi+rcx*2+1]); dump();
mov (ecx, ptr[rsi+rcx*2+1000]); dump();
mov (ecx, ptr[rsi+rcx*2-1]); dump();
mov (ecx, ptr[rsi+rcx*2-1000]); dump();
mov (ecx, ptr[rsi+rcx*4+0]); dump();
mov (ecx, ptr[rsi+rcx*4+1]); dump();
mov (ecx, ptr[rsi+rcx*4+1000]); dump();
mov (ecx, ptr[rsi+rcx*4-1]); dump();
mov (ecx, ptr[rsi+rcx*4-1000]); dump();
mov (ecx, ptr[rsi+rcx*8+0]); dump();
mov (ecx, ptr[rsi+rcx*8+1]); dump();
mov (ecx, ptr[rsi+rcx*8+1000]); dump();
mov (ecx, ptr[rsi+rcx*8-1]); dump();
mov (ecx, ptr[rsi+rcx*8-1000]); dump();
}
    void gen23(){
mov (ecx, ptr[rsi+rdx+0]); dump();
mov (ecx, ptr[rsi+rdx+1]); dump();
mov (ecx, ptr[rsi+rdx+1000]); dump();
mov (ecx, ptr[rsi+rdx-1]); dump();
mov (ecx, ptr[rsi+rdx-1000]); dump();
mov (ecx, ptr[rsi+rdx*1+0]); dump();
mov (ecx, ptr[rsi+rdx*1+1]); dump();
mov (ecx, ptr[rsi+rdx*1+1000]); dump();
mov (ecx, ptr[rsi+rdx*1-1]); dump();
mov (ecx, ptr[rsi+rdx*1-1000]); dump();
mov (ecx, ptr[rsi+rdx*2+0]); dump();
mov (ecx, ptr[rsi+rdx*2+1]); dump();
mov (ecx, ptr[rsi+rdx*2+1000]); dump();
mov (ecx, ptr[rsi+rdx*2-1]); dump();
mov (ecx, ptr[rsi+rdx*2-1000]); dump();
mov (ecx, ptr[rsi+rdx*4+0]); dump();
mov (ecx, ptr[rsi+rdx*4+1]); dump();
mov (ecx, ptr[rsi+rdx*4+1000]); dump();
mov (ecx, ptr[rsi+rdx*4-1]); dump();
mov (ecx, ptr[rsi+rdx*4-1000]); dump();
mov (ecx, ptr[rsi+rdx*8+0]); dump();
mov (ecx, ptr[rsi+rdx*8+1]); dump();
mov (ecx, ptr[rsi+rdx*8+1000]); dump();
mov (ecx, ptr[rsi+rdx*8-1]); dump();
mov (ecx, ptr[rsi+rdx*8-1000]); dump();
mov (ecx, ptr[rsi+rbx+0]); dump();
mov (ecx, ptr[rsi+rbx+1]); dump();
mov (ecx, ptr[rsi+rbx+1000]); dump();
mov (ecx, ptr[rsi+rbx-1]); dump();
mov (ecx, ptr[rsi+rbx-1000]); dump();
mov (ecx, ptr[rsi+rbx*1+0]); dump();
mov (ecx, ptr[rsi+rbx*1+1]); dump();
mov (ecx, ptr[rsi+rbx*1+1000]); dump();
mov (ecx, ptr[rsi+rbx*1-1]); dump();
mov (ecx, ptr[rsi+rbx*1-1000]); dump();
mov (ecx, ptr[rsi+rbx*2+0]); dump();
mov (ecx, ptr[rsi+rbx*2+1]); dump();
mov (ecx, ptr[rsi+rbx*2+1000]); dump();
mov (ecx, ptr[rsi+rbx*2-1]); dump();
mov (ecx, ptr[rsi+rbx*2-1000]); dump();
mov (ecx, ptr[rsi+rbx*4+0]); dump();
mov (ecx, ptr[rsi+rbx*4+1]); dump();
mov (ecx, ptr[rsi+rbx*4+1000]); dump();
mov (ecx, ptr[rsi+rbx*4-1]); dump();
mov (ecx, ptr[rsi+rbx*4-1000]); dump();
mov (ecx, ptr[rsi+rbx*8+0]); dump();
mov (ecx, ptr[rsi+rbx*8+1]); dump();
mov (ecx, ptr[rsi+rbx*8+1000]); dump();
mov (ecx, ptr[rsi+rbx*8-1]); dump();
mov (ecx, ptr[rsi+rbx*8-1000]); dump();
mov (ecx, ptr[rsi+rbp+0]); dump();
mov (ecx, ptr[rsi+rbp+1]); dump();
mov (ecx, ptr[rsi+rbp+1000]); dump();
mov (ecx, ptr[rsi+rbp-1]); dump();
mov (ecx, ptr[rsi+rbp-1000]); dump();
mov (ecx, ptr[rsi+rbp*1+0]); dump();
mov (ecx, ptr[rsi+rbp*1+1]); dump();
mov (ecx, ptr[rsi+rbp*1+1000]); dump();
mov (ecx, ptr[rsi+rbp*1-1]); dump();
mov (ecx, ptr[rsi+rbp*1-1000]); dump();
mov (ecx, ptr[rsi+rbp*2+0]); dump();
mov (ecx, ptr[rsi+rbp*2+1]); dump();
mov (ecx, ptr[rsi+rbp*2+1000]); dump();
mov (ecx, ptr[rsi+rbp*2-1]); dump();
mov (ecx, ptr[rsi+rbp*2-1000]); dump();
mov (ecx, ptr[rsi+rbp*4+0]); dump();
mov (ecx, ptr[rsi+rbp*4+1]); dump();
mov (ecx, ptr[rsi+rbp*4+1000]); dump();
mov (ecx, ptr[rsi+rbp*4-1]); dump();
mov (ecx, ptr[rsi+rbp*4-1000]); dump();
mov (ecx, ptr[rsi+rbp*8+0]); dump();
mov (ecx, ptr[rsi+rbp*8+1]); dump();
mov (ecx, ptr[rsi+rbp*8+1000]); dump();
mov (ecx, ptr[rsi+rbp*8-1]); dump();
mov (ecx, ptr[rsi+rbp*8-1000]); dump();
mov (ecx, ptr[rsi+rsi+0]); dump();
mov (ecx, ptr[rsi+rsi+1]); dump();
mov (ecx, ptr[rsi+rsi+1000]); dump();
mov (ecx, ptr[rsi+rsi-1]); dump();
mov (ecx, ptr[rsi+rsi-1000]); dump();
mov (ecx, ptr[rsi+rsi*1+0]); dump();
mov (ecx, ptr[rsi+rsi*1+1]); dump();
mov (ecx, ptr[rsi+rsi*1+1000]); dump();
mov (ecx, ptr[rsi+rsi*1-1]); dump();
mov (ecx, ptr[rsi+rsi*1-1000]); dump();
mov (ecx, ptr[rsi+rsi*2+0]); dump();
mov (ecx, ptr[rsi+rsi*2+1]); dump();
mov (ecx, ptr[rsi+rsi*2+1000]); dump();
mov (ecx, ptr[rsi+rsi*2-1]); dump();
mov (ecx, ptr[rsi+rsi*2-1000]); dump();
mov (ecx, ptr[rsi+rsi*4+0]); dump();
mov (ecx, ptr[rsi+rsi*4+1]); dump();
mov (ecx, ptr[rsi+rsi*4+1000]); dump();
mov (ecx, ptr[rsi+rsi*4-1]); dump();
mov (ecx, ptr[rsi+rsi*4-1000]); dump();
mov (ecx, ptr[rsi+rsi*8+0]); dump();
mov (ecx, ptr[rsi+rsi*8+1]); dump();
mov (ecx, ptr[rsi+rsi*8+1000]); dump();
mov (ecx, ptr[rsi+rsi*8-1]); dump();
mov (ecx, ptr[rsi+rsi*8-1000]); dump();
}
    void gen24(){
mov (ecx, ptr[rsi+rdi+0]); dump();
mov (ecx, ptr[rsi+rdi+1]); dump();
mov (ecx, ptr[rsi+rdi+1000]); dump();
mov (ecx, ptr[rsi+rdi-1]); dump();
mov (ecx, ptr[rsi+rdi-1000]); dump();
mov (ecx, ptr[rsi+rdi*1+0]); dump();
mov (ecx, ptr[rsi+rdi*1+1]); dump();
mov (ecx, ptr[rsi+rdi*1+1000]); dump();
mov (ecx, ptr[rsi+rdi*1-1]); dump();
mov (ecx, ptr[rsi+rdi*1-1000]); dump();
mov (ecx, ptr[rsi+rdi*2+0]); dump();
mov (ecx, ptr[rsi+rdi*2+1]); dump();
mov (ecx, ptr[rsi+rdi*2+1000]); dump();
mov (ecx, ptr[rsi+rdi*2-1]); dump();
mov (ecx, ptr[rsi+rdi*2-1000]); dump();
mov (ecx, ptr[rsi+rdi*4+0]); dump();
mov (ecx, ptr[rsi+rdi*4+1]); dump();
mov (ecx, ptr[rsi+rdi*4+1000]); dump();
mov (ecx, ptr[rsi+rdi*4-1]); dump();
mov (ecx, ptr[rsi+rdi*4-1000]); dump();
mov (ecx, ptr[rsi+rdi*8+0]); dump();
mov (ecx, ptr[rsi+rdi*8+1]); dump();
mov (ecx, ptr[rsi+rdi*8+1000]); dump();
mov (ecx, ptr[rsi+rdi*8-1]); dump();
mov (ecx, ptr[rsi+rdi*8-1000]); dump();
mov (ecx, ptr[rsi+r9+0]); dump();
mov (ecx, ptr[rsi+r9+1]); dump();
mov (ecx, ptr[rsi+r9+1000]); dump();
mov (ecx, ptr[rsi+r9-1]); dump();
mov (ecx, ptr[rsi+r9-1000]); dump();
mov (ecx, ptr[rsi+r9*1+0]); dump();
mov (ecx, ptr[rsi+r9*1+1]); dump();
mov (ecx, ptr[rsi+r9*1+1000]); dump();
mov (ecx, ptr[rsi+r9*1-1]); dump();
mov (ecx, ptr[rsi+r9*1-1000]); dump();
mov (ecx, ptr[rsi+r9*2+0]); dump();
mov (ecx, ptr[rsi+r9*2+1]); dump();
mov (ecx, ptr[rsi+r9*2+1000]); dump();
mov (ecx, ptr[rsi+r9*2-1]); dump();
mov (ecx, ptr[rsi+r9*2-1000]); dump();
mov (ecx, ptr[rsi+r9*4+0]); dump();
mov (ecx, ptr[rsi+r9*4+1]); dump();
mov (ecx, ptr[rsi+r9*4+1000]); dump();
mov (ecx, ptr[rsi+r9*4-1]); dump();
mov (ecx, ptr[rsi+r9*4-1000]); dump();
mov (ecx, ptr[rsi+r9*8+0]); dump();
mov (ecx, ptr[rsi+r9*8+1]); dump();
mov (ecx, ptr[rsi+r9*8+1000]); dump();
mov (ecx, ptr[rsi+r9*8-1]); dump();
mov (ecx, ptr[rsi+r9*8-1000]); dump();
mov (ecx, ptr[rsi+r10+0]); dump();
mov (ecx, ptr[rsi+r10+1]); dump();
mov (ecx, ptr[rsi+r10+1000]); dump();
mov (ecx, ptr[rsi+r10-1]); dump();
mov (ecx, ptr[rsi+r10-1000]); dump();
mov (ecx, ptr[rsi+r10*1+0]); dump();
mov (ecx, ptr[rsi+r10*1+1]); dump();
mov (ecx, ptr[rsi+r10*1+1000]); dump();
mov (ecx, ptr[rsi+r10*1-1]); dump();
mov (ecx, ptr[rsi+r10*1-1000]); dump();
mov (ecx, ptr[rsi+r10*2+0]); dump();
mov (ecx, ptr[rsi+r10*2+1]); dump();
mov (ecx, ptr[rsi+r10*2+1000]); dump();
mov (ecx, ptr[rsi+r10*2-1]); dump();
mov (ecx, ptr[rsi+r10*2-1000]); dump();
mov (ecx, ptr[rsi+r10*4+0]); dump();
mov (ecx, ptr[rsi+r10*4+1]); dump();
mov (ecx, ptr[rsi+r10*4+1000]); dump();
mov (ecx, ptr[rsi+r10*4-1]); dump();
mov (ecx, ptr[rsi+r10*4-1000]); dump();
mov (ecx, ptr[rsi+r10*8+0]); dump();
mov (ecx, ptr[rsi+r10*8+1]); dump();
mov (ecx, ptr[rsi+r10*8+1000]); dump();
mov (ecx, ptr[rsi+r10*8-1]); dump();
mov (ecx, ptr[rsi+r10*8-1000]); dump();
mov (ecx, ptr[rsi+r11+0]); dump();
mov (ecx, ptr[rsi+r11+1]); dump();
mov (ecx, ptr[rsi+r11+1000]); dump();
mov (ecx, ptr[rsi+r11-1]); dump();
mov (ecx, ptr[rsi+r11-1000]); dump();
mov (ecx, ptr[rsi+r11*1+0]); dump();
mov (ecx, ptr[rsi+r11*1+1]); dump();
mov (ecx, ptr[rsi+r11*1+1000]); dump();
mov (ecx, ptr[rsi+r11*1-1]); dump();
mov (ecx, ptr[rsi+r11*1-1000]); dump();
mov (ecx, ptr[rsi+r11*2+0]); dump();
mov (ecx, ptr[rsi+r11*2+1]); dump();
mov (ecx, ptr[rsi+r11*2+1000]); dump();
mov (ecx, ptr[rsi+r11*2-1]); dump();
mov (ecx, ptr[rsi+r11*2-1000]); dump();
mov (ecx, ptr[rsi+r11*4+0]); dump();
mov (ecx, ptr[rsi+r11*4+1]); dump();
mov (ecx, ptr[rsi+r11*4+1000]); dump();
mov (ecx, ptr[rsi+r11*4-1]); dump();
mov (ecx, ptr[rsi+r11*4-1000]); dump();
mov (ecx, ptr[rsi+r11*8+0]); dump();
mov (ecx, ptr[rsi+r11*8+1]); dump();
mov (ecx, ptr[rsi+r11*8+1000]); dump();
mov (ecx, ptr[rsi+r11*8-1]); dump();
mov (ecx, ptr[rsi+r11*8-1000]); dump();
}
    void gen25(){
mov (ecx, ptr[rsi+r12+0]); dump();
mov (ecx, ptr[rsi+r12+1]); dump();
mov (ecx, ptr[rsi+r12+1000]); dump();
mov (ecx, ptr[rsi+r12-1]); dump();
mov (ecx, ptr[rsi+r12-1000]); dump();
mov (ecx, ptr[rsi+r12*1+0]); dump();
mov (ecx, ptr[rsi+r12*1+1]); dump();
mov (ecx, ptr[rsi+r12*1+1000]); dump();
mov (ecx, ptr[rsi+r12*1-1]); dump();
mov (ecx, ptr[rsi+r12*1-1000]); dump();
mov (ecx, ptr[rsi+r12*2+0]); dump();
mov (ecx, ptr[rsi+r12*2+1]); dump();
mov (ecx, ptr[rsi+r12*2+1000]); dump();
mov (ecx, ptr[rsi+r12*2-1]); dump();
mov (ecx, ptr[rsi+r12*2-1000]); dump();
mov (ecx, ptr[rsi+r12*4+0]); dump();
mov (ecx, ptr[rsi+r12*4+1]); dump();
mov (ecx, ptr[rsi+r12*4+1000]); dump();
mov (ecx, ptr[rsi+r12*4-1]); dump();
mov (ecx, ptr[rsi+r12*4-1000]); dump();
mov (ecx, ptr[rsi+r12*8+0]); dump();
mov (ecx, ptr[rsi+r12*8+1]); dump();
mov (ecx, ptr[rsi+r12*8+1000]); dump();
mov (ecx, ptr[rsi+r12*8-1]); dump();
mov (ecx, ptr[rsi+r12*8-1000]); dump();
mov (ecx, ptr[rsi+r13+0]); dump();
mov (ecx, ptr[rsi+r13+1]); dump();
mov (ecx, ptr[rsi+r13+1000]); dump();
mov (ecx, ptr[rsi+r13-1]); dump();
mov (ecx, ptr[rsi+r13-1000]); dump();
mov (ecx, ptr[rsi+r13*1+0]); dump();
mov (ecx, ptr[rsi+r13*1+1]); dump();
mov (ecx, ptr[rsi+r13*1+1000]); dump();
mov (ecx, ptr[rsi+r13*1-1]); dump();
mov (ecx, ptr[rsi+r13*1-1000]); dump();
mov (ecx, ptr[rsi+r13*2+0]); dump();
mov (ecx, ptr[rsi+r13*2+1]); dump();
mov (ecx, ptr[rsi+r13*2+1000]); dump();
mov (ecx, ptr[rsi+r13*2-1]); dump();
mov (ecx, ptr[rsi+r13*2-1000]); dump();
mov (ecx, ptr[rsi+r13*4+0]); dump();
mov (ecx, ptr[rsi+r13*4+1]); dump();
mov (ecx, ptr[rsi+r13*4+1000]); dump();
mov (ecx, ptr[rsi+r13*4-1]); dump();
mov (ecx, ptr[rsi+r13*4-1000]); dump();
mov (ecx, ptr[rsi+r13*8+0]); dump();
mov (ecx, ptr[rsi+r13*8+1]); dump();
mov (ecx, ptr[rsi+r13*8+1000]); dump();
mov (ecx, ptr[rsi+r13*8-1]); dump();
mov (ecx, ptr[rsi+r13*8-1000]); dump();
mov (ecx, ptr[rsi+r14+0]); dump();
mov (ecx, ptr[rsi+r14+1]); dump();
mov (ecx, ptr[rsi+r14+1000]); dump();
mov (ecx, ptr[rsi+r14-1]); dump();
mov (ecx, ptr[rsi+r14-1000]); dump();
mov (ecx, ptr[rsi+r14*1+0]); dump();
mov (ecx, ptr[rsi+r14*1+1]); dump();
mov (ecx, ptr[rsi+r14*1+1000]); dump();
mov (ecx, ptr[rsi+r14*1-1]); dump();
mov (ecx, ptr[rsi+r14*1-1000]); dump();
mov (ecx, ptr[rsi+r14*2+0]); dump();
mov (ecx, ptr[rsi+r14*2+1]); dump();
mov (ecx, ptr[rsi+r14*2+1000]); dump();
mov (ecx, ptr[rsi+r14*2-1]); dump();
mov (ecx, ptr[rsi+r14*2-1000]); dump();
mov (ecx, ptr[rsi+r14*4+0]); dump();
mov (ecx, ptr[rsi+r14*4+1]); dump();
mov (ecx, ptr[rsi+r14*4+1000]); dump();
mov (ecx, ptr[rsi+r14*4-1]); dump();
mov (ecx, ptr[rsi+r14*4-1000]); dump();
mov (ecx, ptr[rsi+r14*8+0]); dump();
mov (ecx, ptr[rsi+r14*8+1]); dump();
mov (ecx, ptr[rsi+r14*8+1000]); dump();
mov (ecx, ptr[rsi+r14*8-1]); dump();
mov (ecx, ptr[rsi+r14*8-1000]); dump();
mov (ecx, ptr[rsi+r15+0]); dump();
mov (ecx, ptr[rsi+r15+1]); dump();
mov (ecx, ptr[rsi+r15+1000]); dump();
mov (ecx, ptr[rsi+r15-1]); dump();
mov (ecx, ptr[rsi+r15-1000]); dump();
mov (ecx, ptr[rsi+r15*1+0]); dump();
mov (ecx, ptr[rsi+r15*1+1]); dump();
mov (ecx, ptr[rsi+r15*1+1000]); dump();
mov (ecx, ptr[rsi+r15*1-1]); dump();
mov (ecx, ptr[rsi+r15*1-1000]); dump();
mov (ecx, ptr[rsi+r15*2+0]); dump();
mov (ecx, ptr[rsi+r15*2+1]); dump();
mov (ecx, ptr[rsi+r15*2+1000]); dump();
mov (ecx, ptr[rsi+r15*2-1]); dump();
mov (ecx, ptr[rsi+r15*2-1000]); dump();
mov (ecx, ptr[rsi+r15*4+0]); dump();
mov (ecx, ptr[rsi+r15*4+1]); dump();
mov (ecx, ptr[rsi+r15*4+1000]); dump();
mov (ecx, ptr[rsi+r15*4-1]); dump();
mov (ecx, ptr[rsi+r15*4-1000]); dump();
mov (ecx, ptr[rsi+r15*8+0]); dump();
mov (ecx, ptr[rsi+r15*8+1]); dump();
mov (ecx, ptr[rsi+r15*8+1000]); dump();
mov (ecx, ptr[rsi+r15*8-1]); dump();
mov (ecx, ptr[rsi+r15*8-1000]); dump();
}
    void gen26(){
mov (ecx, ptr[rsi+0]); dump();
mov (ecx, ptr[rsi+1]); dump();
mov (ecx, ptr[rsi+1000]); dump();
mov (ecx, ptr[rsi-1]); dump();
mov (ecx, ptr[rsi-1000]); dump();
mov (ecx, ptr[rsi+0]); dump();
mov (ecx, ptr[rsi+1]); dump();
mov (ecx, ptr[rsi+1000]); dump();
mov (ecx, ptr[rsi-1]); dump();
mov (ecx, ptr[rsi-1000]); dump();
mov (ecx, ptr[rsi+0]); dump();
mov (ecx, ptr[rsi+1]); dump();
mov (ecx, ptr[rsi+1000]); dump();
mov (ecx, ptr[rsi-1]); dump();
mov (ecx, ptr[rsi-1000]); dump();
mov (ecx, ptr[rsi+0]); dump();
mov (ecx, ptr[rsi+1]); dump();
mov (ecx, ptr[rsi+1000]); dump();
mov (ecx, ptr[rsi-1]); dump();
mov (ecx, ptr[rsi-1000]); dump();
mov (ecx, ptr[rsi+0]); dump();
mov (ecx, ptr[rsi+1]); dump();
mov (ecx, ptr[rsi+1000]); dump();
mov (ecx, ptr[rsi-1]); dump();
mov (ecx, ptr[rsi-1000]); dump();
mov (ecx, ptr[rdi+rax+0]); dump();
mov (ecx, ptr[rdi+rax+1]); dump();
mov (ecx, ptr[rdi+rax+1000]); dump();
mov (ecx, ptr[rdi+rax-1]); dump();
mov (ecx, ptr[rdi+rax-1000]); dump();
mov (ecx, ptr[rdi+rax*1+0]); dump();
mov (ecx, ptr[rdi+rax*1+1]); dump();
mov (ecx, ptr[rdi+rax*1+1000]); dump();
mov (ecx, ptr[rdi+rax*1-1]); dump();
mov (ecx, ptr[rdi+rax*1-1000]); dump();
mov (ecx, ptr[rdi+rax*2+0]); dump();
mov (ecx, ptr[rdi+rax*2+1]); dump();
mov (ecx, ptr[rdi+rax*2+1000]); dump();
mov (ecx, ptr[rdi+rax*2-1]); dump();
mov (ecx, ptr[rdi+rax*2-1000]); dump();
mov (ecx, ptr[rdi+rax*4+0]); dump();
mov (ecx, ptr[rdi+rax*4+1]); dump();
mov (ecx, ptr[rdi+rax*4+1000]); dump();
mov (ecx, ptr[rdi+rax*4-1]); dump();
mov (ecx, ptr[rdi+rax*4-1000]); dump();
mov (ecx, ptr[rdi+rax*8+0]); dump();
mov (ecx, ptr[rdi+rax*8+1]); dump();
mov (ecx, ptr[rdi+rax*8+1000]); dump();
mov (ecx, ptr[rdi+rax*8-1]); dump();
mov (ecx, ptr[rdi+rax*8-1000]); dump();
mov (ecx, ptr[rdi+rcx+0]); dump();
mov (ecx, ptr[rdi+rcx+1]); dump();
mov (ecx, ptr[rdi+rcx+1000]); dump();
mov (ecx, ptr[rdi+rcx-1]); dump();
mov (ecx, ptr[rdi+rcx-1000]); dump();
mov (ecx, ptr[rdi+rcx*1+0]); dump();
mov (ecx, ptr[rdi+rcx*1+1]); dump();
mov (ecx, ptr[rdi+rcx*1+1000]); dump();
mov (ecx, ptr[rdi+rcx*1-1]); dump();
mov (ecx, ptr[rdi+rcx*1-1000]); dump();
mov (ecx, ptr[rdi+rcx*2+0]); dump();
mov (ecx, ptr[rdi+rcx*2+1]); dump();
mov (ecx, ptr[rdi+rcx*2+1000]); dump();
mov (ecx, ptr[rdi+rcx*2-1]); dump();
mov (ecx, ptr[rdi+rcx*2-1000]); dump();
mov (ecx, ptr[rdi+rcx*4+0]); dump();
mov (ecx, ptr[rdi+rcx*4+1]); dump();
mov (ecx, ptr[rdi+rcx*4+1000]); dump();
mov (ecx, ptr[rdi+rcx*4-1]); dump();
mov (ecx, ptr[rdi+rcx*4-1000]); dump();
mov (ecx, ptr[rdi+rcx*8+0]); dump();
mov (ecx, ptr[rdi+rcx*8+1]); dump();
mov (ecx, ptr[rdi+rcx*8+1000]); dump();
mov (ecx, ptr[rdi+rcx*8-1]); dump();
mov (ecx, ptr[rdi+rcx*8-1000]); dump();
mov (ecx, ptr[rdi+rdx+0]); dump();
mov (ecx, ptr[rdi+rdx+1]); dump();
mov (ecx, ptr[rdi+rdx+1000]); dump();
mov (ecx, ptr[rdi+rdx-1]); dump();
mov (ecx, ptr[rdi+rdx-1000]); dump();
mov (ecx, ptr[rdi+rdx*1+0]); dump();
mov (ecx, ptr[rdi+rdx*1+1]); dump();
mov (ecx, ptr[rdi+rdx*1+1000]); dump();
mov (ecx, ptr[rdi+rdx*1-1]); dump();
mov (ecx, ptr[rdi+rdx*1-1000]); dump();
mov (ecx, ptr[rdi+rdx*2+0]); dump();
mov (ecx, ptr[rdi+rdx*2+1]); dump();
mov (ecx, ptr[rdi+rdx*2+1000]); dump();
mov (ecx, ptr[rdi+rdx*2-1]); dump();
mov (ecx, ptr[rdi+rdx*2-1000]); dump();
mov (ecx, ptr[rdi+rdx*4+0]); dump();
mov (ecx, ptr[rdi+rdx*4+1]); dump();
mov (ecx, ptr[rdi+rdx*4+1000]); dump();
mov (ecx, ptr[rdi+rdx*4-1]); dump();
mov (ecx, ptr[rdi+rdx*4-1000]); dump();
mov (ecx, ptr[rdi+rdx*8+0]); dump();
mov (ecx, ptr[rdi+rdx*8+1]); dump();
mov (ecx, ptr[rdi+rdx*8+1000]); dump();
mov (ecx, ptr[rdi+rdx*8-1]); dump();
mov (ecx, ptr[rdi+rdx*8-1000]); dump();
}
    void gen27(){
mov (ecx, ptr[rdi+rbx+0]); dump();
mov (ecx, ptr[rdi+rbx+1]); dump();
mov (ecx, ptr[rdi+rbx+1000]); dump();
mov (ecx, ptr[rdi+rbx-1]); dump();
mov (ecx, ptr[rdi+rbx-1000]); dump();
mov (ecx, ptr[rdi+rbx*1+0]); dump();
mov (ecx, ptr[rdi+rbx*1+1]); dump();
mov (ecx, ptr[rdi+rbx*1+1000]); dump();
mov (ecx, ptr[rdi+rbx*1-1]); dump();
mov (ecx, ptr[rdi+rbx*1-1000]); dump();
mov (ecx, ptr[rdi+rbx*2+0]); dump();
mov (ecx, ptr[rdi+rbx*2+1]); dump();
mov (ecx, ptr[rdi+rbx*2+1000]); dump();
mov (ecx, ptr[rdi+rbx*2-1]); dump();
mov (ecx, ptr[rdi+rbx*2-1000]); dump();
mov (ecx, ptr[rdi+rbx*4+0]); dump();
mov (ecx, ptr[rdi+rbx*4+1]); dump();
mov (ecx, ptr[rdi+rbx*4+1000]); dump();
mov (ecx, ptr[rdi+rbx*4-1]); dump();
mov (ecx, ptr[rdi+rbx*4-1000]); dump();
mov (ecx, ptr[rdi+rbx*8+0]); dump();
mov (ecx, ptr[rdi+rbx*8+1]); dump();
mov (ecx, ptr[rdi+rbx*8+1000]); dump();
mov (ecx, ptr[rdi+rbx*8-1]); dump();
mov (ecx, ptr[rdi+rbx*8-1000]); dump();
mov (ecx, ptr[rdi+rbp+0]); dump();
mov (ecx, ptr[rdi+rbp+1]); dump();
mov (ecx, ptr[rdi+rbp+1000]); dump();
mov (ecx, ptr[rdi+rbp-1]); dump();
mov (ecx, ptr[rdi+rbp-1000]); dump();
mov (ecx, ptr[rdi+rbp*1+0]); dump();
mov (ecx, ptr[rdi+rbp*1+1]); dump();
mov (ecx, ptr[rdi+rbp*1+1000]); dump();
mov (ecx, ptr[rdi+rbp*1-1]); dump();
mov (ecx, ptr[rdi+rbp*1-1000]); dump();
mov (ecx, ptr[rdi+rbp*2+0]); dump();
mov (ecx, ptr[rdi+rbp*2+1]); dump();
mov (ecx, ptr[rdi+rbp*2+1000]); dump();
mov (ecx, ptr[rdi+rbp*2-1]); dump();
mov (ecx, ptr[rdi+rbp*2-1000]); dump();
mov (ecx, ptr[rdi+rbp*4+0]); dump();
mov (ecx, ptr[rdi+rbp*4+1]); dump();
mov (ecx, ptr[rdi+rbp*4+1000]); dump();
mov (ecx, ptr[rdi+rbp*4-1]); dump();
mov (ecx, ptr[rdi+rbp*4-1000]); dump();
mov (ecx, ptr[rdi+rbp*8+0]); dump();
mov (ecx, ptr[rdi+rbp*8+1]); dump();
mov (ecx, ptr[rdi+rbp*8+1000]); dump();
mov (ecx, ptr[rdi+rbp*8-1]); dump();
mov (ecx, ptr[rdi+rbp*8-1000]); dump();
mov (ecx, ptr[rdi+rsi+0]); dump();
mov (ecx, ptr[rdi+rsi+1]); dump();
mov (ecx, ptr[rdi+rsi+1000]); dump();
mov (ecx, ptr[rdi+rsi-1]); dump();
mov (ecx, ptr[rdi+rsi-1000]); dump();
mov (ecx, ptr[rdi+rsi*1+0]); dump();
mov (ecx, ptr[rdi+rsi*1+1]); dump();
mov (ecx, ptr[rdi+rsi*1+1000]); dump();
mov (ecx, ptr[rdi+rsi*1-1]); dump();
mov (ecx, ptr[rdi+rsi*1-1000]); dump();
mov (ecx, ptr[rdi+rsi*2+0]); dump();
mov (ecx, ptr[rdi+rsi*2+1]); dump();
mov (ecx, ptr[rdi+rsi*2+1000]); dump();
mov (ecx, ptr[rdi+rsi*2-1]); dump();
mov (ecx, ptr[rdi+rsi*2-1000]); dump();
mov (ecx, ptr[rdi+rsi*4+0]); dump();
mov (ecx, ptr[rdi+rsi*4+1]); dump();
mov (ecx, ptr[rdi+rsi*4+1000]); dump();
mov (ecx, ptr[rdi+rsi*4-1]); dump();
mov (ecx, ptr[rdi+rsi*4-1000]); dump();
mov (ecx, ptr[rdi+rsi*8+0]); dump();
mov (ecx, ptr[rdi+rsi*8+1]); dump();
mov (ecx, ptr[rdi+rsi*8+1000]); dump();
mov (ecx, ptr[rdi+rsi*8-1]); dump();
mov (ecx, ptr[rdi+rsi*8-1000]); dump();
mov (ecx, ptr[rdi+rdi+0]); dump();
mov (ecx, ptr[rdi+rdi+1]); dump();
mov (ecx, ptr[rdi+rdi+1000]); dump();
mov (ecx, ptr[rdi+rdi-1]); dump();
mov (ecx, ptr[rdi+rdi-1000]); dump();
mov (ecx, ptr[rdi+rdi*1+0]); dump();
mov (ecx, ptr[rdi+rdi*1+1]); dump();
mov (ecx, ptr[rdi+rdi*1+1000]); dump();
mov (ecx, ptr[rdi+rdi*1-1]); dump();
mov (ecx, ptr[rdi+rdi*1-1000]); dump();
mov (ecx, ptr[rdi+rdi*2+0]); dump();
mov (ecx, ptr[rdi+rdi*2+1]); dump();
mov (ecx, ptr[rdi+rdi*2+1000]); dump();
mov (ecx, ptr[rdi+rdi*2-1]); dump();
mov (ecx, ptr[rdi+rdi*2-1000]); dump();
mov (ecx, ptr[rdi+rdi*4+0]); dump();
mov (ecx, ptr[rdi+rdi*4+1]); dump();
mov (ecx, ptr[rdi+rdi*4+1000]); dump();
mov (ecx, ptr[rdi+rdi*4-1]); dump();
mov (ecx, ptr[rdi+rdi*4-1000]); dump();
mov (ecx, ptr[rdi+rdi*8+0]); dump();
mov (ecx, ptr[rdi+rdi*8+1]); dump();
mov (ecx, ptr[rdi+rdi*8+1000]); dump();
mov (ecx, ptr[rdi+rdi*8-1]); dump();
mov (ecx, ptr[rdi+rdi*8-1000]); dump();
}
    void gen28(){
mov (ecx, ptr[rdi+r9+0]); dump();
mov (ecx, ptr[rdi+r9+1]); dump();
mov (ecx, ptr[rdi+r9+1000]); dump();
mov (ecx, ptr[rdi+r9-1]); dump();
mov (ecx, ptr[rdi+r9-1000]); dump();
mov (ecx, ptr[rdi+r9*1+0]); dump();
mov (ecx, ptr[rdi+r9*1+1]); dump();
mov (ecx, ptr[rdi+r9*1+1000]); dump();
mov (ecx, ptr[rdi+r9*1-1]); dump();
mov (ecx, ptr[rdi+r9*1-1000]); dump();
mov (ecx, ptr[rdi+r9*2+0]); dump();
mov (ecx, ptr[rdi+r9*2+1]); dump();
mov (ecx, ptr[rdi+r9*2+1000]); dump();
mov (ecx, ptr[rdi+r9*2-1]); dump();
mov (ecx, ptr[rdi+r9*2-1000]); dump();
mov (ecx, ptr[rdi+r9*4+0]); dump();
mov (ecx, ptr[rdi+r9*4+1]); dump();
mov (ecx, ptr[rdi+r9*4+1000]); dump();
mov (ecx, ptr[rdi+r9*4-1]); dump();
mov (ecx, ptr[rdi+r9*4-1000]); dump();
mov (ecx, ptr[rdi+r9*8+0]); dump();
mov (ecx, ptr[rdi+r9*8+1]); dump();
mov (ecx, ptr[rdi+r9*8+1000]); dump();
mov (ecx, ptr[rdi+r9*8-1]); dump();
mov (ecx, ptr[rdi+r9*8-1000]); dump();
mov (ecx, ptr[rdi+r10+0]); dump();
mov (ecx, ptr[rdi+r10+1]); dump();
mov (ecx, ptr[rdi+r10+1000]); dump();
mov (ecx, ptr[rdi+r10-1]); dump();
mov (ecx, ptr[rdi+r10-1000]); dump();
mov (ecx, ptr[rdi+r10*1+0]); dump();
mov (ecx, ptr[rdi+r10*1+1]); dump();
mov (ecx, ptr[rdi+r10*1+1000]); dump();
mov (ecx, ptr[rdi+r10*1-1]); dump();
mov (ecx, ptr[rdi+r10*1-1000]); dump();
mov (ecx, ptr[rdi+r10*2+0]); dump();
mov (ecx, ptr[rdi+r10*2+1]); dump();
mov (ecx, ptr[rdi+r10*2+1000]); dump();
mov (ecx, ptr[rdi+r10*2-1]); dump();
mov (ecx, ptr[rdi+r10*2-1000]); dump();
mov (ecx, ptr[rdi+r10*4+0]); dump();
mov (ecx, ptr[rdi+r10*4+1]); dump();
mov (ecx, ptr[rdi+r10*4+1000]); dump();
mov (ecx, ptr[rdi+r10*4-1]); dump();
mov (ecx, ptr[rdi+r10*4-1000]); dump();
mov (ecx, ptr[rdi+r10*8+0]); dump();
mov (ecx, ptr[rdi+r10*8+1]); dump();
mov (ecx, ptr[rdi+r10*8+1000]); dump();
mov (ecx, ptr[rdi+r10*8-1]); dump();
mov (ecx, ptr[rdi+r10*8-1000]); dump();
mov (ecx, ptr[rdi+r11+0]); dump();
mov (ecx, ptr[rdi+r11+1]); dump();
mov (ecx, ptr[rdi+r11+1000]); dump();
mov (ecx, ptr[rdi+r11-1]); dump();
mov (ecx, ptr[rdi+r11-1000]); dump();
mov (ecx, ptr[rdi+r11*1+0]); dump();
mov (ecx, ptr[rdi+r11*1+1]); dump();
mov (ecx, ptr[rdi+r11*1+1000]); dump();
mov (ecx, ptr[rdi+r11*1-1]); dump();
mov (ecx, ptr[rdi+r11*1-1000]); dump();
mov (ecx, ptr[rdi+r11*2+0]); dump();
mov (ecx, ptr[rdi+r11*2+1]); dump();
mov (ecx, ptr[rdi+r11*2+1000]); dump();
mov (ecx, ptr[rdi+r11*2-1]); dump();
mov (ecx, ptr[rdi+r11*2-1000]); dump();
mov (ecx, ptr[rdi+r11*4+0]); dump();
mov (ecx, ptr[rdi+r11*4+1]); dump();
mov (ecx, ptr[rdi+r11*4+1000]); dump();
mov (ecx, ptr[rdi+r11*4-1]); dump();
mov (ecx, ptr[rdi+r11*4-1000]); dump();
mov (ecx, ptr[rdi+r11*8+0]); dump();
mov (ecx, ptr[rdi+r11*8+1]); dump();
mov (ecx, ptr[rdi+r11*8+1000]); dump();
mov (ecx, ptr[rdi+r11*8-1]); dump();
mov (ecx, ptr[rdi+r11*8-1000]); dump();
mov (ecx, ptr[rdi+r12+0]); dump();
mov (ecx, ptr[rdi+r12+1]); dump();
mov (ecx, ptr[rdi+r12+1000]); dump();
mov (ecx, ptr[rdi+r12-1]); dump();
mov (ecx, ptr[rdi+r12-1000]); dump();
mov (ecx, ptr[rdi+r12*1+0]); dump();
mov (ecx, ptr[rdi+r12*1+1]); dump();
mov (ecx, ptr[rdi+r12*1+1000]); dump();
mov (ecx, ptr[rdi+r12*1-1]); dump();
mov (ecx, ptr[rdi+r12*1-1000]); dump();
mov (ecx, ptr[rdi+r12*2+0]); dump();
mov (ecx, ptr[rdi+r12*2+1]); dump();
mov (ecx, ptr[rdi+r12*2+1000]); dump();
mov (ecx, ptr[rdi+r12*2-1]); dump();
mov (ecx, ptr[rdi+r12*2-1000]); dump();
mov (ecx, ptr[rdi+r12*4+0]); dump();
mov (ecx, ptr[rdi+r12*4+1]); dump();
mov (ecx, ptr[rdi+r12*4+1000]); dump();
mov (ecx, ptr[rdi+r12*4-1]); dump();
mov (ecx, ptr[rdi+r12*4-1000]); dump();
mov (ecx, ptr[rdi+r12*8+0]); dump();
mov (ecx, ptr[rdi+r12*8+1]); dump();
mov (ecx, ptr[rdi+r12*8+1000]); dump();
mov (ecx, ptr[rdi+r12*8-1]); dump();
mov (ecx, ptr[rdi+r12*8-1000]); dump();
}
    void gen29(){
mov (ecx, ptr[rdi+r13+0]); dump();
mov (ecx, ptr[rdi+r13+1]); dump();
mov (ecx, ptr[rdi+r13+1000]); dump();
mov (ecx, ptr[rdi+r13-1]); dump();
mov (ecx, ptr[rdi+r13-1000]); dump();
mov (ecx, ptr[rdi+r13*1+0]); dump();
mov (ecx, ptr[rdi+r13*1+1]); dump();
mov (ecx, ptr[rdi+r13*1+1000]); dump();
mov (ecx, ptr[rdi+r13*1-1]); dump();
mov (ecx, ptr[rdi+r13*1-1000]); dump();
mov (ecx, ptr[rdi+r13*2+0]); dump();
mov (ecx, ptr[rdi+r13*2+1]); dump();
mov (ecx, ptr[rdi+r13*2+1000]); dump();
mov (ecx, ptr[rdi+r13*2-1]); dump();
mov (ecx, ptr[rdi+r13*2-1000]); dump();
mov (ecx, ptr[rdi+r13*4+0]); dump();
mov (ecx, ptr[rdi+r13*4+1]); dump();
mov (ecx, ptr[rdi+r13*4+1000]); dump();
mov (ecx, ptr[rdi+r13*4-1]); dump();
mov (ecx, ptr[rdi+r13*4-1000]); dump();
mov (ecx, ptr[rdi+r13*8+0]); dump();
mov (ecx, ptr[rdi+r13*8+1]); dump();
mov (ecx, ptr[rdi+r13*8+1000]); dump();
mov (ecx, ptr[rdi+r13*8-1]); dump();
mov (ecx, ptr[rdi+r13*8-1000]); dump();
mov (ecx, ptr[rdi+r14+0]); dump();
mov (ecx, ptr[rdi+r14+1]); dump();
mov (ecx, ptr[rdi+r14+1000]); dump();
mov (ecx, ptr[rdi+r14-1]); dump();
mov (ecx, ptr[rdi+r14-1000]); dump();
mov (ecx, ptr[rdi+r14*1+0]); dump();
mov (ecx, ptr[rdi+r14*1+1]); dump();
mov (ecx, ptr[rdi+r14*1+1000]); dump();
mov (ecx, ptr[rdi+r14*1-1]); dump();
mov (ecx, ptr[rdi+r14*1-1000]); dump();
mov (ecx, ptr[rdi+r14*2+0]); dump();
mov (ecx, ptr[rdi+r14*2+1]); dump();
mov (ecx, ptr[rdi+r14*2+1000]); dump();
mov (ecx, ptr[rdi+r14*2-1]); dump();
mov (ecx, ptr[rdi+r14*2-1000]); dump();
mov (ecx, ptr[rdi+r14*4+0]); dump();
mov (ecx, ptr[rdi+r14*4+1]); dump();
mov (ecx, ptr[rdi+r14*4+1000]); dump();
mov (ecx, ptr[rdi+r14*4-1]); dump();
mov (ecx, ptr[rdi+r14*4-1000]); dump();
mov (ecx, ptr[rdi+r14*8+0]); dump();
mov (ecx, ptr[rdi+r14*8+1]); dump();
mov (ecx, ptr[rdi+r14*8+1000]); dump();
mov (ecx, ptr[rdi+r14*8-1]); dump();
mov (ecx, ptr[rdi+r14*8-1000]); dump();
mov (ecx, ptr[rdi+r15+0]); dump();
mov (ecx, ptr[rdi+r15+1]); dump();
mov (ecx, ptr[rdi+r15+1000]); dump();
mov (ecx, ptr[rdi+r15-1]); dump();
mov (ecx, ptr[rdi+r15-1000]); dump();
mov (ecx, ptr[rdi+r15*1+0]); dump();
mov (ecx, ptr[rdi+r15*1+1]); dump();
mov (ecx, ptr[rdi+r15*1+1000]); dump();
mov (ecx, ptr[rdi+r15*1-1]); dump();
mov (ecx, ptr[rdi+r15*1-1000]); dump();
mov (ecx, ptr[rdi+r15*2+0]); dump();
mov (ecx, ptr[rdi+r15*2+1]); dump();
mov (ecx, ptr[rdi+r15*2+1000]); dump();
mov (ecx, ptr[rdi+r15*2-1]); dump();
mov (ecx, ptr[rdi+r15*2-1000]); dump();
mov (ecx, ptr[rdi+r15*4+0]); dump();
mov (ecx, ptr[rdi+r15*4+1]); dump();
mov (ecx, ptr[rdi+r15*4+1000]); dump();
mov (ecx, ptr[rdi+r15*4-1]); dump();
mov (ecx, ptr[rdi+r15*4-1000]); dump();
mov (ecx, ptr[rdi+r15*8+0]); dump();
mov (ecx, ptr[rdi+r15*8+1]); dump();
mov (ecx, ptr[rdi+r15*8+1000]); dump();
mov (ecx, ptr[rdi+r15*8-1]); dump();
mov (ecx, ptr[rdi+r15*8-1000]); dump();
mov (ecx, ptr[rdi+0]); dump();
mov (ecx, ptr[rdi+1]); dump();
mov (ecx, ptr[rdi+1000]); dump();
mov (ecx, ptr[rdi-1]); dump();
mov (ecx, ptr[rdi-1000]); dump();
mov (ecx, ptr[rdi+0]); dump();
mov (ecx, ptr[rdi+1]); dump();
mov (ecx, ptr[rdi+1000]); dump();
mov (ecx, ptr[rdi-1]); dump();
mov (ecx, ptr[rdi-1000]); dump();
mov (ecx, ptr[rdi+0]); dump();
mov (ecx, ptr[rdi+1]); dump();
mov (ecx, ptr[rdi+1000]); dump();
mov (ecx, ptr[rdi-1]); dump();
mov (ecx, ptr[rdi-1000]); dump();
mov (ecx, ptr[rdi+0]); dump();
mov (ecx, ptr[rdi+1]); dump();
mov (ecx, ptr[rdi+1000]); dump();
mov (ecx, ptr[rdi-1]); dump();
mov (ecx, ptr[rdi-1000]); dump();
mov (ecx, ptr[rdi+0]); dump();
mov (ecx, ptr[rdi+1]); dump();
mov (ecx, ptr[rdi+1000]); dump();
mov (ecx, ptr[rdi-1]); dump();
mov (ecx, ptr[rdi-1000]); dump();
}
    void gen30(){
mov (ecx, ptr[r9+rax+0]); dump();
mov (ecx, ptr[r9+rax+1]); dump();
mov (ecx, ptr[r9+rax+1000]); dump();
mov (ecx, ptr[r9+rax-1]); dump();
mov (ecx, ptr[r9+rax-1000]); dump();
mov (ecx, ptr[r9+rax*1+0]); dump();
mov (ecx, ptr[r9+rax*1+1]); dump();
mov (ecx, ptr[r9+rax*1+1000]); dump();
mov (ecx, ptr[r9+rax*1-1]); dump();
mov (ecx, ptr[r9+rax*1-1000]); dump();
mov (ecx, ptr[r9+rax*2+0]); dump();
mov (ecx, ptr[r9+rax*2+1]); dump();
mov (ecx, ptr[r9+rax*2+1000]); dump();
mov (ecx, ptr[r9+rax*2-1]); dump();
mov (ecx, ptr[r9+rax*2-1000]); dump();
mov (ecx, ptr[r9+rax*4+0]); dump();
mov (ecx, ptr[r9+rax*4+1]); dump();
mov (ecx, ptr[r9+rax*4+1000]); dump();
mov (ecx, ptr[r9+rax*4-1]); dump();
mov (ecx, ptr[r9+rax*4-1000]); dump();
mov (ecx, ptr[r9+rax*8+0]); dump();
mov (ecx, ptr[r9+rax*8+1]); dump();
mov (ecx, ptr[r9+rax*8+1000]); dump();
mov (ecx, ptr[r9+rax*8-1]); dump();
mov (ecx, ptr[r9+rax*8-1000]); dump();
mov (ecx, ptr[r9+rcx+0]); dump();
mov (ecx, ptr[r9+rcx+1]); dump();
mov (ecx, ptr[r9+rcx+1000]); dump();
mov (ecx, ptr[r9+rcx-1]); dump();
mov (ecx, ptr[r9+rcx-1000]); dump();
mov (ecx, ptr[r9+rcx*1+0]); dump();
mov (ecx, ptr[r9+rcx*1+1]); dump();
mov (ecx, ptr[r9+rcx*1+1000]); dump();
mov (ecx, ptr[r9+rcx*1-1]); dump();
mov (ecx, ptr[r9+rcx*1-1000]); dump();
mov (ecx, ptr[r9+rcx*2+0]); dump();
mov (ecx, ptr[r9+rcx*2+1]); dump();
mov (ecx, ptr[r9+rcx*2+1000]); dump();
mov (ecx, ptr[r9+rcx*2-1]); dump();
mov (ecx, ptr[r9+rcx*2-1000]); dump();
mov (ecx, ptr[r9+rcx*4+0]); dump();
mov (ecx, ptr[r9+rcx*4+1]); dump();
mov (ecx, ptr[r9+rcx*4+1000]); dump();
mov (ecx, ptr[r9+rcx*4-1]); dump();
mov (ecx, ptr[r9+rcx*4-1000]); dump();
mov (ecx, ptr[r9+rcx*8+0]); dump();
mov (ecx, ptr[r9+rcx*8+1]); dump();
mov (ecx, ptr[r9+rcx*8+1000]); dump();
mov (ecx, ptr[r9+rcx*8-1]); dump();
mov (ecx, ptr[r9+rcx*8-1000]); dump();
mov (ecx, ptr[r9+rdx+0]); dump();
mov (ecx, ptr[r9+rdx+1]); dump();
mov (ecx, ptr[r9+rdx+1000]); dump();
mov (ecx, ptr[r9+rdx-1]); dump();
mov (ecx, ptr[r9+rdx-1000]); dump();
mov (ecx, ptr[r9+rdx*1+0]); dump();
mov (ecx, ptr[r9+rdx*1+1]); dump();
mov (ecx, ptr[r9+rdx*1+1000]); dump();
mov (ecx, ptr[r9+rdx*1-1]); dump();
mov (ecx, ptr[r9+rdx*1-1000]); dump();
mov (ecx, ptr[r9+rdx*2+0]); dump();
mov (ecx, ptr[r9+rdx*2+1]); dump();
mov (ecx, ptr[r9+rdx*2+1000]); dump();
mov (ecx, ptr[r9+rdx*2-1]); dump();
mov (ecx, ptr[r9+rdx*2-1000]); dump();
mov (ecx, ptr[r9+rdx*4+0]); dump();
mov (ecx, ptr[r9+rdx*4+1]); dump();
mov (ecx, ptr[r9+rdx*4+1000]); dump();
mov (ecx, ptr[r9+rdx*4-1]); dump();
mov (ecx, ptr[r9+rdx*4-1000]); dump();
mov (ecx, ptr[r9+rdx*8+0]); dump();
mov (ecx, ptr[r9+rdx*8+1]); dump();
mov (ecx, ptr[r9+rdx*8+1000]); dump();
mov (ecx, ptr[r9+rdx*8-1]); dump();
mov (ecx, ptr[r9+rdx*8-1000]); dump();
mov (ecx, ptr[r9+rbx+0]); dump();
mov (ecx, ptr[r9+rbx+1]); dump();
mov (ecx, ptr[r9+rbx+1000]); dump();
mov (ecx, ptr[r9+rbx-1]); dump();
mov (ecx, ptr[r9+rbx-1000]); dump();
mov (ecx, ptr[r9+rbx*1+0]); dump();
mov (ecx, ptr[r9+rbx*1+1]); dump();
mov (ecx, ptr[r9+rbx*1+1000]); dump();
mov (ecx, ptr[r9+rbx*1-1]); dump();
mov (ecx, ptr[r9+rbx*1-1000]); dump();
mov (ecx, ptr[r9+rbx*2+0]); dump();
mov (ecx, ptr[r9+rbx*2+1]); dump();
mov (ecx, ptr[r9+rbx*2+1000]); dump();
mov (ecx, ptr[r9+rbx*2-1]); dump();
mov (ecx, ptr[r9+rbx*2-1000]); dump();
mov (ecx, ptr[r9+rbx*4+0]); dump();
mov (ecx, ptr[r9+rbx*4+1]); dump();
mov (ecx, ptr[r9+rbx*4+1000]); dump();
mov (ecx, ptr[r9+rbx*4-1]); dump();
mov (ecx, ptr[r9+rbx*4-1000]); dump();
mov (ecx, ptr[r9+rbx*8+0]); dump();
mov (ecx, ptr[r9+rbx*8+1]); dump();
mov (ecx, ptr[r9+rbx*8+1000]); dump();
mov (ecx, ptr[r9+rbx*8-1]); dump();
mov (ecx, ptr[r9+rbx*8-1000]); dump();
}
    void gen31(){
mov (ecx, ptr[r9+rbp+0]); dump();
mov (ecx, ptr[r9+rbp+1]); dump();
mov (ecx, ptr[r9+rbp+1000]); dump();
mov (ecx, ptr[r9+rbp-1]); dump();
mov (ecx, ptr[r9+rbp-1000]); dump();
mov (ecx, ptr[r9+rbp*1+0]); dump();
mov (ecx, ptr[r9+rbp*1+1]); dump();
mov (ecx, ptr[r9+rbp*1+1000]); dump();
mov (ecx, ptr[r9+rbp*1-1]); dump();
mov (ecx, ptr[r9+rbp*1-1000]); dump();
mov (ecx, ptr[r9+rbp*2+0]); dump();
mov (ecx, ptr[r9+rbp*2+1]); dump();
mov (ecx, ptr[r9+rbp*2+1000]); dump();
mov (ecx, ptr[r9+rbp*2-1]); dump();
mov (ecx, ptr[r9+rbp*2-1000]); dump();
mov (ecx, ptr[r9+rbp*4+0]); dump();
mov (ecx, ptr[r9+rbp*4+1]); dump();
mov (ecx, ptr[r9+rbp*4+1000]); dump();
mov (ecx, ptr[r9+rbp*4-1]); dump();
mov (ecx, ptr[r9+rbp*4-1000]); dump();
mov (ecx, ptr[r9+rbp*8+0]); dump();
mov (ecx, ptr[r9+rbp*8+1]); dump();
mov (ecx, ptr[r9+rbp*8+1000]); dump();
mov (ecx, ptr[r9+rbp*8-1]); dump();
mov (ecx, ptr[r9+rbp*8-1000]); dump();
mov (ecx, ptr[r9+rsi+0]); dump();
mov (ecx, ptr[r9+rsi+1]); dump();
mov (ecx, ptr[r9+rsi+1000]); dump();
mov (ecx, ptr[r9+rsi-1]); dump();
mov (ecx, ptr[r9+rsi-1000]); dump();
mov (ecx, ptr[r9+rsi*1+0]); dump();
mov (ecx, ptr[r9+rsi*1+1]); dump();
mov (ecx, ptr[r9+rsi*1+1000]); dump();
mov (ecx, ptr[r9+rsi*1-1]); dump();
mov (ecx, ptr[r9+rsi*1-1000]); dump();
mov (ecx, ptr[r9+rsi*2+0]); dump();
mov (ecx, ptr[r9+rsi*2+1]); dump();
mov (ecx, ptr[r9+rsi*2+1000]); dump();
mov (ecx, ptr[r9+rsi*2-1]); dump();
mov (ecx, ptr[r9+rsi*2-1000]); dump();
mov (ecx, ptr[r9+rsi*4+0]); dump();
mov (ecx, ptr[r9+rsi*4+1]); dump();
mov (ecx, ptr[r9+rsi*4+1000]); dump();
mov (ecx, ptr[r9+rsi*4-1]); dump();
mov (ecx, ptr[r9+rsi*4-1000]); dump();
mov (ecx, ptr[r9+rsi*8+0]); dump();
mov (ecx, ptr[r9+rsi*8+1]); dump();
mov (ecx, ptr[r9+rsi*8+1000]); dump();
mov (ecx, ptr[r9+rsi*8-1]); dump();
mov (ecx, ptr[r9+rsi*8-1000]); dump();
mov (ecx, ptr[r9+rdi+0]); dump();
mov (ecx, ptr[r9+rdi+1]); dump();
mov (ecx, ptr[r9+rdi+1000]); dump();
mov (ecx, ptr[r9+rdi-1]); dump();
mov (ecx, ptr[r9+rdi-1000]); dump();
mov (ecx, ptr[r9+rdi*1+0]); dump();
mov (ecx, ptr[r9+rdi*1+1]); dump();
mov (ecx, ptr[r9+rdi*1+1000]); dump();
mov (ecx, ptr[r9+rdi*1-1]); dump();
mov (ecx, ptr[r9+rdi*1-1000]); dump();
mov (ecx, ptr[r9+rdi*2+0]); dump();
mov (ecx, ptr[r9+rdi*2+1]); dump();
mov (ecx, ptr[r9+rdi*2+1000]); dump();
mov (ecx, ptr[r9+rdi*2-1]); dump();
mov (ecx, ptr[r9+rdi*2-1000]); dump();
mov (ecx, ptr[r9+rdi*4+0]); dump();
mov (ecx, ptr[r9+rdi*4+1]); dump();
mov (ecx, ptr[r9+rdi*4+1000]); dump();
mov (ecx, ptr[r9+rdi*4-1]); dump();
mov (ecx, ptr[r9+rdi*4-1000]); dump();
mov (ecx, ptr[r9+rdi*8+0]); dump();
mov (ecx, ptr[r9+rdi*8+1]); dump();
mov (ecx, ptr[r9+rdi*8+1000]); dump();
mov (ecx, ptr[r9+rdi*8-1]); dump();
mov (ecx, ptr[r9+rdi*8-1000]); dump();
mov (ecx, ptr[r9+r9+0]); dump();
mov (ecx, ptr[r9+r9+1]); dump();
mov (ecx, ptr[r9+r9+1000]); dump();
mov (ecx, ptr[r9+r9-1]); dump();
mov (ecx, ptr[r9+r9-1000]); dump();
mov (ecx, ptr[r9+r9*1+0]); dump();
mov (ecx, ptr[r9+r9*1+1]); dump();
mov (ecx, ptr[r9+r9*1+1000]); dump();
mov (ecx, ptr[r9+r9*1-1]); dump();
mov (ecx, ptr[r9+r9*1-1000]); dump();
mov (ecx, ptr[r9+r9*2+0]); dump();
mov (ecx, ptr[r9+r9*2+1]); dump();
mov (ecx, ptr[r9+r9*2+1000]); dump();
mov (ecx, ptr[r9+r9*2-1]); dump();
mov (ecx, ptr[r9+r9*2-1000]); dump();
mov (ecx, ptr[r9+r9*4+0]); dump();
mov (ecx, ptr[r9+r9*4+1]); dump();
mov (ecx, ptr[r9+r9*4+1000]); dump();
mov (ecx, ptr[r9+r9*4-1]); dump();
mov (ecx, ptr[r9+r9*4-1000]); dump();
mov (ecx, ptr[r9+r9*8+0]); dump();
mov (ecx, ptr[r9+r9*8+1]); dump();
mov (ecx, ptr[r9+r9*8+1000]); dump();
mov (ecx, ptr[r9+r9*8-1]); dump();
mov (ecx, ptr[r9+r9*8-1000]); dump();
}
    void gen32(){
mov (ecx, ptr[r9+r10+0]); dump();
mov (ecx, ptr[r9+r10+1]); dump();
mov (ecx, ptr[r9+r10+1000]); dump();
mov (ecx, ptr[r9+r10-1]); dump();
mov (ecx, ptr[r9+r10-1000]); dump();
mov (ecx, ptr[r9+r10*1+0]); dump();
mov (ecx, ptr[r9+r10*1+1]); dump();
mov (ecx, ptr[r9+r10*1+1000]); dump();
mov (ecx, ptr[r9+r10*1-1]); dump();
mov (ecx, ptr[r9+r10*1-1000]); dump();
mov (ecx, ptr[r9+r10*2+0]); dump();
mov (ecx, ptr[r9+r10*2+1]); dump();
mov (ecx, ptr[r9+r10*2+1000]); dump();
mov (ecx, ptr[r9+r10*2-1]); dump();
mov (ecx, ptr[r9+r10*2-1000]); dump();
mov (ecx, ptr[r9+r10*4+0]); dump();
mov (ecx, ptr[r9+r10*4+1]); dump();
mov (ecx, ptr[r9+r10*4+1000]); dump();
mov (ecx, ptr[r9+r10*4-1]); dump();
mov (ecx, ptr[r9+r10*4-1000]); dump();
mov (ecx, ptr[r9+r10*8+0]); dump();
mov (ecx, ptr[r9+r10*8+1]); dump();
mov (ecx, ptr[r9+r10*8+1000]); dump();
mov (ecx, ptr[r9+r10*8-1]); dump();
mov (ecx, ptr[r9+r10*8-1000]); dump();
mov (ecx, ptr[r9+r11+0]); dump();
mov (ecx, ptr[r9+r11+1]); dump();
mov (ecx, ptr[r9+r11+1000]); dump();
mov (ecx, ptr[r9+r11-1]); dump();
mov (ecx, ptr[r9+r11-1000]); dump();
mov (ecx, ptr[r9+r11*1+0]); dump();
mov (ecx, ptr[r9+r11*1+1]); dump();
mov (ecx, ptr[r9+r11*1+1000]); dump();
mov (ecx, ptr[r9+r11*1-1]); dump();
mov (ecx, ptr[r9+r11*1-1000]); dump();
mov (ecx, ptr[r9+r11*2+0]); dump();
mov (ecx, ptr[r9+r11*2+1]); dump();
mov (ecx, ptr[r9+r11*2+1000]); dump();
mov (ecx, ptr[r9+r11*2-1]); dump();
mov (ecx, ptr[r9+r11*2-1000]); dump();
mov (ecx, ptr[r9+r11*4+0]); dump();
mov (ecx, ptr[r9+r11*4+1]); dump();
mov (ecx, ptr[r9+r11*4+1000]); dump();
mov (ecx, ptr[r9+r11*4-1]); dump();
mov (ecx, ptr[r9+r11*4-1000]); dump();
mov (ecx, ptr[r9+r11*8+0]); dump();
mov (ecx, ptr[r9+r11*8+1]); dump();
mov (ecx, ptr[r9+r11*8+1000]); dump();
mov (ecx, ptr[r9+r11*8-1]); dump();
mov (ecx, ptr[r9+r11*8-1000]); dump();
mov (ecx, ptr[r9+r12+0]); dump();
mov (ecx, ptr[r9+r12+1]); dump();
mov (ecx, ptr[r9+r12+1000]); dump();
mov (ecx, ptr[r9+r12-1]); dump();
mov (ecx, ptr[r9+r12-1000]); dump();
mov (ecx, ptr[r9+r12*1+0]); dump();
mov (ecx, ptr[r9+r12*1+1]); dump();
mov (ecx, ptr[r9+r12*1+1000]); dump();
mov (ecx, ptr[r9+r12*1-1]); dump();
mov (ecx, ptr[r9+r12*1-1000]); dump();
mov (ecx, ptr[r9+r12*2+0]); dump();
mov (ecx, ptr[r9+r12*2+1]); dump();
mov (ecx, ptr[r9+r12*2+1000]); dump();
mov (ecx, ptr[r9+r12*2-1]); dump();
mov (ecx, ptr[r9+r12*2-1000]); dump();
mov (ecx, ptr[r9+r12*4+0]); dump();
mov (ecx, ptr[r9+r12*4+1]); dump();
mov (ecx, ptr[r9+r12*4+1000]); dump();
mov (ecx, ptr[r9+r12*4-1]); dump();
mov (ecx, ptr[r9+r12*4-1000]); dump();
mov (ecx, ptr[r9+r12*8+0]); dump();
mov (ecx, ptr[r9+r12*8+1]); dump();
mov (ecx, ptr[r9+r12*8+1000]); dump();
mov (ecx, ptr[r9+r12*8-1]); dump();
mov (ecx, ptr[r9+r12*8-1000]); dump();
mov (ecx, ptr[r9+r13+0]); dump();
mov (ecx, ptr[r9+r13+1]); dump();
mov (ecx, ptr[r9+r13+1000]); dump();
mov (ecx, ptr[r9+r13-1]); dump();
mov (ecx, ptr[r9+r13-1000]); dump();
mov (ecx, ptr[r9+r13*1+0]); dump();
mov (ecx, ptr[r9+r13*1+1]); dump();
mov (ecx, ptr[r9+r13*1+1000]); dump();
mov (ecx, ptr[r9+r13*1-1]); dump();
mov (ecx, ptr[r9+r13*1-1000]); dump();
mov (ecx, ptr[r9+r13*2+0]); dump();
mov (ecx, ptr[r9+r13*2+1]); dump();
mov (ecx, ptr[r9+r13*2+1000]); dump();
mov (ecx, ptr[r9+r13*2-1]); dump();
mov (ecx, ptr[r9+r13*2-1000]); dump();
mov (ecx, ptr[r9+r13*4+0]); dump();
mov (ecx, ptr[r9+r13*4+1]); dump();
mov (ecx, ptr[r9+r13*4+1000]); dump();
mov (ecx, ptr[r9+r13*4-1]); dump();
mov (ecx, ptr[r9+r13*4-1000]); dump();
mov (ecx, ptr[r9+r13*8+0]); dump();
mov (ecx, ptr[r9+r13*8+1]); dump();
mov (ecx, ptr[r9+r13*8+1000]); dump();
mov (ecx, ptr[r9+r13*8-1]); dump();
mov (ecx, ptr[r9+r13*8-1000]); dump();
}
    void gen33(){
mov (ecx, ptr[r9+r14+0]); dump();
mov (ecx, ptr[r9+r14+1]); dump();
mov (ecx, ptr[r9+r14+1000]); dump();
mov (ecx, ptr[r9+r14-1]); dump();
mov (ecx, ptr[r9+r14-1000]); dump();
mov (ecx, ptr[r9+r14*1+0]); dump();
mov (ecx, ptr[r9+r14*1+1]); dump();
mov (ecx, ptr[r9+r14*1+1000]); dump();
mov (ecx, ptr[r9+r14*1-1]); dump();
mov (ecx, ptr[r9+r14*1-1000]); dump();
mov (ecx, ptr[r9+r14*2+0]); dump();
mov (ecx, ptr[r9+r14*2+1]); dump();
mov (ecx, ptr[r9+r14*2+1000]); dump();
mov (ecx, ptr[r9+r14*2-1]); dump();
mov (ecx, ptr[r9+r14*2-1000]); dump();
mov (ecx, ptr[r9+r14*4+0]); dump();
mov (ecx, ptr[r9+r14*4+1]); dump();
mov (ecx, ptr[r9+r14*4+1000]); dump();
mov (ecx, ptr[r9+r14*4-1]); dump();
mov (ecx, ptr[r9+r14*4-1000]); dump();
mov (ecx, ptr[r9+r14*8+0]); dump();
mov (ecx, ptr[r9+r14*8+1]); dump();
mov (ecx, ptr[r9+r14*8+1000]); dump();
mov (ecx, ptr[r9+r14*8-1]); dump();
mov (ecx, ptr[r9+r14*8-1000]); dump();
mov (ecx, ptr[r9+r15+0]); dump();
mov (ecx, ptr[r9+r15+1]); dump();
mov (ecx, ptr[r9+r15+1000]); dump();
mov (ecx, ptr[r9+r15-1]); dump();
mov (ecx, ptr[r9+r15-1000]); dump();
mov (ecx, ptr[r9+r15*1+0]); dump();
mov (ecx, ptr[r9+r15*1+1]); dump();
mov (ecx, ptr[r9+r15*1+1000]); dump();
mov (ecx, ptr[r9+r15*1-1]); dump();
mov (ecx, ptr[r9+r15*1-1000]); dump();
mov (ecx, ptr[r9+r15*2+0]); dump();
mov (ecx, ptr[r9+r15*2+1]); dump();
mov (ecx, ptr[r9+r15*2+1000]); dump();
mov (ecx, ptr[r9+r15*2-1]); dump();
mov (ecx, ptr[r9+r15*2-1000]); dump();
mov (ecx, ptr[r9+r15*4+0]); dump();
mov (ecx, ptr[r9+r15*4+1]); dump();
mov (ecx, ptr[r9+r15*4+1000]); dump();
mov (ecx, ptr[r9+r15*4-1]); dump();
mov (ecx, ptr[r9+r15*4-1000]); dump();
mov (ecx, ptr[r9+r15*8+0]); dump();
mov (ecx, ptr[r9+r15*8+1]); dump();
mov (ecx, ptr[r9+r15*8+1000]); dump();
mov (ecx, ptr[r9+r15*8-1]); dump();
mov (ecx, ptr[r9+r15*8-1000]); dump();
mov (ecx, ptr[r9+0]); dump();
mov (ecx, ptr[r9+1]); dump();
mov (ecx, ptr[r9+1000]); dump();
mov (ecx, ptr[r9-1]); dump();
mov (ecx, ptr[r9-1000]); dump();
mov (ecx, ptr[r9+0]); dump();
mov (ecx, ptr[r9+1]); dump();
mov (ecx, ptr[r9+1000]); dump();
mov (ecx, ptr[r9-1]); dump();
mov (ecx, ptr[r9-1000]); dump();
mov (ecx, ptr[r9+0]); dump();
mov (ecx, ptr[r9+1]); dump();
mov (ecx, ptr[r9+1000]); dump();
mov (ecx, ptr[r9-1]); dump();
mov (ecx, ptr[r9-1000]); dump();
mov (ecx, ptr[r9+0]); dump();
mov (ecx, ptr[r9+1]); dump();
mov (ecx, ptr[r9+1000]); dump();
mov (ecx, ptr[r9-1]); dump();
mov (ecx, ptr[r9-1000]); dump();
mov (ecx, ptr[r9+0]); dump();
mov (ecx, ptr[r9+1]); dump();
mov (ecx, ptr[r9+1000]); dump();
mov (ecx, ptr[r9-1]); dump();
mov (ecx, ptr[r9-1000]); dump();
mov (ecx, ptr[r10+rax+0]); dump();
mov (ecx, ptr[r10+rax+1]); dump();
mov (ecx, ptr[r10+rax+1000]); dump();
mov (ecx, ptr[r10+rax-1]); dump();
mov (ecx, ptr[r10+rax-1000]); dump();
mov (ecx, ptr[r10+rax*1+0]); dump();
mov (ecx, ptr[r10+rax*1+1]); dump();
mov (ecx, ptr[r10+rax*1+1000]); dump();
mov (ecx, ptr[r10+rax*1-1]); dump();
mov (ecx, ptr[r10+rax*1-1000]); dump();
mov (ecx, ptr[r10+rax*2+0]); dump();
mov (ecx, ptr[r10+rax*2+1]); dump();
mov (ecx, ptr[r10+rax*2+1000]); dump();
mov (ecx, ptr[r10+rax*2-1]); dump();
mov (ecx, ptr[r10+rax*2-1000]); dump();
mov (ecx, ptr[r10+rax*4+0]); dump();
mov (ecx, ptr[r10+rax*4+1]); dump();
mov (ecx, ptr[r10+rax*4+1000]); dump();
mov (ecx, ptr[r10+rax*4-1]); dump();
mov (ecx, ptr[r10+rax*4-1000]); dump();
mov (ecx, ptr[r10+rax*8+0]); dump();
mov (ecx, ptr[r10+rax*8+1]); dump();
mov (ecx, ptr[r10+rax*8+1000]); dump();
mov (ecx, ptr[r10+rax*8-1]); dump();
mov (ecx, ptr[r10+rax*8-1000]); dump();
}
    void gen34(){
mov (ecx, ptr[r10+rcx+0]); dump();
mov (ecx, ptr[r10+rcx+1]); dump();
mov (ecx, ptr[r10+rcx+1000]); dump();
mov (ecx, ptr[r10+rcx-1]); dump();
mov (ecx, ptr[r10+rcx-1000]); dump();
mov (ecx, ptr[r10+rcx*1+0]); dump();
mov (ecx, ptr[r10+rcx*1+1]); dump();
mov (ecx, ptr[r10+rcx*1+1000]); dump();
mov (ecx, ptr[r10+rcx*1-1]); dump();
mov (ecx, ptr[r10+rcx*1-1000]); dump();
mov (ecx, ptr[r10+rcx*2+0]); dump();
mov (ecx, ptr[r10+rcx*2+1]); dump();
mov (ecx, ptr[r10+rcx*2+1000]); dump();
mov (ecx, ptr[r10+rcx*2-1]); dump();
mov (ecx, ptr[r10+rcx*2-1000]); dump();
mov (ecx, ptr[r10+rcx*4+0]); dump();
mov (ecx, ptr[r10+rcx*4+1]); dump();
mov (ecx, ptr[r10+rcx*4+1000]); dump();
mov (ecx, ptr[r10+rcx*4-1]); dump();
mov (ecx, ptr[r10+rcx*4-1000]); dump();
mov (ecx, ptr[r10+rcx*8+0]); dump();
mov (ecx, ptr[r10+rcx*8+1]); dump();
mov (ecx, ptr[r10+rcx*8+1000]); dump();
mov (ecx, ptr[r10+rcx*8-1]); dump();
mov (ecx, ptr[r10+rcx*8-1000]); dump();
mov (ecx, ptr[r10+rdx+0]); dump();
mov (ecx, ptr[r10+rdx+1]); dump();
mov (ecx, ptr[r10+rdx+1000]); dump();
mov (ecx, ptr[r10+rdx-1]); dump();
mov (ecx, ptr[r10+rdx-1000]); dump();
mov (ecx, ptr[r10+rdx*1+0]); dump();
mov (ecx, ptr[r10+rdx*1+1]); dump();
mov (ecx, ptr[r10+rdx*1+1000]); dump();
mov (ecx, ptr[r10+rdx*1-1]); dump();
mov (ecx, ptr[r10+rdx*1-1000]); dump();
mov (ecx, ptr[r10+rdx*2+0]); dump();
mov (ecx, ptr[r10+rdx*2+1]); dump();
mov (ecx, ptr[r10+rdx*2+1000]); dump();
mov (ecx, ptr[r10+rdx*2-1]); dump();
mov (ecx, ptr[r10+rdx*2-1000]); dump();
mov (ecx, ptr[r10+rdx*4+0]); dump();
mov (ecx, ptr[r10+rdx*4+1]); dump();
mov (ecx, ptr[r10+rdx*4+1000]); dump();
mov (ecx, ptr[r10+rdx*4-1]); dump();
mov (ecx, ptr[r10+rdx*4-1000]); dump();
mov (ecx, ptr[r10+rdx*8+0]); dump();
mov (ecx, ptr[r10+rdx*8+1]); dump();
mov (ecx, ptr[r10+rdx*8+1000]); dump();
mov (ecx, ptr[r10+rdx*8-1]); dump();
mov (ecx, ptr[r10+rdx*8-1000]); dump();
mov (ecx, ptr[r10+rbx+0]); dump();
mov (ecx, ptr[r10+rbx+1]); dump();
mov (ecx, ptr[r10+rbx+1000]); dump();
mov (ecx, ptr[r10+rbx-1]); dump();
mov (ecx, ptr[r10+rbx-1000]); dump();
mov (ecx, ptr[r10+rbx*1+0]); dump();
mov (ecx, ptr[r10+rbx*1+1]); dump();
mov (ecx, ptr[r10+rbx*1+1000]); dump();
mov (ecx, ptr[r10+rbx*1-1]); dump();
mov (ecx, ptr[r10+rbx*1-1000]); dump();
mov (ecx, ptr[r10+rbx*2+0]); dump();
mov (ecx, ptr[r10+rbx*2+1]); dump();
mov (ecx, ptr[r10+rbx*2+1000]); dump();
mov (ecx, ptr[r10+rbx*2-1]); dump();
mov (ecx, ptr[r10+rbx*2-1000]); dump();
mov (ecx, ptr[r10+rbx*4+0]); dump();
mov (ecx, ptr[r10+rbx*4+1]); dump();
mov (ecx, ptr[r10+rbx*4+1000]); dump();
mov (ecx, ptr[r10+rbx*4-1]); dump();
mov (ecx, ptr[r10+rbx*4-1000]); dump();
mov (ecx, ptr[r10+rbx*8+0]); dump();
mov (ecx, ptr[r10+rbx*8+1]); dump();
mov (ecx, ptr[r10+rbx*8+1000]); dump();
mov (ecx, ptr[r10+rbx*8-1]); dump();
mov (ecx, ptr[r10+rbx*8-1000]); dump();
mov (ecx, ptr[r10+rbp+0]); dump();
mov (ecx, ptr[r10+rbp+1]); dump();
mov (ecx, ptr[r10+rbp+1000]); dump();
mov (ecx, ptr[r10+rbp-1]); dump();
mov (ecx, ptr[r10+rbp-1000]); dump();
mov (ecx, ptr[r10+rbp*1+0]); dump();
mov (ecx, ptr[r10+rbp*1+1]); dump();
mov (ecx, ptr[r10+rbp*1+1000]); dump();
mov (ecx, ptr[r10+rbp*1-1]); dump();
mov (ecx, ptr[r10+rbp*1-1000]); dump();
mov (ecx, ptr[r10+rbp*2+0]); dump();
mov (ecx, ptr[r10+rbp*2+1]); dump();
mov (ecx, ptr[r10+rbp*2+1000]); dump();
mov (ecx, ptr[r10+rbp*2-1]); dump();
mov (ecx, ptr[r10+rbp*2-1000]); dump();
mov (ecx, ptr[r10+rbp*4+0]); dump();
mov (ecx, ptr[r10+rbp*4+1]); dump();
mov (ecx, ptr[r10+rbp*4+1000]); dump();
mov (ecx, ptr[r10+rbp*4-1]); dump();
mov (ecx, ptr[r10+rbp*4-1000]); dump();
mov (ecx, ptr[r10+rbp*8+0]); dump();
mov (ecx, ptr[r10+rbp*8+1]); dump();
mov (ecx, ptr[r10+rbp*8+1000]); dump();
mov (ecx, ptr[r10+rbp*8-1]); dump();
mov (ecx, ptr[r10+rbp*8-1000]); dump();
}
    void gen35(){
mov (ecx, ptr[r10+rsi+0]); dump();
mov (ecx, ptr[r10+rsi+1]); dump();
mov (ecx, ptr[r10+rsi+1000]); dump();
mov (ecx, ptr[r10+rsi-1]); dump();
mov (ecx, ptr[r10+rsi-1000]); dump();
mov (ecx, ptr[r10+rsi*1+0]); dump();
mov (ecx, ptr[r10+rsi*1+1]); dump();
mov (ecx, ptr[r10+rsi*1+1000]); dump();
mov (ecx, ptr[r10+rsi*1-1]); dump();
mov (ecx, ptr[r10+rsi*1-1000]); dump();
mov (ecx, ptr[r10+rsi*2+0]); dump();
mov (ecx, ptr[r10+rsi*2+1]); dump();
mov (ecx, ptr[r10+rsi*2+1000]); dump();
mov (ecx, ptr[r10+rsi*2-1]); dump();
mov (ecx, ptr[r10+rsi*2-1000]); dump();
mov (ecx, ptr[r10+rsi*4+0]); dump();
mov (ecx, ptr[r10+rsi*4+1]); dump();
mov (ecx, ptr[r10+rsi*4+1000]); dump();
mov (ecx, ptr[r10+rsi*4-1]); dump();
mov (ecx, ptr[r10+rsi*4-1000]); dump();
mov (ecx, ptr[r10+rsi*8+0]); dump();
mov (ecx, ptr[r10+rsi*8+1]); dump();
mov (ecx, ptr[r10+rsi*8+1000]); dump();
mov (ecx, ptr[r10+rsi*8-1]); dump();
mov (ecx, ptr[r10+rsi*8-1000]); dump();
mov (ecx, ptr[r10+rdi+0]); dump();
mov (ecx, ptr[r10+rdi+1]); dump();
mov (ecx, ptr[r10+rdi+1000]); dump();
mov (ecx, ptr[r10+rdi-1]); dump();
mov (ecx, ptr[r10+rdi-1000]); dump();
mov (ecx, ptr[r10+rdi*1+0]); dump();
mov (ecx, ptr[r10+rdi*1+1]); dump();
mov (ecx, ptr[r10+rdi*1+1000]); dump();
mov (ecx, ptr[r10+rdi*1-1]); dump();
mov (ecx, ptr[r10+rdi*1-1000]); dump();
mov (ecx, ptr[r10+rdi*2+0]); dump();
mov (ecx, ptr[r10+rdi*2+1]); dump();
mov (ecx, ptr[r10+rdi*2+1000]); dump();
mov (ecx, ptr[r10+rdi*2-1]); dump();
mov (ecx, ptr[r10+rdi*2-1000]); dump();
mov (ecx, ptr[r10+rdi*4+0]); dump();
mov (ecx, ptr[r10+rdi*4+1]); dump();
mov (ecx, ptr[r10+rdi*4+1000]); dump();
mov (ecx, ptr[r10+rdi*4-1]); dump();
mov (ecx, ptr[r10+rdi*4-1000]); dump();
mov (ecx, ptr[r10+rdi*8+0]); dump();
mov (ecx, ptr[r10+rdi*8+1]); dump();
mov (ecx, ptr[r10+rdi*8+1000]); dump();
mov (ecx, ptr[r10+rdi*8-1]); dump();
mov (ecx, ptr[r10+rdi*8-1000]); dump();
mov (ecx, ptr[r10+r9+0]); dump();
mov (ecx, ptr[r10+r9+1]); dump();
mov (ecx, ptr[r10+r9+1000]); dump();
mov (ecx, ptr[r10+r9-1]); dump();
mov (ecx, ptr[r10+r9-1000]); dump();
mov (ecx, ptr[r10+r9*1+0]); dump();
mov (ecx, ptr[r10+r9*1+1]); dump();
mov (ecx, ptr[r10+r9*1+1000]); dump();
mov (ecx, ptr[r10+r9*1-1]); dump();
mov (ecx, ptr[r10+r9*1-1000]); dump();
mov (ecx, ptr[r10+r9*2+0]); dump();
mov (ecx, ptr[r10+r9*2+1]); dump();
mov (ecx, ptr[r10+r9*2+1000]); dump();
mov (ecx, ptr[r10+r9*2-1]); dump();
mov (ecx, ptr[r10+r9*2-1000]); dump();
mov (ecx, ptr[r10+r9*4+0]); dump();
mov (ecx, ptr[r10+r9*4+1]); dump();
mov (ecx, ptr[r10+r9*4+1000]); dump();
mov (ecx, ptr[r10+r9*4-1]); dump();
mov (ecx, ptr[r10+r9*4-1000]); dump();
mov (ecx, ptr[r10+r9*8+0]); dump();
mov (ecx, ptr[r10+r9*8+1]); dump();
mov (ecx, ptr[r10+r9*8+1000]); dump();
mov (ecx, ptr[r10+r9*8-1]); dump();
mov (ecx, ptr[r10+r9*8-1000]); dump();
mov (ecx, ptr[r10+r10+0]); dump();
mov (ecx, ptr[r10+r10+1]); dump();
mov (ecx, ptr[r10+r10+1000]); dump();
mov (ecx, ptr[r10+r10-1]); dump();
mov (ecx, ptr[r10+r10-1000]); dump();
mov (ecx, ptr[r10+r10*1+0]); dump();
mov (ecx, ptr[r10+r10*1+1]); dump();
mov (ecx, ptr[r10+r10*1+1000]); dump();
mov (ecx, ptr[r10+r10*1-1]); dump();
mov (ecx, ptr[r10+r10*1-1000]); dump();
mov (ecx, ptr[r10+r10*2+0]); dump();
mov (ecx, ptr[r10+r10*2+1]); dump();
mov (ecx, ptr[r10+r10*2+1000]); dump();
mov (ecx, ptr[r10+r10*2-1]); dump();
mov (ecx, ptr[r10+r10*2-1000]); dump();
mov (ecx, ptr[r10+r10*4+0]); dump();
mov (ecx, ptr[r10+r10*4+1]); dump();
mov (ecx, ptr[r10+r10*4+1000]); dump();
mov (ecx, ptr[r10+r10*4-1]); dump();
mov (ecx, ptr[r10+r10*4-1000]); dump();
mov (ecx, ptr[r10+r10*8+0]); dump();
mov (ecx, ptr[r10+r10*8+1]); dump();
mov (ecx, ptr[r10+r10*8+1000]); dump();
mov (ecx, ptr[r10+r10*8-1]); dump();
mov (ecx, ptr[r10+r10*8-1000]); dump();
}
    void gen36(){
mov (ecx, ptr[r10+r11+0]); dump();
mov (ecx, ptr[r10+r11+1]); dump();
mov (ecx, ptr[r10+r11+1000]); dump();
mov (ecx, ptr[r10+r11-1]); dump();
mov (ecx, ptr[r10+r11-1000]); dump();
mov (ecx, ptr[r10+r11*1+0]); dump();
mov (ecx, ptr[r10+r11*1+1]); dump();
mov (ecx, ptr[r10+r11*1+1000]); dump();
mov (ecx, ptr[r10+r11*1-1]); dump();
mov (ecx, ptr[r10+r11*1-1000]); dump();
mov (ecx, ptr[r10+r11*2+0]); dump();
mov (ecx, ptr[r10+r11*2+1]); dump();
mov (ecx, ptr[r10+r11*2+1000]); dump();
mov (ecx, ptr[r10+r11*2-1]); dump();
mov (ecx, ptr[r10+r11*2-1000]); dump();
mov (ecx, ptr[r10+r11*4+0]); dump();
mov (ecx, ptr[r10+r11*4+1]); dump();
mov (ecx, ptr[r10+r11*4+1000]); dump();
mov (ecx, ptr[r10+r11*4-1]); dump();
mov (ecx, ptr[r10+r11*4-1000]); dump();
mov (ecx, ptr[r10+r11*8+0]); dump();
mov (ecx, ptr[r10+r11*8+1]); dump();
mov (ecx, ptr[r10+r11*8+1000]); dump();
mov (ecx, ptr[r10+r11*8-1]); dump();
mov (ecx, ptr[r10+r11*8-1000]); dump();
mov (ecx, ptr[r10+r12+0]); dump();
mov (ecx, ptr[r10+r12+1]); dump();
mov (ecx, ptr[r10+r12+1000]); dump();
mov (ecx, ptr[r10+r12-1]); dump();
mov (ecx, ptr[r10+r12-1000]); dump();
mov (ecx, ptr[r10+r12*1+0]); dump();
mov (ecx, ptr[r10+r12*1+1]); dump();
mov (ecx, ptr[r10+r12*1+1000]); dump();
mov (ecx, ptr[r10+r12*1-1]); dump();
mov (ecx, ptr[r10+r12*1-1000]); dump();
mov (ecx, ptr[r10+r12*2+0]); dump();
mov (ecx, ptr[r10+r12*2+1]); dump();
mov (ecx, ptr[r10+r12*2+1000]); dump();
mov (ecx, ptr[r10+r12*2-1]); dump();
mov (ecx, ptr[r10+r12*2-1000]); dump();
mov (ecx, ptr[r10+r12*4+0]); dump();
mov (ecx, ptr[r10+r12*4+1]); dump();
mov (ecx, ptr[r10+r12*4+1000]); dump();
mov (ecx, ptr[r10+r12*4-1]); dump();
mov (ecx, ptr[r10+r12*4-1000]); dump();
mov (ecx, ptr[r10+r12*8+0]); dump();
mov (ecx, ptr[r10+r12*8+1]); dump();
mov (ecx, ptr[r10+r12*8+1000]); dump();
mov (ecx, ptr[r10+r12*8-1]); dump();
mov (ecx, ptr[r10+r12*8-1000]); dump();
mov (ecx, ptr[r10+r13+0]); dump();
mov (ecx, ptr[r10+r13+1]); dump();
mov (ecx, ptr[r10+r13+1000]); dump();
mov (ecx, ptr[r10+r13-1]); dump();
mov (ecx, ptr[r10+r13-1000]); dump();
mov (ecx, ptr[r10+r13*1+0]); dump();
mov (ecx, ptr[r10+r13*1+1]); dump();
mov (ecx, ptr[r10+r13*1+1000]); dump();
mov (ecx, ptr[r10+r13*1-1]); dump();
mov (ecx, ptr[r10+r13*1-1000]); dump();
mov (ecx, ptr[r10+r13*2+0]); dump();
mov (ecx, ptr[r10+r13*2+1]); dump();
mov (ecx, ptr[r10+r13*2+1000]); dump();
mov (ecx, ptr[r10+r13*2-1]); dump();
mov (ecx, ptr[r10+r13*2-1000]); dump();
mov (ecx, ptr[r10+r13*4+0]); dump();
mov (ecx, ptr[r10+r13*4+1]); dump();
mov (ecx, ptr[r10+r13*4+1000]); dump();
mov (ecx, ptr[r10+r13*4-1]); dump();
mov (ecx, ptr[r10+r13*4-1000]); dump();
mov (ecx, ptr[r10+r13*8+0]); dump();
mov (ecx, ptr[r10+r13*8+1]); dump();
mov (ecx, ptr[r10+r13*8+1000]); dump();
mov (ecx, ptr[r10+r13*8-1]); dump();
mov (ecx, ptr[r10+r13*8-1000]); dump();
mov (ecx, ptr[r10+r14+0]); dump();
mov (ecx, ptr[r10+r14+1]); dump();
mov (ecx, ptr[r10+r14+1000]); dump();
mov (ecx, ptr[r10+r14-1]); dump();
mov (ecx, ptr[r10+r14-1000]); dump();
mov (ecx, ptr[r10+r14*1+0]); dump();
mov (ecx, ptr[r10+r14*1+1]); dump();
mov (ecx, ptr[r10+r14*1+1000]); dump();
mov (ecx, ptr[r10+r14*1-1]); dump();
mov (ecx, ptr[r10+r14*1-1000]); dump();
mov (ecx, ptr[r10+r14*2+0]); dump();
mov (ecx, ptr[r10+r14*2+1]); dump();
mov (ecx, ptr[r10+r14*2+1000]); dump();
mov (ecx, ptr[r10+r14*2-1]); dump();
mov (ecx, ptr[r10+r14*2-1000]); dump();
mov (ecx, ptr[r10+r14*4+0]); dump();
mov (ecx, ptr[r10+r14*4+1]); dump();
mov (ecx, ptr[r10+r14*4+1000]); dump();
mov (ecx, ptr[r10+r14*4-1]); dump();
mov (ecx, ptr[r10+r14*4-1000]); dump();
mov (ecx, ptr[r10+r14*8+0]); dump();
mov (ecx, ptr[r10+r14*8+1]); dump();
mov (ecx, ptr[r10+r14*8+1000]); dump();
mov (ecx, ptr[r10+r14*8-1]); dump();
mov (ecx, ptr[r10+r14*8-1000]); dump();
}
    void gen37(){
mov (ecx, ptr[r10+r15+0]); dump();
mov (ecx, ptr[r10+r15+1]); dump();
mov (ecx, ptr[r10+r15+1000]); dump();
mov (ecx, ptr[r10+r15-1]); dump();
mov (ecx, ptr[r10+r15-1000]); dump();
mov (ecx, ptr[r10+r15*1+0]); dump();
mov (ecx, ptr[r10+r15*1+1]); dump();
mov (ecx, ptr[r10+r15*1+1000]); dump();
mov (ecx, ptr[r10+r15*1-1]); dump();
mov (ecx, ptr[r10+r15*1-1000]); dump();
mov (ecx, ptr[r10+r15*2+0]); dump();
mov (ecx, ptr[r10+r15*2+1]); dump();
mov (ecx, ptr[r10+r15*2+1000]); dump();
mov (ecx, ptr[r10+r15*2-1]); dump();
mov (ecx, ptr[r10+r15*2-1000]); dump();
mov (ecx, ptr[r10+r15*4+0]); dump();
mov (ecx, ptr[r10+r15*4+1]); dump();
mov (ecx, ptr[r10+r15*4+1000]); dump();
mov (ecx, ptr[r10+r15*4-1]); dump();
mov (ecx, ptr[r10+r15*4-1000]); dump();
mov (ecx, ptr[r10+r15*8+0]); dump();
mov (ecx, ptr[r10+r15*8+1]); dump();
mov (ecx, ptr[r10+r15*8+1000]); dump();
mov (ecx, ptr[r10+r15*8-1]); dump();
mov (ecx, ptr[r10+r15*8-1000]); dump();
mov (ecx, ptr[r10+0]); dump();
mov (ecx, ptr[r10+1]); dump();
mov (ecx, ptr[r10+1000]); dump();
mov (ecx, ptr[r10-1]); dump();
mov (ecx, ptr[r10-1000]); dump();
mov (ecx, ptr[r10+0]); dump();
mov (ecx, ptr[r10+1]); dump();
mov (ecx, ptr[r10+1000]); dump();
mov (ecx, ptr[r10-1]); dump();
mov (ecx, ptr[r10-1000]); dump();
mov (ecx, ptr[r10+0]); dump();
mov (ecx, ptr[r10+1]); dump();
mov (ecx, ptr[r10+1000]); dump();
mov (ecx, ptr[r10-1]); dump();
mov (ecx, ptr[r10-1000]); dump();
mov (ecx, ptr[r10+0]); dump();
mov (ecx, ptr[r10+1]); dump();
mov (ecx, ptr[r10+1000]); dump();
mov (ecx, ptr[r10-1]); dump();
mov (ecx, ptr[r10-1000]); dump();
mov (ecx, ptr[r10+0]); dump();
mov (ecx, ptr[r10+1]); dump();
mov (ecx, ptr[r10+1000]); dump();
mov (ecx, ptr[r10-1]); dump();
mov (ecx, ptr[r10-1000]); dump();
mov (ecx, ptr[r11+rax+0]); dump();
mov (ecx, ptr[r11+rax+1]); dump();
mov (ecx, ptr[r11+rax+1000]); dump();
mov (ecx, ptr[r11+rax-1]); dump();
mov (ecx, ptr[r11+rax-1000]); dump();
mov (ecx, ptr[r11+rax*1+0]); dump();
mov (ecx, ptr[r11+rax*1+1]); dump();
mov (ecx, ptr[r11+rax*1+1000]); dump();
mov (ecx, ptr[r11+rax*1-1]); dump();
mov (ecx, ptr[r11+rax*1-1000]); dump();
mov (ecx, ptr[r11+rax*2+0]); dump();
mov (ecx, ptr[r11+rax*2+1]); dump();
mov (ecx, ptr[r11+rax*2+1000]); dump();
mov (ecx, ptr[r11+rax*2-1]); dump();
mov (ecx, ptr[r11+rax*2-1000]); dump();
mov (ecx, ptr[r11+rax*4+0]); dump();
mov (ecx, ptr[r11+rax*4+1]); dump();
mov (ecx, ptr[r11+rax*4+1000]); dump();
mov (ecx, ptr[r11+rax*4-1]); dump();
mov (ecx, ptr[r11+rax*4-1000]); dump();
mov (ecx, ptr[r11+rax*8+0]); dump();
mov (ecx, ptr[r11+rax*8+1]); dump();
mov (ecx, ptr[r11+rax*8+1000]); dump();
mov (ecx, ptr[r11+rax*8-1]); dump();
mov (ecx, ptr[r11+rax*8-1000]); dump();
mov (ecx, ptr[r11+rcx+0]); dump();
mov (ecx, ptr[r11+rcx+1]); dump();
mov (ecx, ptr[r11+rcx+1000]); dump();
mov (ecx, ptr[r11+rcx-1]); dump();
mov (ecx, ptr[r11+rcx-1000]); dump();
mov (ecx, ptr[r11+rcx*1+0]); dump();
mov (ecx, ptr[r11+rcx*1+1]); dump();
mov (ecx, ptr[r11+rcx*1+1000]); dump();
mov (ecx, ptr[r11+rcx*1-1]); dump();
mov (ecx, ptr[r11+rcx*1-1000]); dump();
mov (ecx, ptr[r11+rcx*2+0]); dump();
mov (ecx, ptr[r11+rcx*2+1]); dump();
mov (ecx, ptr[r11+rcx*2+1000]); dump();
mov (ecx, ptr[r11+rcx*2-1]); dump();
mov (ecx, ptr[r11+rcx*2-1000]); dump();
mov (ecx, ptr[r11+rcx*4+0]); dump();
mov (ecx, ptr[r11+rcx*4+1]); dump();
mov (ecx, ptr[r11+rcx*4+1000]); dump();
mov (ecx, ptr[r11+rcx*4-1]); dump();
mov (ecx, ptr[r11+rcx*4-1000]); dump();
mov (ecx, ptr[r11+rcx*8+0]); dump();
mov (ecx, ptr[r11+rcx*8+1]); dump();
mov (ecx, ptr[r11+rcx*8+1000]); dump();
mov (ecx, ptr[r11+rcx*8-1]); dump();
mov (ecx, ptr[r11+rcx*8-1000]); dump();
}
    void gen38(){
mov (ecx, ptr[r11+rdx+0]); dump();
mov (ecx, ptr[r11+rdx+1]); dump();
mov (ecx, ptr[r11+rdx+1000]); dump();
mov (ecx, ptr[r11+rdx-1]); dump();
mov (ecx, ptr[r11+rdx-1000]); dump();
mov (ecx, ptr[r11+rdx*1+0]); dump();
mov (ecx, ptr[r11+rdx*1+1]); dump();
mov (ecx, ptr[r11+rdx*1+1000]); dump();
mov (ecx, ptr[r11+rdx*1-1]); dump();
mov (ecx, ptr[r11+rdx*1-1000]); dump();
mov (ecx, ptr[r11+rdx*2+0]); dump();
mov (ecx, ptr[r11+rdx*2+1]); dump();
mov (ecx, ptr[r11+rdx*2+1000]); dump();
mov (ecx, ptr[r11+rdx*2-1]); dump();
mov (ecx, ptr[r11+rdx*2-1000]); dump();
mov (ecx, ptr[r11+rdx*4+0]); dump();
mov (ecx, ptr[r11+rdx*4+1]); dump();
mov (ecx, ptr[r11+rdx*4+1000]); dump();
mov (ecx, ptr[r11+rdx*4-1]); dump();
mov (ecx, ptr[r11+rdx*4-1000]); dump();
mov (ecx, ptr[r11+rdx*8+0]); dump();
mov (ecx, ptr[r11+rdx*8+1]); dump();
mov (ecx, ptr[r11+rdx*8+1000]); dump();
mov (ecx, ptr[r11+rdx*8-1]); dump();
mov (ecx, ptr[r11+rdx*8-1000]); dump();
mov (ecx, ptr[r11+rbx+0]); dump();
mov (ecx, ptr[r11+rbx+1]); dump();
mov (ecx, ptr[r11+rbx+1000]); dump();
mov (ecx, ptr[r11+rbx-1]); dump();
mov (ecx, ptr[r11+rbx-1000]); dump();
mov (ecx, ptr[r11+rbx*1+0]); dump();
mov (ecx, ptr[r11+rbx*1+1]); dump();
mov (ecx, ptr[r11+rbx*1+1000]); dump();
mov (ecx, ptr[r11+rbx*1-1]); dump();
mov (ecx, ptr[r11+rbx*1-1000]); dump();
mov (ecx, ptr[r11+rbx*2+0]); dump();
mov (ecx, ptr[r11+rbx*2+1]); dump();
mov (ecx, ptr[r11+rbx*2+1000]); dump();
mov (ecx, ptr[r11+rbx*2-1]); dump();
mov (ecx, ptr[r11+rbx*2-1000]); dump();
mov (ecx, ptr[r11+rbx*4+0]); dump();
mov (ecx, ptr[r11+rbx*4+1]); dump();
mov (ecx, ptr[r11+rbx*4+1000]); dump();
mov (ecx, ptr[r11+rbx*4-1]); dump();
mov (ecx, ptr[r11+rbx*4-1000]); dump();
mov (ecx, ptr[r11+rbx*8+0]); dump();
mov (ecx, ptr[r11+rbx*8+1]); dump();
mov (ecx, ptr[r11+rbx*8+1000]); dump();
mov (ecx, ptr[r11+rbx*8-1]); dump();
mov (ecx, ptr[r11+rbx*8-1000]); dump();
mov (ecx, ptr[r11+rbp+0]); dump();
mov (ecx, ptr[r11+rbp+1]); dump();
mov (ecx, ptr[r11+rbp+1000]); dump();
mov (ecx, ptr[r11+rbp-1]); dump();
mov (ecx, ptr[r11+rbp-1000]); dump();
mov (ecx, ptr[r11+rbp*1+0]); dump();
mov (ecx, ptr[r11+rbp*1+1]); dump();
mov (ecx, ptr[r11+rbp*1+1000]); dump();
mov (ecx, ptr[r11+rbp*1-1]); dump();
mov (ecx, ptr[r11+rbp*1-1000]); dump();
mov (ecx, ptr[r11+rbp*2+0]); dump();
mov (ecx, ptr[r11+rbp*2+1]); dump();
mov (ecx, ptr[r11+rbp*2+1000]); dump();
mov (ecx, ptr[r11+rbp*2-1]); dump();
mov (ecx, ptr[r11+rbp*2-1000]); dump();
mov (ecx, ptr[r11+rbp*4+0]); dump();
mov (ecx, ptr[r11+rbp*4+1]); dump();
mov (ecx, ptr[r11+rbp*4+1000]); dump();
mov (ecx, ptr[r11+rbp*4-1]); dump();
mov (ecx, ptr[r11+rbp*4-1000]); dump();
mov (ecx, ptr[r11+rbp*8+0]); dump();
mov (ecx, ptr[r11+rbp*8+1]); dump();
mov (ecx, ptr[r11+rbp*8+1000]); dump();
mov (ecx, ptr[r11+rbp*8-1]); dump();
mov (ecx, ptr[r11+rbp*8-1000]); dump();
mov (ecx, ptr[r11+rsi+0]); dump();
mov (ecx, ptr[r11+rsi+1]); dump();
mov (ecx, ptr[r11+rsi+1000]); dump();
mov (ecx, ptr[r11+rsi-1]); dump();
mov (ecx, ptr[r11+rsi-1000]); dump();
mov (ecx, ptr[r11+rsi*1+0]); dump();
mov (ecx, ptr[r11+rsi*1+1]); dump();
mov (ecx, ptr[r11+rsi*1+1000]); dump();
mov (ecx, ptr[r11+rsi*1-1]); dump();
mov (ecx, ptr[r11+rsi*1-1000]); dump();
mov (ecx, ptr[r11+rsi*2+0]); dump();
mov (ecx, ptr[r11+rsi*2+1]); dump();
mov (ecx, ptr[r11+rsi*2+1000]); dump();
mov (ecx, ptr[r11+rsi*2-1]); dump();
mov (ecx, ptr[r11+rsi*2-1000]); dump();
mov (ecx, ptr[r11+rsi*4+0]); dump();
mov (ecx, ptr[r11+rsi*4+1]); dump();
mov (ecx, ptr[r11+rsi*4+1000]); dump();
mov (ecx, ptr[r11+rsi*4-1]); dump();
mov (ecx, ptr[r11+rsi*4-1000]); dump();
mov (ecx, ptr[r11+rsi*8+0]); dump();
mov (ecx, ptr[r11+rsi*8+1]); dump();
mov (ecx, ptr[r11+rsi*8+1000]); dump();
mov (ecx, ptr[r11+rsi*8-1]); dump();
mov (ecx, ptr[r11+rsi*8-1000]); dump();
}
    void gen39(){
mov (ecx, ptr[r11+rdi+0]); dump();
mov (ecx, ptr[r11+rdi+1]); dump();
mov (ecx, ptr[r11+rdi+1000]); dump();
mov (ecx, ptr[r11+rdi-1]); dump();
mov (ecx, ptr[r11+rdi-1000]); dump();
mov (ecx, ptr[r11+rdi*1+0]); dump();
mov (ecx, ptr[r11+rdi*1+1]); dump();
mov (ecx, ptr[r11+rdi*1+1000]); dump();
mov (ecx, ptr[r11+rdi*1-1]); dump();
mov (ecx, ptr[r11+rdi*1-1000]); dump();
mov (ecx, ptr[r11+rdi*2+0]); dump();
mov (ecx, ptr[r11+rdi*2+1]); dump();
mov (ecx, ptr[r11+rdi*2+1000]); dump();
mov (ecx, ptr[r11+rdi*2-1]); dump();
mov (ecx, ptr[r11+rdi*2-1000]); dump();
mov (ecx, ptr[r11+rdi*4+0]); dump();
mov (ecx, ptr[r11+rdi*4+1]); dump();
mov (ecx, ptr[r11+rdi*4+1000]); dump();
mov (ecx, ptr[r11+rdi*4-1]); dump();
mov (ecx, ptr[r11+rdi*4-1000]); dump();
mov (ecx, ptr[r11+rdi*8+0]); dump();
mov (ecx, ptr[r11+rdi*8+1]); dump();
mov (ecx, ptr[r11+rdi*8+1000]); dump();
mov (ecx, ptr[r11+rdi*8-1]); dump();
mov (ecx, ptr[r11+rdi*8-1000]); dump();
mov (ecx, ptr[r11+r9+0]); dump();
mov (ecx, ptr[r11+r9+1]); dump();
mov (ecx, ptr[r11+r9+1000]); dump();
mov (ecx, ptr[r11+r9-1]); dump();
mov (ecx, ptr[r11+r9-1000]); dump();
mov (ecx, ptr[r11+r9*1+0]); dump();
mov (ecx, ptr[r11+r9*1+1]); dump();
mov (ecx, ptr[r11+r9*1+1000]); dump();
mov (ecx, ptr[r11+r9*1-1]); dump();
mov (ecx, ptr[r11+r9*1-1000]); dump();
mov (ecx, ptr[r11+r9*2+0]); dump();
mov (ecx, ptr[r11+r9*2+1]); dump();
mov (ecx, ptr[r11+r9*2+1000]); dump();
mov (ecx, ptr[r11+r9*2-1]); dump();
mov (ecx, ptr[r11+r9*2-1000]); dump();
mov (ecx, ptr[r11+r9*4+0]); dump();
mov (ecx, ptr[r11+r9*4+1]); dump();
mov (ecx, ptr[r11+r9*4+1000]); dump();
mov (ecx, ptr[r11+r9*4-1]); dump();
mov (ecx, ptr[r11+r9*4-1000]); dump();
mov (ecx, ptr[r11+r9*8+0]); dump();
mov (ecx, ptr[r11+r9*8+1]); dump();
mov (ecx, ptr[r11+r9*8+1000]); dump();
mov (ecx, ptr[r11+r9*8-1]); dump();
mov (ecx, ptr[r11+r9*8-1000]); dump();
mov (ecx, ptr[r11+r10+0]); dump();
mov (ecx, ptr[r11+r10+1]); dump();
mov (ecx, ptr[r11+r10+1000]); dump();
mov (ecx, ptr[r11+r10-1]); dump();
mov (ecx, ptr[r11+r10-1000]); dump();
mov (ecx, ptr[r11+r10*1+0]); dump();
mov (ecx, ptr[r11+r10*1+1]); dump();
mov (ecx, ptr[r11+r10*1+1000]); dump();
mov (ecx, ptr[r11+r10*1-1]); dump();
mov (ecx, ptr[r11+r10*1-1000]); dump();
mov (ecx, ptr[r11+r10*2+0]); dump();
mov (ecx, ptr[r11+r10*2+1]); dump();
mov (ecx, ptr[r11+r10*2+1000]); dump();
mov (ecx, ptr[r11+r10*2-1]); dump();
mov (ecx, ptr[r11+r10*2-1000]); dump();
mov (ecx, ptr[r11+r10*4+0]); dump();
mov (ecx, ptr[r11+r10*4+1]); dump();
mov (ecx, ptr[r11+r10*4+1000]); dump();
mov (ecx, ptr[r11+r10*4-1]); dump();
mov (ecx, ptr[r11+r10*4-1000]); dump();
mov (ecx, ptr[r11+r10*8+0]); dump();
mov (ecx, ptr[r11+r10*8+1]); dump();
mov (ecx, ptr[r11+r10*8+1000]); dump();
mov (ecx, ptr[r11+r10*8-1]); dump();
mov (ecx, ptr[r11+r10*8-1000]); dump();
mov (ecx, ptr[r11+r11+0]); dump();
mov (ecx, ptr[r11+r11+1]); dump();
mov (ecx, ptr[r11+r11+1000]); dump();
mov (ecx, ptr[r11+r11-1]); dump();
mov (ecx, ptr[r11+r11-1000]); dump();
mov (ecx, ptr[r11+r11*1+0]); dump();
mov (ecx, ptr[r11+r11*1+1]); dump();
mov (ecx, ptr[r11+r11*1+1000]); dump();
mov (ecx, ptr[r11+r11*1-1]); dump();
mov (ecx, ptr[r11+r11*1-1000]); dump();
mov (ecx, ptr[r11+r11*2+0]); dump();
mov (ecx, ptr[r11+r11*2+1]); dump();
mov (ecx, ptr[r11+r11*2+1000]); dump();
mov (ecx, ptr[r11+r11*2-1]); dump();
mov (ecx, ptr[r11+r11*2-1000]); dump();
mov (ecx, ptr[r11+r11*4+0]); dump();
mov (ecx, ptr[r11+r11*4+1]); dump();
mov (ecx, ptr[r11+r11*4+1000]); dump();
mov (ecx, ptr[r11+r11*4-1]); dump();
mov (ecx, ptr[r11+r11*4-1000]); dump();
mov (ecx, ptr[r11+r11*8+0]); dump();
mov (ecx, ptr[r11+r11*8+1]); dump();
mov (ecx, ptr[r11+r11*8+1000]); dump();
mov (ecx, ptr[r11+r11*8-1]); dump();
mov (ecx, ptr[r11+r11*8-1000]); dump();
}
    void gen40(){
mov (ecx, ptr[r11+r12+0]); dump();
mov (ecx, ptr[r11+r12+1]); dump();
mov (ecx, ptr[r11+r12+1000]); dump();
mov (ecx, ptr[r11+r12-1]); dump();
mov (ecx, ptr[r11+r12-1000]); dump();
mov (ecx, ptr[r11+r12*1+0]); dump();
mov (ecx, ptr[r11+r12*1+1]); dump();
mov (ecx, ptr[r11+r12*1+1000]); dump();
mov (ecx, ptr[r11+r12*1-1]); dump();
mov (ecx, ptr[r11+r12*1-1000]); dump();
mov (ecx, ptr[r11+r12*2+0]); dump();
mov (ecx, ptr[r11+r12*2+1]); dump();
mov (ecx, ptr[r11+r12*2+1000]); dump();
mov (ecx, ptr[r11+r12*2-1]); dump();
mov (ecx, ptr[r11+r12*2-1000]); dump();
mov (ecx, ptr[r11+r12*4+0]); dump();
mov (ecx, ptr[r11+r12*4+1]); dump();
mov (ecx, ptr[r11+r12*4+1000]); dump();
mov (ecx, ptr[r11+r12*4-1]); dump();
mov (ecx, ptr[r11+r12*4-1000]); dump();
mov (ecx, ptr[r11+r12*8+0]); dump();
mov (ecx, ptr[r11+r12*8+1]); dump();
mov (ecx, ptr[r11+r12*8+1000]); dump();
mov (ecx, ptr[r11+r12*8-1]); dump();
mov (ecx, ptr[r11+r12*8-1000]); dump();
mov (ecx, ptr[r11+r13+0]); dump();
mov (ecx, ptr[r11+r13+1]); dump();
mov (ecx, ptr[r11+r13+1000]); dump();
mov (ecx, ptr[r11+r13-1]); dump();
mov (ecx, ptr[r11+r13-1000]); dump();
mov (ecx, ptr[r11+r13*1+0]); dump();
mov (ecx, ptr[r11+r13*1+1]); dump();
mov (ecx, ptr[r11+r13*1+1000]); dump();
mov (ecx, ptr[r11+r13*1-1]); dump();
mov (ecx, ptr[r11+r13*1-1000]); dump();
mov (ecx, ptr[r11+r13*2+0]); dump();
mov (ecx, ptr[r11+r13*2+1]); dump();
mov (ecx, ptr[r11+r13*2+1000]); dump();
mov (ecx, ptr[r11+r13*2-1]); dump();
mov (ecx, ptr[r11+r13*2-1000]); dump();
mov (ecx, ptr[r11+r13*4+0]); dump();
mov (ecx, ptr[r11+r13*4+1]); dump();
mov (ecx, ptr[r11+r13*4+1000]); dump();
mov (ecx, ptr[r11+r13*4-1]); dump();
mov (ecx, ptr[r11+r13*4-1000]); dump();
mov (ecx, ptr[r11+r13*8+0]); dump();
mov (ecx, ptr[r11+r13*8+1]); dump();
mov (ecx, ptr[r11+r13*8+1000]); dump();
mov (ecx, ptr[r11+r13*8-1]); dump();
mov (ecx, ptr[r11+r13*8-1000]); dump();
mov (ecx, ptr[r11+r14+0]); dump();
mov (ecx, ptr[r11+r14+1]); dump();
mov (ecx, ptr[r11+r14+1000]); dump();
mov (ecx, ptr[r11+r14-1]); dump();
mov (ecx, ptr[r11+r14-1000]); dump();
mov (ecx, ptr[r11+r14*1+0]); dump();
mov (ecx, ptr[r11+r14*1+1]); dump();
mov (ecx, ptr[r11+r14*1+1000]); dump();
mov (ecx, ptr[r11+r14*1-1]); dump();
mov (ecx, ptr[r11+r14*1-1000]); dump();
mov (ecx, ptr[r11+r14*2+0]); dump();
mov (ecx, ptr[r11+r14*2+1]); dump();
mov (ecx, ptr[r11+r14*2+1000]); dump();
mov (ecx, ptr[r11+r14*2-1]); dump();
mov (ecx, ptr[r11+r14*2-1000]); dump();
mov (ecx, ptr[r11+r14*4+0]); dump();
mov (ecx, ptr[r11+r14*4+1]); dump();
mov (ecx, ptr[r11+r14*4+1000]); dump();
mov (ecx, ptr[r11+r14*4-1]); dump();
mov (ecx, ptr[r11+r14*4-1000]); dump();
mov (ecx, ptr[r11+r14*8+0]); dump();
mov (ecx, ptr[r11+r14*8+1]); dump();
mov (ecx, ptr[r11+r14*8+1000]); dump();
mov (ecx, ptr[r11+r14*8-1]); dump();
mov (ecx, ptr[r11+r14*8-1000]); dump();
mov (ecx, ptr[r11+r15+0]); dump();
mov (ecx, ptr[r11+r15+1]); dump();
mov (ecx, ptr[r11+r15+1000]); dump();
mov (ecx, ptr[r11+r15-1]); dump();
mov (ecx, ptr[r11+r15-1000]); dump();
mov (ecx, ptr[r11+r15*1+0]); dump();
mov (ecx, ptr[r11+r15*1+1]); dump();
mov (ecx, ptr[r11+r15*1+1000]); dump();
mov (ecx, ptr[r11+r15*1-1]); dump();
mov (ecx, ptr[r11+r15*1-1000]); dump();
mov (ecx, ptr[r11+r15*2+0]); dump();
mov (ecx, ptr[r11+r15*2+1]); dump();
mov (ecx, ptr[r11+r15*2+1000]); dump();
mov (ecx, ptr[r11+r15*2-1]); dump();
mov (ecx, ptr[r11+r15*2-1000]); dump();
mov (ecx, ptr[r11+r15*4+0]); dump();
mov (ecx, ptr[r11+r15*4+1]); dump();
mov (ecx, ptr[r11+r15*4+1000]); dump();
mov (ecx, ptr[r11+r15*4-1]); dump();
mov (ecx, ptr[r11+r15*4-1000]); dump();
mov (ecx, ptr[r11+r15*8+0]); dump();
mov (ecx, ptr[r11+r15*8+1]); dump();
mov (ecx, ptr[r11+r15*8+1000]); dump();
mov (ecx, ptr[r11+r15*8-1]); dump();
mov (ecx, ptr[r11+r15*8-1000]); dump();
}
    void gen41(){
mov (ecx, ptr[r11+0]); dump();
mov (ecx, ptr[r11+1]); dump();
mov (ecx, ptr[r11+1000]); dump();
mov (ecx, ptr[r11-1]); dump();
mov (ecx, ptr[r11-1000]); dump();
mov (ecx, ptr[r11+0]); dump();
mov (ecx, ptr[r11+1]); dump();
mov (ecx, ptr[r11+1000]); dump();
mov (ecx, ptr[r11-1]); dump();
mov (ecx, ptr[r11-1000]); dump();
mov (ecx, ptr[r11+0]); dump();
mov (ecx, ptr[r11+1]); dump();
mov (ecx, ptr[r11+1000]); dump();
mov (ecx, ptr[r11-1]); dump();
mov (ecx, ptr[r11-1000]); dump();
mov (ecx, ptr[r11+0]); dump();
mov (ecx, ptr[r11+1]); dump();
mov (ecx, ptr[r11+1000]); dump();
mov (ecx, ptr[r11-1]); dump();
mov (ecx, ptr[r11-1000]); dump();
mov (ecx, ptr[r11+0]); dump();
mov (ecx, ptr[r11+1]); dump();
mov (ecx, ptr[r11+1000]); dump();
mov (ecx, ptr[r11-1]); dump();
mov (ecx, ptr[r11-1000]); dump();
mov (ecx, ptr[r12+rax+0]); dump();
mov (ecx, ptr[r12+rax+1]); dump();
mov (ecx, ptr[r12+rax+1000]); dump();
mov (ecx, ptr[r12+rax-1]); dump();
mov (ecx, ptr[r12+rax-1000]); dump();
mov (ecx, ptr[r12+rax*1+0]); dump();
mov (ecx, ptr[r12+rax*1+1]); dump();
mov (ecx, ptr[r12+rax*1+1000]); dump();
mov (ecx, ptr[r12+rax*1-1]); dump();
mov (ecx, ptr[r12+rax*1-1000]); dump();
mov (ecx, ptr[r12+rax*2+0]); dump();
mov (ecx, ptr[r12+rax*2+1]); dump();
mov (ecx, ptr[r12+rax*2+1000]); dump();
mov (ecx, ptr[r12+rax*2-1]); dump();
mov (ecx, ptr[r12+rax*2-1000]); dump();
mov (ecx, ptr[r12+rax*4+0]); dump();
mov (ecx, ptr[r12+rax*4+1]); dump();
mov (ecx, ptr[r12+rax*4+1000]); dump();
mov (ecx, ptr[r12+rax*4-1]); dump();
mov (ecx, ptr[r12+rax*4-1000]); dump();
mov (ecx, ptr[r12+rax*8+0]); dump();
mov (ecx, ptr[r12+rax*8+1]); dump();
mov (ecx, ptr[r12+rax*8+1000]); dump();
mov (ecx, ptr[r12+rax*8-1]); dump();
mov (ecx, ptr[r12+rax*8-1000]); dump();
mov (ecx, ptr[r12+rcx+0]); dump();
mov (ecx, ptr[r12+rcx+1]); dump();
mov (ecx, ptr[r12+rcx+1000]); dump();
mov (ecx, ptr[r12+rcx-1]); dump();
mov (ecx, ptr[r12+rcx-1000]); dump();
mov (ecx, ptr[r12+rcx*1+0]); dump();
mov (ecx, ptr[r12+rcx*1+1]); dump();
mov (ecx, ptr[r12+rcx*1+1000]); dump();
mov (ecx, ptr[r12+rcx*1-1]); dump();
mov (ecx, ptr[r12+rcx*1-1000]); dump();
mov (ecx, ptr[r12+rcx*2+0]); dump();
mov (ecx, ptr[r12+rcx*2+1]); dump();
mov (ecx, ptr[r12+rcx*2+1000]); dump();
mov (ecx, ptr[r12+rcx*2-1]); dump();
mov (ecx, ptr[r12+rcx*2-1000]); dump();
mov (ecx, ptr[r12+rcx*4+0]); dump();
mov (ecx, ptr[r12+rcx*4+1]); dump();
mov (ecx, ptr[r12+rcx*4+1000]); dump();
mov (ecx, ptr[r12+rcx*4-1]); dump();
mov (ecx, ptr[r12+rcx*4-1000]); dump();
mov (ecx, ptr[r12+rcx*8+0]); dump();
mov (ecx, ptr[r12+rcx*8+1]); dump();
mov (ecx, ptr[r12+rcx*8+1000]); dump();
mov (ecx, ptr[r12+rcx*8-1]); dump();
mov (ecx, ptr[r12+rcx*8-1000]); dump();
mov (ecx, ptr[r12+rdx+0]); dump();
mov (ecx, ptr[r12+rdx+1]); dump();
mov (ecx, ptr[r12+rdx+1000]); dump();
mov (ecx, ptr[r12+rdx-1]); dump();
mov (ecx, ptr[r12+rdx-1000]); dump();
mov (ecx, ptr[r12+rdx*1+0]); dump();
mov (ecx, ptr[r12+rdx*1+1]); dump();
mov (ecx, ptr[r12+rdx*1+1000]); dump();
mov (ecx, ptr[r12+rdx*1-1]); dump();
mov (ecx, ptr[r12+rdx*1-1000]); dump();
mov (ecx, ptr[r12+rdx*2+0]); dump();
mov (ecx, ptr[r12+rdx*2+1]); dump();
mov (ecx, ptr[r12+rdx*2+1000]); dump();
mov (ecx, ptr[r12+rdx*2-1]); dump();
mov (ecx, ptr[r12+rdx*2-1000]); dump();
mov (ecx, ptr[r12+rdx*4+0]); dump();
mov (ecx, ptr[r12+rdx*4+1]); dump();
mov (ecx, ptr[r12+rdx*4+1000]); dump();
mov (ecx, ptr[r12+rdx*4-1]); dump();
mov (ecx, ptr[r12+rdx*4-1000]); dump();
mov (ecx, ptr[r12+rdx*8+0]); dump();
mov (ecx, ptr[r12+rdx*8+1]); dump();
mov (ecx, ptr[r12+rdx*8+1000]); dump();
mov (ecx, ptr[r12+rdx*8-1]); dump();
mov (ecx, ptr[r12+rdx*8-1000]); dump();
}
    void gen42(){
mov (ecx, ptr[r12+rbx+0]); dump();
mov (ecx, ptr[r12+rbx+1]); dump();
mov (ecx, ptr[r12+rbx+1000]); dump();
mov (ecx, ptr[r12+rbx-1]); dump();
mov (ecx, ptr[r12+rbx-1000]); dump();
mov (ecx, ptr[r12+rbx*1+0]); dump();
mov (ecx, ptr[r12+rbx*1+1]); dump();
mov (ecx, ptr[r12+rbx*1+1000]); dump();
mov (ecx, ptr[r12+rbx*1-1]); dump();
mov (ecx, ptr[r12+rbx*1-1000]); dump();
mov (ecx, ptr[r12+rbx*2+0]); dump();
mov (ecx, ptr[r12+rbx*2+1]); dump();
mov (ecx, ptr[r12+rbx*2+1000]); dump();
mov (ecx, ptr[r12+rbx*2-1]); dump();
mov (ecx, ptr[r12+rbx*2-1000]); dump();
mov (ecx, ptr[r12+rbx*4+0]); dump();
mov (ecx, ptr[r12+rbx*4+1]); dump();
mov (ecx, ptr[r12+rbx*4+1000]); dump();
mov (ecx, ptr[r12+rbx*4-1]); dump();
mov (ecx, ptr[r12+rbx*4-1000]); dump();
mov (ecx, ptr[r12+rbx*8+0]); dump();
mov (ecx, ptr[r12+rbx*8+1]); dump();
mov (ecx, ptr[r12+rbx*8+1000]); dump();
mov (ecx, ptr[r12+rbx*8-1]); dump();
mov (ecx, ptr[r12+rbx*8-1000]); dump();
mov (ecx, ptr[r12+rbp+0]); dump();
mov (ecx, ptr[r12+rbp+1]); dump();
mov (ecx, ptr[r12+rbp+1000]); dump();
mov (ecx, ptr[r12+rbp-1]); dump();
mov (ecx, ptr[r12+rbp-1000]); dump();
mov (ecx, ptr[r12+rbp*1+0]); dump();
mov (ecx, ptr[r12+rbp*1+1]); dump();
mov (ecx, ptr[r12+rbp*1+1000]); dump();
mov (ecx, ptr[r12+rbp*1-1]); dump();
mov (ecx, ptr[r12+rbp*1-1000]); dump();
mov (ecx, ptr[r12+rbp*2+0]); dump();
mov (ecx, ptr[r12+rbp*2+1]); dump();
mov (ecx, ptr[r12+rbp*2+1000]); dump();
mov (ecx, ptr[r12+rbp*2-1]); dump();
mov (ecx, ptr[r12+rbp*2-1000]); dump();
mov (ecx, ptr[r12+rbp*4+0]); dump();
mov (ecx, ptr[r12+rbp*4+1]); dump();
mov (ecx, ptr[r12+rbp*4+1000]); dump();
mov (ecx, ptr[r12+rbp*4-1]); dump();
mov (ecx, ptr[r12+rbp*4-1000]); dump();
mov (ecx, ptr[r12+rbp*8+0]); dump();
mov (ecx, ptr[r12+rbp*8+1]); dump();
mov (ecx, ptr[r12+rbp*8+1000]); dump();
mov (ecx, ptr[r12+rbp*8-1]); dump();
mov (ecx, ptr[r12+rbp*8-1000]); dump();
mov (ecx, ptr[r12+rsi+0]); dump();
mov (ecx, ptr[r12+rsi+1]); dump();
mov (ecx, ptr[r12+rsi+1000]); dump();
mov (ecx, ptr[r12+rsi-1]); dump();
mov (ecx, ptr[r12+rsi-1000]); dump();
mov (ecx, ptr[r12+rsi*1+0]); dump();
mov (ecx, ptr[r12+rsi*1+1]); dump();
mov (ecx, ptr[r12+rsi*1+1000]); dump();
mov (ecx, ptr[r12+rsi*1-1]); dump();
mov (ecx, ptr[r12+rsi*1-1000]); dump();
mov (ecx, ptr[r12+rsi*2+0]); dump();
mov (ecx, ptr[r12+rsi*2+1]); dump();
mov (ecx, ptr[r12+rsi*2+1000]); dump();
mov (ecx, ptr[r12+rsi*2-1]); dump();
mov (ecx, ptr[r12+rsi*2-1000]); dump();
mov (ecx, ptr[r12+rsi*4+0]); dump();
mov (ecx, ptr[r12+rsi*4+1]); dump();
mov (ecx, ptr[r12+rsi*4+1000]); dump();
mov (ecx, ptr[r12+rsi*4-1]); dump();
mov (ecx, ptr[r12+rsi*4-1000]); dump();
mov (ecx, ptr[r12+rsi*8+0]); dump();
mov (ecx, ptr[r12+rsi*8+1]); dump();
mov (ecx, ptr[r12+rsi*8+1000]); dump();
mov (ecx, ptr[r12+rsi*8-1]); dump();
mov (ecx, ptr[r12+rsi*8-1000]); dump();
mov (ecx, ptr[r12+rdi+0]); dump();
mov (ecx, ptr[r12+rdi+1]); dump();
mov (ecx, ptr[r12+rdi+1000]); dump();
mov (ecx, ptr[r12+rdi-1]); dump();
mov (ecx, ptr[r12+rdi-1000]); dump();
mov (ecx, ptr[r12+rdi*1+0]); dump();
mov (ecx, ptr[r12+rdi*1+1]); dump();
mov (ecx, ptr[r12+rdi*1+1000]); dump();
mov (ecx, ptr[r12+rdi*1-1]); dump();
mov (ecx, ptr[r12+rdi*1-1000]); dump();
mov (ecx, ptr[r12+rdi*2+0]); dump();
mov (ecx, ptr[r12+rdi*2+1]); dump();
mov (ecx, ptr[r12+rdi*2+1000]); dump();
mov (ecx, ptr[r12+rdi*2-1]); dump();
mov (ecx, ptr[r12+rdi*2-1000]); dump();
mov (ecx, ptr[r12+rdi*4+0]); dump();
mov (ecx, ptr[r12+rdi*4+1]); dump();
mov (ecx, ptr[r12+rdi*4+1000]); dump();
mov (ecx, ptr[r12+rdi*4-1]); dump();
mov (ecx, ptr[r12+rdi*4-1000]); dump();
mov (ecx, ptr[r12+rdi*8+0]); dump();
mov (ecx, ptr[r12+rdi*8+1]); dump();
mov (ecx, ptr[r12+rdi*8+1000]); dump();
mov (ecx, ptr[r12+rdi*8-1]); dump();
mov (ecx, ptr[r12+rdi*8-1000]); dump();
}
    void gen43(){
mov (ecx, ptr[r12+r9+0]); dump();
mov (ecx, ptr[r12+r9+1]); dump();
mov (ecx, ptr[r12+r9+1000]); dump();
mov (ecx, ptr[r12+r9-1]); dump();
mov (ecx, ptr[r12+r9-1000]); dump();
mov (ecx, ptr[r12+r9*1+0]); dump();
mov (ecx, ptr[r12+r9*1+1]); dump();
mov (ecx, ptr[r12+r9*1+1000]); dump();
mov (ecx, ptr[r12+r9*1-1]); dump();
mov (ecx, ptr[r12+r9*1-1000]); dump();
mov (ecx, ptr[r12+r9*2+0]); dump();
mov (ecx, ptr[r12+r9*2+1]); dump();
mov (ecx, ptr[r12+r9*2+1000]); dump();
mov (ecx, ptr[r12+r9*2-1]); dump();
mov (ecx, ptr[r12+r9*2-1000]); dump();
mov (ecx, ptr[r12+r9*4+0]); dump();
mov (ecx, ptr[r12+r9*4+1]); dump();
mov (ecx, ptr[r12+r9*4+1000]); dump();
mov (ecx, ptr[r12+r9*4-1]); dump();
mov (ecx, ptr[r12+r9*4-1000]); dump();
mov (ecx, ptr[r12+r9*8+0]); dump();
mov (ecx, ptr[r12+r9*8+1]); dump();
mov (ecx, ptr[r12+r9*8+1000]); dump();
mov (ecx, ptr[r12+r9*8-1]); dump();
mov (ecx, ptr[r12+r9*8-1000]); dump();
mov (ecx, ptr[r12+r10+0]); dump();
mov (ecx, ptr[r12+r10+1]); dump();
mov (ecx, ptr[r12+r10+1000]); dump();
mov (ecx, ptr[r12+r10-1]); dump();
mov (ecx, ptr[r12+r10-1000]); dump();
mov (ecx, ptr[r12+r10*1+0]); dump();
mov (ecx, ptr[r12+r10*1+1]); dump();
mov (ecx, ptr[r12+r10*1+1000]); dump();
mov (ecx, ptr[r12+r10*1-1]); dump();
mov (ecx, ptr[r12+r10*1-1000]); dump();
mov (ecx, ptr[r12+r10*2+0]); dump();
mov (ecx, ptr[r12+r10*2+1]); dump();
mov (ecx, ptr[r12+r10*2+1000]); dump();
mov (ecx, ptr[r12+r10*2-1]); dump();
mov (ecx, ptr[r12+r10*2-1000]); dump();
mov (ecx, ptr[r12+r10*4+0]); dump();
mov (ecx, ptr[r12+r10*4+1]); dump();
mov (ecx, ptr[r12+r10*4+1000]); dump();
mov (ecx, ptr[r12+r10*4-1]); dump();
mov (ecx, ptr[r12+r10*4-1000]); dump();
mov (ecx, ptr[r12+r10*8+0]); dump();
mov (ecx, ptr[r12+r10*8+1]); dump();
mov (ecx, ptr[r12+r10*8+1000]); dump();
mov (ecx, ptr[r12+r10*8-1]); dump();
mov (ecx, ptr[r12+r10*8-1000]); dump();
mov (ecx, ptr[r12+r11+0]); dump();
mov (ecx, ptr[r12+r11+1]); dump();
mov (ecx, ptr[r12+r11+1000]); dump();
mov (ecx, ptr[r12+r11-1]); dump();
mov (ecx, ptr[r12+r11-1000]); dump();
mov (ecx, ptr[r12+r11*1+0]); dump();
mov (ecx, ptr[r12+r11*1+1]); dump();
mov (ecx, ptr[r12+r11*1+1000]); dump();
mov (ecx, ptr[r12+r11*1-1]); dump();
mov (ecx, ptr[r12+r11*1-1000]); dump();
mov (ecx, ptr[r12+r11*2+0]); dump();
mov (ecx, ptr[r12+r11*2+1]); dump();
mov (ecx, ptr[r12+r11*2+1000]); dump();
mov (ecx, ptr[r12+r11*2-1]); dump();
mov (ecx, ptr[r12+r11*2-1000]); dump();
mov (ecx, ptr[r12+r11*4+0]); dump();
mov (ecx, ptr[r12+r11*4+1]); dump();
mov (ecx, ptr[r12+r11*4+1000]); dump();
mov (ecx, ptr[r12+r11*4-1]); dump();
mov (ecx, ptr[r12+r11*4-1000]); dump();
mov (ecx, ptr[r12+r11*8+0]); dump();
mov (ecx, ptr[r12+r11*8+1]); dump();
mov (ecx, ptr[r12+r11*8+1000]); dump();
mov (ecx, ptr[r12+r11*8-1]); dump();
mov (ecx, ptr[r12+r11*8-1000]); dump();
mov (ecx, ptr[r12+r12+0]); dump();
mov (ecx, ptr[r12+r12+1]); dump();
mov (ecx, ptr[r12+r12+1000]); dump();
mov (ecx, ptr[r12+r12-1]); dump();
mov (ecx, ptr[r12+r12-1000]); dump();
mov (ecx, ptr[r12+r12*1+0]); dump();
mov (ecx, ptr[r12+r12*1+1]); dump();
mov (ecx, ptr[r12+r12*1+1000]); dump();
mov (ecx, ptr[r12+r12*1-1]); dump();
mov (ecx, ptr[r12+r12*1-1000]); dump();
mov (ecx, ptr[r12+r12*2+0]); dump();
mov (ecx, ptr[r12+r12*2+1]); dump();
mov (ecx, ptr[r12+r12*2+1000]); dump();
mov (ecx, ptr[r12+r12*2-1]); dump();
mov (ecx, ptr[r12+r12*2-1000]); dump();
mov (ecx, ptr[r12+r12*4+0]); dump();
mov (ecx, ptr[r12+r12*4+1]); dump();
mov (ecx, ptr[r12+r12*4+1000]); dump();
mov (ecx, ptr[r12+r12*4-1]); dump();
mov (ecx, ptr[r12+r12*4-1000]); dump();
mov (ecx, ptr[r12+r12*8+0]); dump();
mov (ecx, ptr[r12+r12*8+1]); dump();
mov (ecx, ptr[r12+r12*8+1000]); dump();
mov (ecx, ptr[r12+r12*8-1]); dump();
mov (ecx, ptr[r12+r12*8-1000]); dump();
}
    void gen44(){
mov (ecx, ptr[r12+r13+0]); dump();
mov (ecx, ptr[r12+r13+1]); dump();
mov (ecx, ptr[r12+r13+1000]); dump();
mov (ecx, ptr[r12+r13-1]); dump();
mov (ecx, ptr[r12+r13-1000]); dump();
mov (ecx, ptr[r12+r13*1+0]); dump();
mov (ecx, ptr[r12+r13*1+1]); dump();
mov (ecx, ptr[r12+r13*1+1000]); dump();
mov (ecx, ptr[r12+r13*1-1]); dump();
mov (ecx, ptr[r12+r13*1-1000]); dump();
mov (ecx, ptr[r12+r13*2+0]); dump();
mov (ecx, ptr[r12+r13*2+1]); dump();
mov (ecx, ptr[r12+r13*2+1000]); dump();
mov (ecx, ptr[r12+r13*2-1]); dump();
mov (ecx, ptr[r12+r13*2-1000]); dump();
mov (ecx, ptr[r12+r13*4+0]); dump();
mov (ecx, ptr[r12+r13*4+1]); dump();
mov (ecx, ptr[r12+r13*4+1000]); dump();
mov (ecx, ptr[r12+r13*4-1]); dump();
mov (ecx, ptr[r12+r13*4-1000]); dump();
mov (ecx, ptr[r12+r13*8+0]); dump();
mov (ecx, ptr[r12+r13*8+1]); dump();
mov (ecx, ptr[r12+r13*8+1000]); dump();
mov (ecx, ptr[r12+r13*8-1]); dump();
mov (ecx, ptr[r12+r13*8-1000]); dump();
mov (ecx, ptr[r12+r14+0]); dump();
mov (ecx, ptr[r12+r14+1]); dump();
mov (ecx, ptr[r12+r14+1000]); dump();
mov (ecx, ptr[r12+r14-1]); dump();
mov (ecx, ptr[r12+r14-1000]); dump();
mov (ecx, ptr[r12+r14*1+0]); dump();
mov (ecx, ptr[r12+r14*1+1]); dump();
mov (ecx, ptr[r12+r14*1+1000]); dump();
mov (ecx, ptr[r12+r14*1-1]); dump();
mov (ecx, ptr[r12+r14*1-1000]); dump();
mov (ecx, ptr[r12+r14*2+0]); dump();
mov (ecx, ptr[r12+r14*2+1]); dump();
mov (ecx, ptr[r12+r14*2+1000]); dump();
mov (ecx, ptr[r12+r14*2-1]); dump();
mov (ecx, ptr[r12+r14*2-1000]); dump();
mov (ecx, ptr[r12+r14*4+0]); dump();
mov (ecx, ptr[r12+r14*4+1]); dump();
mov (ecx, ptr[r12+r14*4+1000]); dump();
mov (ecx, ptr[r12+r14*4-1]); dump();
mov (ecx, ptr[r12+r14*4-1000]); dump();
mov (ecx, ptr[r12+r14*8+0]); dump();
mov (ecx, ptr[r12+r14*8+1]); dump();
mov (ecx, ptr[r12+r14*8+1000]); dump();
mov (ecx, ptr[r12+r14*8-1]); dump();
mov (ecx, ptr[r12+r14*8-1000]); dump();
mov (ecx, ptr[r12+r15+0]); dump();
mov (ecx, ptr[r12+r15+1]); dump();
mov (ecx, ptr[r12+r15+1000]); dump();
mov (ecx, ptr[r12+r15-1]); dump();
mov (ecx, ptr[r12+r15-1000]); dump();
mov (ecx, ptr[r12+r15*1+0]); dump();
mov (ecx, ptr[r12+r15*1+1]); dump();
mov (ecx, ptr[r12+r15*1+1000]); dump();
mov (ecx, ptr[r12+r15*1-1]); dump();
mov (ecx, ptr[r12+r15*1-1000]); dump();
mov (ecx, ptr[r12+r15*2+0]); dump();
mov (ecx, ptr[r12+r15*2+1]); dump();
mov (ecx, ptr[r12+r15*2+1000]); dump();
mov (ecx, ptr[r12+r15*2-1]); dump();
mov (ecx, ptr[r12+r15*2-1000]); dump();
mov (ecx, ptr[r12+r15*4+0]); dump();
mov (ecx, ptr[r12+r15*4+1]); dump();
mov (ecx, ptr[r12+r15*4+1000]); dump();
mov (ecx, ptr[r12+r15*4-1]); dump();
mov (ecx, ptr[r12+r15*4-1000]); dump();
mov (ecx, ptr[r12+r15*8+0]); dump();
mov (ecx, ptr[r12+r15*8+1]); dump();
mov (ecx, ptr[r12+r15*8+1000]); dump();
mov (ecx, ptr[r12+r15*8-1]); dump();
mov (ecx, ptr[r12+r15*8-1000]); dump();
mov (ecx, ptr[r12+0]); dump();
mov (ecx, ptr[r12+1]); dump();
mov (ecx, ptr[r12+1000]); dump();
mov (ecx, ptr[r12-1]); dump();
mov (ecx, ptr[r12-1000]); dump();
mov (ecx, ptr[r12+0]); dump();
mov (ecx, ptr[r12+1]); dump();
mov (ecx, ptr[r12+1000]); dump();
mov (ecx, ptr[r12-1]); dump();
mov (ecx, ptr[r12-1000]); dump();
mov (ecx, ptr[r12+0]); dump();
mov (ecx, ptr[r12+1]); dump();
mov (ecx, ptr[r12+1000]); dump();
mov (ecx, ptr[r12-1]); dump();
mov (ecx, ptr[r12-1000]); dump();
mov (ecx, ptr[r12+0]); dump();
mov (ecx, ptr[r12+1]); dump();
mov (ecx, ptr[r12+1000]); dump();
mov (ecx, ptr[r12-1]); dump();
mov (ecx, ptr[r12-1000]); dump();
mov (ecx, ptr[r12+0]); dump();
mov (ecx, ptr[r12+1]); dump();
mov (ecx, ptr[r12+1000]); dump();
mov (ecx, ptr[r12-1]); dump();
mov (ecx, ptr[r12-1000]); dump();
}
    void gen45(){
mov (ecx, ptr[r13+rax+0]); dump();
mov (ecx, ptr[r13+rax+1]); dump();
mov (ecx, ptr[r13+rax+1000]); dump();
mov (ecx, ptr[r13+rax-1]); dump();
mov (ecx, ptr[r13+rax-1000]); dump();
mov (ecx, ptr[r13+rax*1+0]); dump();
mov (ecx, ptr[r13+rax*1+1]); dump();
mov (ecx, ptr[r13+rax*1+1000]); dump();
mov (ecx, ptr[r13+rax*1-1]); dump();
mov (ecx, ptr[r13+rax*1-1000]); dump();
mov (ecx, ptr[r13+rax*2+0]); dump();
mov (ecx, ptr[r13+rax*2+1]); dump();
mov (ecx, ptr[r13+rax*2+1000]); dump();
mov (ecx, ptr[r13+rax*2-1]); dump();
mov (ecx, ptr[r13+rax*2-1000]); dump();
mov (ecx, ptr[r13+rax*4+0]); dump();
mov (ecx, ptr[r13+rax*4+1]); dump();
mov (ecx, ptr[r13+rax*4+1000]); dump();
mov (ecx, ptr[r13+rax*4-1]); dump();
mov (ecx, ptr[r13+rax*4-1000]); dump();
mov (ecx, ptr[r13+rax*8+0]); dump();
mov (ecx, ptr[r13+rax*8+1]); dump();
mov (ecx, ptr[r13+rax*8+1000]); dump();
mov (ecx, ptr[r13+rax*8-1]); dump();
mov (ecx, ptr[r13+rax*8-1000]); dump();
mov (ecx, ptr[r13+rcx+0]); dump();
mov (ecx, ptr[r13+rcx+1]); dump();
mov (ecx, ptr[r13+rcx+1000]); dump();
mov (ecx, ptr[r13+rcx-1]); dump();
mov (ecx, ptr[r13+rcx-1000]); dump();
mov (ecx, ptr[r13+rcx*1+0]); dump();
mov (ecx, ptr[r13+rcx*1+1]); dump();
mov (ecx, ptr[r13+rcx*1+1000]); dump();
mov (ecx, ptr[r13+rcx*1-1]); dump();
mov (ecx, ptr[r13+rcx*1-1000]); dump();
mov (ecx, ptr[r13+rcx*2+0]); dump();
mov (ecx, ptr[r13+rcx*2+1]); dump();
mov (ecx, ptr[r13+rcx*2+1000]); dump();
mov (ecx, ptr[r13+rcx*2-1]); dump();
mov (ecx, ptr[r13+rcx*2-1000]); dump();
mov (ecx, ptr[r13+rcx*4+0]); dump();
mov (ecx, ptr[r13+rcx*4+1]); dump();
mov (ecx, ptr[r13+rcx*4+1000]); dump();
mov (ecx, ptr[r13+rcx*4-1]); dump();
mov (ecx, ptr[r13+rcx*4-1000]); dump();
mov (ecx, ptr[r13+rcx*8+0]); dump();
mov (ecx, ptr[r13+rcx*8+1]); dump();
mov (ecx, ptr[r13+rcx*8+1000]); dump();
mov (ecx, ptr[r13+rcx*8-1]); dump();
mov (ecx, ptr[r13+rcx*8-1000]); dump();
mov (ecx, ptr[r13+rdx+0]); dump();
mov (ecx, ptr[r13+rdx+1]); dump();
mov (ecx, ptr[r13+rdx+1000]); dump();
mov (ecx, ptr[r13+rdx-1]); dump();
mov (ecx, ptr[r13+rdx-1000]); dump();
mov (ecx, ptr[r13+rdx*1+0]); dump();
mov (ecx, ptr[r13+rdx*1+1]); dump();
mov (ecx, ptr[r13+rdx*1+1000]); dump();
mov (ecx, ptr[r13+rdx*1-1]); dump();
mov (ecx, ptr[r13+rdx*1-1000]); dump();
mov (ecx, ptr[r13+rdx*2+0]); dump();
mov (ecx, ptr[r13+rdx*2+1]); dump();
mov (ecx, ptr[r13+rdx*2+1000]); dump();
mov (ecx, ptr[r13+rdx*2-1]); dump();
mov (ecx, ptr[r13+rdx*2-1000]); dump();
mov (ecx, ptr[r13+rdx*4+0]); dump();
mov (ecx, ptr[r13+rdx*4+1]); dump();
mov (ecx, ptr[r13+rdx*4+1000]); dump();
mov (ecx, ptr[r13+rdx*4-1]); dump();
mov (ecx, ptr[r13+rdx*4-1000]); dump();
mov (ecx, ptr[r13+rdx*8+0]); dump();
mov (ecx, ptr[r13+rdx*8+1]); dump();
mov (ecx, ptr[r13+rdx*8+1000]); dump();
mov (ecx, ptr[r13+rdx*8-1]); dump();
mov (ecx, ptr[r13+rdx*8-1000]); dump();
mov (ecx, ptr[r13+rbx+0]); dump();
mov (ecx, ptr[r13+rbx+1]); dump();
mov (ecx, ptr[r13+rbx+1000]); dump();
mov (ecx, ptr[r13+rbx-1]); dump();
mov (ecx, ptr[r13+rbx-1000]); dump();
mov (ecx, ptr[r13+rbx*1+0]); dump();
mov (ecx, ptr[r13+rbx*1+1]); dump();
mov (ecx, ptr[r13+rbx*1+1000]); dump();
mov (ecx, ptr[r13+rbx*1-1]); dump();
mov (ecx, ptr[r13+rbx*1-1000]); dump();
mov (ecx, ptr[r13+rbx*2+0]); dump();
mov (ecx, ptr[r13+rbx*2+1]); dump();
mov (ecx, ptr[r13+rbx*2+1000]); dump();
mov (ecx, ptr[r13+rbx*2-1]); dump();
mov (ecx, ptr[r13+rbx*2-1000]); dump();
mov (ecx, ptr[r13+rbx*4+0]); dump();
mov (ecx, ptr[r13+rbx*4+1]); dump();
mov (ecx, ptr[r13+rbx*4+1000]); dump();
mov (ecx, ptr[r13+rbx*4-1]); dump();
mov (ecx, ptr[r13+rbx*4-1000]); dump();
mov (ecx, ptr[r13+rbx*8+0]); dump();
mov (ecx, ptr[r13+rbx*8+1]); dump();
mov (ecx, ptr[r13+rbx*8+1000]); dump();
mov (ecx, ptr[r13+rbx*8-1]); dump();
mov (ecx, ptr[r13+rbx*8-1000]); dump();
}
    void gen46(){
mov (ecx, ptr[r13+rbp+0]); dump();
mov (ecx, ptr[r13+rbp+1]); dump();
mov (ecx, ptr[r13+rbp+1000]); dump();
mov (ecx, ptr[r13+rbp-1]); dump();
mov (ecx, ptr[r13+rbp-1000]); dump();
mov (ecx, ptr[r13+rbp*1+0]); dump();
mov (ecx, ptr[r13+rbp*1+1]); dump();
mov (ecx, ptr[r13+rbp*1+1000]); dump();
mov (ecx, ptr[r13+rbp*1-1]); dump();
mov (ecx, ptr[r13+rbp*1-1000]); dump();
mov (ecx, ptr[r13+rbp*2+0]); dump();
mov (ecx, ptr[r13+rbp*2+1]); dump();
mov (ecx, ptr[r13+rbp*2+1000]); dump();
mov (ecx, ptr[r13+rbp*2-1]); dump();
mov (ecx, ptr[r13+rbp*2-1000]); dump();
mov (ecx, ptr[r13+rbp*4+0]); dump();
mov (ecx, ptr[r13+rbp*4+1]); dump();
mov (ecx, ptr[r13+rbp*4+1000]); dump();
mov (ecx, ptr[r13+rbp*4-1]); dump();
mov (ecx, ptr[r13+rbp*4-1000]); dump();
mov (ecx, ptr[r13+rbp*8+0]); dump();
mov (ecx, ptr[r13+rbp*8+1]); dump();
mov (ecx, ptr[r13+rbp*8+1000]); dump();
mov (ecx, ptr[r13+rbp*8-1]); dump();
mov (ecx, ptr[r13+rbp*8-1000]); dump();
mov (ecx, ptr[r13+rsi+0]); dump();
mov (ecx, ptr[r13+rsi+1]); dump();
mov (ecx, ptr[r13+rsi+1000]); dump();
mov (ecx, ptr[r13+rsi-1]); dump();
mov (ecx, ptr[r13+rsi-1000]); dump();
mov (ecx, ptr[r13+rsi*1+0]); dump();
mov (ecx, ptr[r13+rsi*1+1]); dump();
mov (ecx, ptr[r13+rsi*1+1000]); dump();
mov (ecx, ptr[r13+rsi*1-1]); dump();
mov (ecx, ptr[r13+rsi*1-1000]); dump();
mov (ecx, ptr[r13+rsi*2+0]); dump();
mov (ecx, ptr[r13+rsi*2+1]); dump();
mov (ecx, ptr[r13+rsi*2+1000]); dump();
mov (ecx, ptr[r13+rsi*2-1]); dump();
mov (ecx, ptr[r13+rsi*2-1000]); dump();
mov (ecx, ptr[r13+rsi*4+0]); dump();
mov (ecx, ptr[r13+rsi*4+1]); dump();
mov (ecx, ptr[r13+rsi*4+1000]); dump();
mov (ecx, ptr[r13+rsi*4-1]); dump();
mov (ecx, ptr[r13+rsi*4-1000]); dump();
mov (ecx, ptr[r13+rsi*8+0]); dump();
mov (ecx, ptr[r13+rsi*8+1]); dump();
mov (ecx, ptr[r13+rsi*8+1000]); dump();
mov (ecx, ptr[r13+rsi*8-1]); dump();
mov (ecx, ptr[r13+rsi*8-1000]); dump();
mov (ecx, ptr[r13+rdi+0]); dump();
mov (ecx, ptr[r13+rdi+1]); dump();
mov (ecx, ptr[r13+rdi+1000]); dump();
mov (ecx, ptr[r13+rdi-1]); dump();
mov (ecx, ptr[r13+rdi-1000]); dump();
mov (ecx, ptr[r13+rdi*1+0]); dump();
mov (ecx, ptr[r13+rdi*1+1]); dump();
mov (ecx, ptr[r13+rdi*1+1000]); dump();
mov (ecx, ptr[r13+rdi*1-1]); dump();
mov (ecx, ptr[r13+rdi*1-1000]); dump();
mov (ecx, ptr[r13+rdi*2+0]); dump();
mov (ecx, ptr[r13+rdi*2+1]); dump();
mov (ecx, ptr[r13+rdi*2+1000]); dump();
mov (ecx, ptr[r13+rdi*2-1]); dump();
mov (ecx, ptr[r13+rdi*2-1000]); dump();
mov (ecx, ptr[r13+rdi*4+0]); dump();
mov (ecx, ptr[r13+rdi*4+1]); dump();
mov (ecx, ptr[r13+rdi*4+1000]); dump();
mov (ecx, ptr[r13+rdi*4-1]); dump();
mov (ecx, ptr[r13+rdi*4-1000]); dump();
mov (ecx, ptr[r13+rdi*8+0]); dump();
mov (ecx, ptr[r13+rdi*8+1]); dump();
mov (ecx, ptr[r13+rdi*8+1000]); dump();
mov (ecx, ptr[r13+rdi*8-1]); dump();
mov (ecx, ptr[r13+rdi*8-1000]); dump();
mov (ecx, ptr[r13+r9+0]); dump();
mov (ecx, ptr[r13+r9+1]); dump();
mov (ecx, ptr[r13+r9+1000]); dump();
mov (ecx, ptr[r13+r9-1]); dump();
mov (ecx, ptr[r13+r9-1000]); dump();
mov (ecx, ptr[r13+r9*1+0]); dump();
mov (ecx, ptr[r13+r9*1+1]); dump();
mov (ecx, ptr[r13+r9*1+1000]); dump();
mov (ecx, ptr[r13+r9*1-1]); dump();
mov (ecx, ptr[r13+r9*1-1000]); dump();
mov (ecx, ptr[r13+r9*2+0]); dump();
mov (ecx, ptr[r13+r9*2+1]); dump();
mov (ecx, ptr[r13+r9*2+1000]); dump();
mov (ecx, ptr[r13+r9*2-1]); dump();
mov (ecx, ptr[r13+r9*2-1000]); dump();
mov (ecx, ptr[r13+r9*4+0]); dump();
mov (ecx, ptr[r13+r9*4+1]); dump();
mov (ecx, ptr[r13+r9*4+1000]); dump();
mov (ecx, ptr[r13+r9*4-1]); dump();
mov (ecx, ptr[r13+r9*4-1000]); dump();
mov (ecx, ptr[r13+r9*8+0]); dump();
mov (ecx, ptr[r13+r9*8+1]); dump();
mov (ecx, ptr[r13+r9*8+1000]); dump();
mov (ecx, ptr[r13+r9*8-1]); dump();
mov (ecx, ptr[r13+r9*8-1000]); dump();
}
    void gen47(){
mov (ecx, ptr[r13+r10+0]); dump();
mov (ecx, ptr[r13+r10+1]); dump();
mov (ecx, ptr[r13+r10+1000]); dump();
mov (ecx, ptr[r13+r10-1]); dump();
mov (ecx, ptr[r13+r10-1000]); dump();
mov (ecx, ptr[r13+r10*1+0]); dump();
mov (ecx, ptr[r13+r10*1+1]); dump();
mov (ecx, ptr[r13+r10*1+1000]); dump();
mov (ecx, ptr[r13+r10*1-1]); dump();
mov (ecx, ptr[r13+r10*1-1000]); dump();
mov (ecx, ptr[r13+r10*2+0]); dump();
mov (ecx, ptr[r13+r10*2+1]); dump();
mov (ecx, ptr[r13+r10*2+1000]); dump();
mov (ecx, ptr[r13+r10*2-1]); dump();
mov (ecx, ptr[r13+r10*2-1000]); dump();
mov (ecx, ptr[r13+r10*4+0]); dump();
mov (ecx, ptr[r13+r10*4+1]); dump();
mov (ecx, ptr[r13+r10*4+1000]); dump();
mov (ecx, ptr[r13+r10*4-1]); dump();
mov (ecx, ptr[r13+r10*4-1000]); dump();
mov (ecx, ptr[r13+r10*8+0]); dump();
mov (ecx, ptr[r13+r10*8+1]); dump();
mov (ecx, ptr[r13+r10*8+1000]); dump();
mov (ecx, ptr[r13+r10*8-1]); dump();
mov (ecx, ptr[r13+r10*8-1000]); dump();
mov (ecx, ptr[r13+r11+0]); dump();
mov (ecx, ptr[r13+r11+1]); dump();
mov (ecx, ptr[r13+r11+1000]); dump();
mov (ecx, ptr[r13+r11-1]); dump();
mov (ecx, ptr[r13+r11-1000]); dump();
mov (ecx, ptr[r13+r11*1+0]); dump();
mov (ecx, ptr[r13+r11*1+1]); dump();
mov (ecx, ptr[r13+r11*1+1000]); dump();
mov (ecx, ptr[r13+r11*1-1]); dump();
mov (ecx, ptr[r13+r11*1-1000]); dump();
mov (ecx, ptr[r13+r11*2+0]); dump();
mov (ecx, ptr[r13+r11*2+1]); dump();
mov (ecx, ptr[r13+r11*2+1000]); dump();
mov (ecx, ptr[r13+r11*2-1]); dump();
mov (ecx, ptr[r13+r11*2-1000]); dump();
mov (ecx, ptr[r13+r11*4+0]); dump();
mov (ecx, ptr[r13+r11*4+1]); dump();
mov (ecx, ptr[r13+r11*4+1000]); dump();
mov (ecx, ptr[r13+r11*4-1]); dump();
mov (ecx, ptr[r13+r11*4-1000]); dump();
mov (ecx, ptr[r13+r11*8+0]); dump();
mov (ecx, ptr[r13+r11*8+1]); dump();
mov (ecx, ptr[r13+r11*8+1000]); dump();
mov (ecx, ptr[r13+r11*8-1]); dump();
mov (ecx, ptr[r13+r11*8-1000]); dump();
mov (ecx, ptr[r13+r12+0]); dump();
mov (ecx, ptr[r13+r12+1]); dump();
mov (ecx, ptr[r13+r12+1000]); dump();
mov (ecx, ptr[r13+r12-1]); dump();
mov (ecx, ptr[r13+r12-1000]); dump();
mov (ecx, ptr[r13+r12*1+0]); dump();
mov (ecx, ptr[r13+r12*1+1]); dump();
mov (ecx, ptr[r13+r12*1+1000]); dump();
mov (ecx, ptr[r13+r12*1-1]); dump();
mov (ecx, ptr[r13+r12*1-1000]); dump();
mov (ecx, ptr[r13+r12*2+0]); dump();
mov (ecx, ptr[r13+r12*2+1]); dump();
mov (ecx, ptr[r13+r12*2+1000]); dump();
mov (ecx, ptr[r13+r12*2-1]); dump();
mov (ecx, ptr[r13+r12*2-1000]); dump();
mov (ecx, ptr[r13+r12*4+0]); dump();
mov (ecx, ptr[r13+r12*4+1]); dump();
mov (ecx, ptr[r13+r12*4+1000]); dump();
mov (ecx, ptr[r13+r12*4-1]); dump();
mov (ecx, ptr[r13+r12*4-1000]); dump();
mov (ecx, ptr[r13+r12*8+0]); dump();
mov (ecx, ptr[r13+r12*8+1]); dump();
mov (ecx, ptr[r13+r12*8+1000]); dump();
mov (ecx, ptr[r13+r12*8-1]); dump();
mov (ecx, ptr[r13+r12*8-1000]); dump();
mov (ecx, ptr[r13+r13+0]); dump();
mov (ecx, ptr[r13+r13+1]); dump();
mov (ecx, ptr[r13+r13+1000]); dump();
mov (ecx, ptr[r13+r13-1]); dump();
mov (ecx, ptr[r13+r13-1000]); dump();
mov (ecx, ptr[r13+r13*1+0]); dump();
mov (ecx, ptr[r13+r13*1+1]); dump();
mov (ecx, ptr[r13+r13*1+1000]); dump();
mov (ecx, ptr[r13+r13*1-1]); dump();
mov (ecx, ptr[r13+r13*1-1000]); dump();
mov (ecx, ptr[r13+r13*2+0]); dump();
mov (ecx, ptr[r13+r13*2+1]); dump();
mov (ecx, ptr[r13+r13*2+1000]); dump();
mov (ecx, ptr[r13+r13*2-1]); dump();
mov (ecx, ptr[r13+r13*2-1000]); dump();
mov (ecx, ptr[r13+r13*4+0]); dump();
mov (ecx, ptr[r13+r13*4+1]); dump();
mov (ecx, ptr[r13+r13*4+1000]); dump();
mov (ecx, ptr[r13+r13*4-1]); dump();
mov (ecx, ptr[r13+r13*4-1000]); dump();
mov (ecx, ptr[r13+r13*8+0]); dump();
mov (ecx, ptr[r13+r13*8+1]); dump();
mov (ecx, ptr[r13+r13*8+1000]); dump();
mov (ecx, ptr[r13+r13*8-1]); dump();
mov (ecx, ptr[r13+r13*8-1000]); dump();
}
    void gen48(){
mov (ecx, ptr[r13+r14+0]); dump();
mov (ecx, ptr[r13+r14+1]); dump();
mov (ecx, ptr[r13+r14+1000]); dump();
mov (ecx, ptr[r13+r14-1]); dump();
mov (ecx, ptr[r13+r14-1000]); dump();
mov (ecx, ptr[r13+r14*1+0]); dump();
mov (ecx, ptr[r13+r14*1+1]); dump();
mov (ecx, ptr[r13+r14*1+1000]); dump();
mov (ecx, ptr[r13+r14*1-1]); dump();
mov (ecx, ptr[r13+r14*1-1000]); dump();
mov (ecx, ptr[r13+r14*2+0]); dump();
mov (ecx, ptr[r13+r14*2+1]); dump();
mov (ecx, ptr[r13+r14*2+1000]); dump();
mov (ecx, ptr[r13+r14*2-1]); dump();
mov (ecx, ptr[r13+r14*2-1000]); dump();
mov (ecx, ptr[r13+r14*4+0]); dump();
mov (ecx, ptr[r13+r14*4+1]); dump();
mov (ecx, ptr[r13+r14*4+1000]); dump();
mov (ecx, ptr[r13+r14*4-1]); dump();
mov (ecx, ptr[r13+r14*4-1000]); dump();
mov (ecx, ptr[r13+r14*8+0]); dump();
mov (ecx, ptr[r13+r14*8+1]); dump();
mov (ecx, ptr[r13+r14*8+1000]); dump();
mov (ecx, ptr[r13+r14*8-1]); dump();
mov (ecx, ptr[r13+r14*8-1000]); dump();
mov (ecx, ptr[r13+r15+0]); dump();
mov (ecx, ptr[r13+r15+1]); dump();
mov (ecx, ptr[r13+r15+1000]); dump();
mov (ecx, ptr[r13+r15-1]); dump();
mov (ecx, ptr[r13+r15-1000]); dump();
mov (ecx, ptr[r13+r15*1+0]); dump();
mov (ecx, ptr[r13+r15*1+1]); dump();
mov (ecx, ptr[r13+r15*1+1000]); dump();
mov (ecx, ptr[r13+r15*1-1]); dump();
mov (ecx, ptr[r13+r15*1-1000]); dump();
mov (ecx, ptr[r13+r15*2+0]); dump();
mov (ecx, ptr[r13+r15*2+1]); dump();
mov (ecx, ptr[r13+r15*2+1000]); dump();
mov (ecx, ptr[r13+r15*2-1]); dump();
mov (ecx, ptr[r13+r15*2-1000]); dump();
mov (ecx, ptr[r13+r15*4+0]); dump();
mov (ecx, ptr[r13+r15*4+1]); dump();
mov (ecx, ptr[r13+r15*4+1000]); dump();
mov (ecx, ptr[r13+r15*4-1]); dump();
mov (ecx, ptr[r13+r15*4-1000]); dump();
mov (ecx, ptr[r13+r15*8+0]); dump();
mov (ecx, ptr[r13+r15*8+1]); dump();
mov (ecx, ptr[r13+r15*8+1000]); dump();
mov (ecx, ptr[r13+r15*8-1]); dump();
mov (ecx, ptr[r13+r15*8-1000]); dump();
mov (ecx, ptr[r13+0]); dump();
mov (ecx, ptr[r13+1]); dump();
mov (ecx, ptr[r13+1000]); dump();
mov (ecx, ptr[r13-1]); dump();
mov (ecx, ptr[r13-1000]); dump();
mov (ecx, ptr[r13+0]); dump();
mov (ecx, ptr[r13+1]); dump();
mov (ecx, ptr[r13+1000]); dump();
mov (ecx, ptr[r13-1]); dump();
mov (ecx, ptr[r13-1000]); dump();
mov (ecx, ptr[r13+0]); dump();
mov (ecx, ptr[r13+1]); dump();
mov (ecx, ptr[r13+1000]); dump();
mov (ecx, ptr[r13-1]); dump();
mov (ecx, ptr[r13-1000]); dump();
mov (ecx, ptr[r13+0]); dump();
mov (ecx, ptr[r13+1]); dump();
mov (ecx, ptr[r13+1000]); dump();
mov (ecx, ptr[r13-1]); dump();
mov (ecx, ptr[r13-1000]); dump();
mov (ecx, ptr[r13+0]); dump();
mov (ecx, ptr[r13+1]); dump();
mov (ecx, ptr[r13+1000]); dump();
mov (ecx, ptr[r13-1]); dump();
mov (ecx, ptr[r13-1000]); dump();
mov (ecx, ptr[r14+rax+0]); dump();
mov (ecx, ptr[r14+rax+1]); dump();
mov (ecx, ptr[r14+rax+1000]); dump();
mov (ecx, ptr[r14+rax-1]); dump();
mov (ecx, ptr[r14+rax-1000]); dump();
mov (ecx, ptr[r14+rax*1+0]); dump();
mov (ecx, ptr[r14+rax*1+1]); dump();
mov (ecx, ptr[r14+rax*1+1000]); dump();
mov (ecx, ptr[r14+rax*1-1]); dump();
mov (ecx, ptr[r14+rax*1-1000]); dump();
mov (ecx, ptr[r14+rax*2+0]); dump();
mov (ecx, ptr[r14+rax*2+1]); dump();
mov (ecx, ptr[r14+rax*2+1000]); dump();
mov (ecx, ptr[r14+rax*2-1]); dump();
mov (ecx, ptr[r14+rax*2-1000]); dump();
mov (ecx, ptr[r14+rax*4+0]); dump();
mov (ecx, ptr[r14+rax*4+1]); dump();
mov (ecx, ptr[r14+rax*4+1000]); dump();
mov (ecx, ptr[r14+rax*4-1]); dump();
mov (ecx, ptr[r14+rax*4-1000]); dump();
mov (ecx, ptr[r14+rax*8+0]); dump();
mov (ecx, ptr[r14+rax*8+1]); dump();
mov (ecx, ptr[r14+rax*8+1000]); dump();
mov (ecx, ptr[r14+rax*8-1]); dump();
mov (ecx, ptr[r14+rax*8-1000]); dump();
}
    void gen49(){
mov (ecx, ptr[r14+rcx+0]); dump();
mov (ecx, ptr[r14+rcx+1]); dump();
mov (ecx, ptr[r14+rcx+1000]); dump();
mov (ecx, ptr[r14+rcx-1]); dump();
mov (ecx, ptr[r14+rcx-1000]); dump();
mov (ecx, ptr[r14+rcx*1+0]); dump();
mov (ecx, ptr[r14+rcx*1+1]); dump();
mov (ecx, ptr[r14+rcx*1+1000]); dump();
mov (ecx, ptr[r14+rcx*1-1]); dump();
mov (ecx, ptr[r14+rcx*1-1000]); dump();
mov (ecx, ptr[r14+rcx*2+0]); dump();
mov (ecx, ptr[r14+rcx*2+1]); dump();
mov (ecx, ptr[r14+rcx*2+1000]); dump();
mov (ecx, ptr[r14+rcx*2-1]); dump();
mov (ecx, ptr[r14+rcx*2-1000]); dump();
mov (ecx, ptr[r14+rcx*4+0]); dump();
mov (ecx, ptr[r14+rcx*4+1]); dump();
mov (ecx, ptr[r14+rcx*4+1000]); dump();
mov (ecx, ptr[r14+rcx*4-1]); dump();
mov (ecx, ptr[r14+rcx*4-1000]); dump();
mov (ecx, ptr[r14+rcx*8+0]); dump();
mov (ecx, ptr[r14+rcx*8+1]); dump();
mov (ecx, ptr[r14+rcx*8+1000]); dump();
mov (ecx, ptr[r14+rcx*8-1]); dump();
mov (ecx, ptr[r14+rcx*8-1000]); dump();
mov (ecx, ptr[r14+rdx+0]); dump();
mov (ecx, ptr[r14+rdx+1]); dump();
mov (ecx, ptr[r14+rdx+1000]); dump();
mov (ecx, ptr[r14+rdx-1]); dump();
mov (ecx, ptr[r14+rdx-1000]); dump();
mov (ecx, ptr[r14+rdx*1+0]); dump();
mov (ecx, ptr[r14+rdx*1+1]); dump();
mov (ecx, ptr[r14+rdx*1+1000]); dump();
mov (ecx, ptr[r14+rdx*1-1]); dump();
mov (ecx, ptr[r14+rdx*1-1000]); dump();
mov (ecx, ptr[r14+rdx*2+0]); dump();
mov (ecx, ptr[r14+rdx*2+1]); dump();
mov (ecx, ptr[r14+rdx*2+1000]); dump();
mov (ecx, ptr[r14+rdx*2-1]); dump();
mov (ecx, ptr[r14+rdx*2-1000]); dump();
mov (ecx, ptr[r14+rdx*4+0]); dump();
mov (ecx, ptr[r14+rdx*4+1]); dump();
mov (ecx, ptr[r14+rdx*4+1000]); dump();
mov (ecx, ptr[r14+rdx*4-1]); dump();
mov (ecx, ptr[r14+rdx*4-1000]); dump();
mov (ecx, ptr[r14+rdx*8+0]); dump();
mov (ecx, ptr[r14+rdx*8+1]); dump();
mov (ecx, ptr[r14+rdx*8+1000]); dump();
mov (ecx, ptr[r14+rdx*8-1]); dump();
mov (ecx, ptr[r14+rdx*8-1000]); dump();
mov (ecx, ptr[r14+rbx+0]); dump();
mov (ecx, ptr[r14+rbx+1]); dump();
mov (ecx, ptr[r14+rbx+1000]); dump();
mov (ecx, ptr[r14+rbx-1]); dump();
mov (ecx, ptr[r14+rbx-1000]); dump();
mov (ecx, ptr[r14+rbx*1+0]); dump();
mov (ecx, ptr[r14+rbx*1+1]); dump();
mov (ecx, ptr[r14+rbx*1+1000]); dump();
mov (ecx, ptr[r14+rbx*1-1]); dump();
mov (ecx, ptr[r14+rbx*1-1000]); dump();
mov (ecx, ptr[r14+rbx*2+0]); dump();
mov (ecx, ptr[r14+rbx*2+1]); dump();
mov (ecx, ptr[r14+rbx*2+1000]); dump();
mov (ecx, ptr[r14+rbx*2-1]); dump();
mov (ecx, ptr[r14+rbx*2-1000]); dump();
mov (ecx, ptr[r14+rbx*4+0]); dump();
mov (ecx, ptr[r14+rbx*4+1]); dump();
mov (ecx, ptr[r14+rbx*4+1000]); dump();
mov (ecx, ptr[r14+rbx*4-1]); dump();
mov (ecx, ptr[r14+rbx*4-1000]); dump();
mov (ecx, ptr[r14+rbx*8+0]); dump();
mov (ecx, ptr[r14+rbx*8+1]); dump();
mov (ecx, ptr[r14+rbx*8+1000]); dump();
mov (ecx, ptr[r14+rbx*8-1]); dump();
mov (ecx, ptr[r14+rbx*8-1000]); dump();
mov (ecx, ptr[r14+rbp+0]); dump();
mov (ecx, ptr[r14+rbp+1]); dump();
mov (ecx, ptr[r14+rbp+1000]); dump();
mov (ecx, ptr[r14+rbp-1]); dump();
mov (ecx, ptr[r14+rbp-1000]); dump();
mov (ecx, ptr[r14+rbp*1+0]); dump();
mov (ecx, ptr[r14+rbp*1+1]); dump();
mov (ecx, ptr[r14+rbp*1+1000]); dump();
mov (ecx, ptr[r14+rbp*1-1]); dump();
mov (ecx, ptr[r14+rbp*1-1000]); dump();
mov (ecx, ptr[r14+rbp*2+0]); dump();
mov (ecx, ptr[r14+rbp*2+1]); dump();
mov (ecx, ptr[r14+rbp*2+1000]); dump();
mov (ecx, ptr[r14+rbp*2-1]); dump();
mov (ecx, ptr[r14+rbp*2-1000]); dump();
mov (ecx, ptr[r14+rbp*4+0]); dump();
mov (ecx, ptr[r14+rbp*4+1]); dump();
mov (ecx, ptr[r14+rbp*4+1000]); dump();
mov (ecx, ptr[r14+rbp*4-1]); dump();
mov (ecx, ptr[r14+rbp*4-1000]); dump();
mov (ecx, ptr[r14+rbp*8+0]); dump();
mov (ecx, ptr[r14+rbp*8+1]); dump();
mov (ecx, ptr[r14+rbp*8+1000]); dump();
mov (ecx, ptr[r14+rbp*8-1]); dump();
mov (ecx, ptr[r14+rbp*8-1000]); dump();
}
    void gen50(){
mov (ecx, ptr[r14+rsi+0]); dump();
mov (ecx, ptr[r14+rsi+1]); dump();
mov (ecx, ptr[r14+rsi+1000]); dump();
mov (ecx, ptr[r14+rsi-1]); dump();
mov (ecx, ptr[r14+rsi-1000]); dump();
mov (ecx, ptr[r14+rsi*1+0]); dump();
mov (ecx, ptr[r14+rsi*1+1]); dump();
mov (ecx, ptr[r14+rsi*1+1000]); dump();
mov (ecx, ptr[r14+rsi*1-1]); dump();
mov (ecx, ptr[r14+rsi*1-1000]); dump();
mov (ecx, ptr[r14+rsi*2+0]); dump();
mov (ecx, ptr[r14+rsi*2+1]); dump();
mov (ecx, ptr[r14+rsi*2+1000]); dump();
mov (ecx, ptr[r14+rsi*2-1]); dump();
mov (ecx, ptr[r14+rsi*2-1000]); dump();
mov (ecx, ptr[r14+rsi*4+0]); dump();
mov (ecx, ptr[r14+rsi*4+1]); dump();
mov (ecx, ptr[r14+rsi*4+1000]); dump();
mov (ecx, ptr[r14+rsi*4-1]); dump();
mov (ecx, ptr[r14+rsi*4-1000]); dump();
mov (ecx, ptr[r14+rsi*8+0]); dump();
mov (ecx, ptr[r14+rsi*8+1]); dump();
mov (ecx, ptr[r14+rsi*8+1000]); dump();
mov (ecx, ptr[r14+rsi*8-1]); dump();
mov (ecx, ptr[r14+rsi*8-1000]); dump();
mov (ecx, ptr[r14+rdi+0]); dump();
mov (ecx, ptr[r14+rdi+1]); dump();
mov (ecx, ptr[r14+rdi+1000]); dump();
mov (ecx, ptr[r14+rdi-1]); dump();
mov (ecx, ptr[r14+rdi-1000]); dump();
mov (ecx, ptr[r14+rdi*1+0]); dump();
mov (ecx, ptr[r14+rdi*1+1]); dump();
mov (ecx, ptr[r14+rdi*1+1000]); dump();
mov (ecx, ptr[r14+rdi*1-1]); dump();
mov (ecx, ptr[r14+rdi*1-1000]); dump();
mov (ecx, ptr[r14+rdi*2+0]); dump();
mov (ecx, ptr[r14+rdi*2+1]); dump();
mov (ecx, ptr[r14+rdi*2+1000]); dump();
mov (ecx, ptr[r14+rdi*2-1]); dump();
mov (ecx, ptr[r14+rdi*2-1000]); dump();
mov (ecx, ptr[r14+rdi*4+0]); dump();
mov (ecx, ptr[r14+rdi*4+1]); dump();
mov (ecx, ptr[r14+rdi*4+1000]); dump();
mov (ecx, ptr[r14+rdi*4-1]); dump();
mov (ecx, ptr[r14+rdi*4-1000]); dump();
mov (ecx, ptr[r14+rdi*8+0]); dump();
mov (ecx, ptr[r14+rdi*8+1]); dump();
mov (ecx, ptr[r14+rdi*8+1000]); dump();
mov (ecx, ptr[r14+rdi*8-1]); dump();
mov (ecx, ptr[r14+rdi*8-1000]); dump();
mov (ecx, ptr[r14+r9+0]); dump();
mov (ecx, ptr[r14+r9+1]); dump();
mov (ecx, ptr[r14+r9+1000]); dump();
mov (ecx, ptr[r14+r9-1]); dump();
mov (ecx, ptr[r14+r9-1000]); dump();
mov (ecx, ptr[r14+r9*1+0]); dump();
mov (ecx, ptr[r14+r9*1+1]); dump();
mov (ecx, ptr[r14+r9*1+1000]); dump();
mov (ecx, ptr[r14+r9*1-1]); dump();
mov (ecx, ptr[r14+r9*1-1000]); dump();
mov (ecx, ptr[r14+r9*2+0]); dump();
mov (ecx, ptr[r14+r9*2+1]); dump();
mov (ecx, ptr[r14+r9*2+1000]); dump();
mov (ecx, ptr[r14+r9*2-1]); dump();
mov (ecx, ptr[r14+r9*2-1000]); dump();
mov (ecx, ptr[r14+r9*4+0]); dump();
mov (ecx, ptr[r14+r9*4+1]); dump();
mov (ecx, ptr[r14+r9*4+1000]); dump();
mov (ecx, ptr[r14+r9*4-1]); dump();
mov (ecx, ptr[r14+r9*4-1000]); dump();
mov (ecx, ptr[r14+r9*8+0]); dump();
mov (ecx, ptr[r14+r9*8+1]); dump();
mov (ecx, ptr[r14+r9*8+1000]); dump();
mov (ecx, ptr[r14+r9*8-1]); dump();
mov (ecx, ptr[r14+r9*8-1000]); dump();
mov (ecx, ptr[r14+r10+0]); dump();
mov (ecx, ptr[r14+r10+1]); dump();
mov (ecx, ptr[r14+r10+1000]); dump();
mov (ecx, ptr[r14+r10-1]); dump();
mov (ecx, ptr[r14+r10-1000]); dump();
mov (ecx, ptr[r14+r10*1+0]); dump();
mov (ecx, ptr[r14+r10*1+1]); dump();
mov (ecx, ptr[r14+r10*1+1000]); dump();
mov (ecx, ptr[r14+r10*1-1]); dump();
mov (ecx, ptr[r14+r10*1-1000]); dump();
mov (ecx, ptr[r14+r10*2+0]); dump();
mov (ecx, ptr[r14+r10*2+1]); dump();
mov (ecx, ptr[r14+r10*2+1000]); dump();
mov (ecx, ptr[r14+r10*2-1]); dump();
mov (ecx, ptr[r14+r10*2-1000]); dump();
mov (ecx, ptr[r14+r10*4+0]); dump();
mov (ecx, ptr[r14+r10*4+1]); dump();
mov (ecx, ptr[r14+r10*4+1000]); dump();
mov (ecx, ptr[r14+r10*4-1]); dump();
mov (ecx, ptr[r14+r10*4-1000]); dump();
mov (ecx, ptr[r14+r10*8+0]); dump();
mov (ecx, ptr[r14+r10*8+1]); dump();
mov (ecx, ptr[r14+r10*8+1000]); dump();
mov (ecx, ptr[r14+r10*8-1]); dump();
mov (ecx, ptr[r14+r10*8-1000]); dump();
}
    void gen51(){
mov (ecx, ptr[r14+r11+0]); dump();
mov (ecx, ptr[r14+r11+1]); dump();
mov (ecx, ptr[r14+r11+1000]); dump();
mov (ecx, ptr[r14+r11-1]); dump();
mov (ecx, ptr[r14+r11-1000]); dump();
mov (ecx, ptr[r14+r11*1+0]); dump();
mov (ecx, ptr[r14+r11*1+1]); dump();
mov (ecx, ptr[r14+r11*1+1000]); dump();
mov (ecx, ptr[r14+r11*1-1]); dump();
mov (ecx, ptr[r14+r11*1-1000]); dump();
mov (ecx, ptr[r14+r11*2+0]); dump();
mov (ecx, ptr[r14+r11*2+1]); dump();
mov (ecx, ptr[r14+r11*2+1000]); dump();
mov (ecx, ptr[r14+r11*2-1]); dump();
mov (ecx, ptr[r14+r11*2-1000]); dump();
mov (ecx, ptr[r14+r11*4+0]); dump();
mov (ecx, ptr[r14+r11*4+1]); dump();
mov (ecx, ptr[r14+r11*4+1000]); dump();
mov (ecx, ptr[r14+r11*4-1]); dump();
mov (ecx, ptr[r14+r11*4-1000]); dump();
mov (ecx, ptr[r14+r11*8+0]); dump();
mov (ecx, ptr[r14+r11*8+1]); dump();
mov (ecx, ptr[r14+r11*8+1000]); dump();
mov (ecx, ptr[r14+r11*8-1]); dump();
mov (ecx, ptr[r14+r11*8-1000]); dump();
mov (ecx, ptr[r14+r12+0]); dump();
mov (ecx, ptr[r14+r12+1]); dump();
mov (ecx, ptr[r14+r12+1000]); dump();
mov (ecx, ptr[r14+r12-1]); dump();
mov (ecx, ptr[r14+r12-1000]); dump();
mov (ecx, ptr[r14+r12*1+0]); dump();
mov (ecx, ptr[r14+r12*1+1]); dump();
mov (ecx, ptr[r14+r12*1+1000]); dump();
mov (ecx, ptr[r14+r12*1-1]); dump();
mov (ecx, ptr[r14+r12*1-1000]); dump();
mov (ecx, ptr[r14+r12*2+0]); dump();
mov (ecx, ptr[r14+r12*2+1]); dump();
mov (ecx, ptr[r14+r12*2+1000]); dump();
mov (ecx, ptr[r14+r12*2-1]); dump();
mov (ecx, ptr[r14+r12*2-1000]); dump();
mov (ecx, ptr[r14+r12*4+0]); dump();
mov (ecx, ptr[r14+r12*4+1]); dump();
mov (ecx, ptr[r14+r12*4+1000]); dump();
mov (ecx, ptr[r14+r12*4-1]); dump();
mov (ecx, ptr[r14+r12*4-1000]); dump();
mov (ecx, ptr[r14+r12*8+0]); dump();
mov (ecx, ptr[r14+r12*8+1]); dump();
mov (ecx, ptr[r14+r12*8+1000]); dump();
mov (ecx, ptr[r14+r12*8-1]); dump();
mov (ecx, ptr[r14+r12*8-1000]); dump();
mov (ecx, ptr[r14+r13+0]); dump();
mov (ecx, ptr[r14+r13+1]); dump();
mov (ecx, ptr[r14+r13+1000]); dump();
mov (ecx, ptr[r14+r13-1]); dump();
mov (ecx, ptr[r14+r13-1000]); dump();
mov (ecx, ptr[r14+r13*1+0]); dump();
mov (ecx, ptr[r14+r13*1+1]); dump();
mov (ecx, ptr[r14+r13*1+1000]); dump();
mov (ecx, ptr[r14+r13*1-1]); dump();
mov (ecx, ptr[r14+r13*1-1000]); dump();
mov (ecx, ptr[r14+r13*2+0]); dump();
mov (ecx, ptr[r14+r13*2+1]); dump();
mov (ecx, ptr[r14+r13*2+1000]); dump();
mov (ecx, ptr[r14+r13*2-1]); dump();
mov (ecx, ptr[r14+r13*2-1000]); dump();
mov (ecx, ptr[r14+r13*4+0]); dump();
mov (ecx, ptr[r14+r13*4+1]); dump();
mov (ecx, ptr[r14+r13*4+1000]); dump();
mov (ecx, ptr[r14+r13*4-1]); dump();
mov (ecx, ptr[r14+r13*4-1000]); dump();
mov (ecx, ptr[r14+r13*8+0]); dump();
mov (ecx, ptr[r14+r13*8+1]); dump();
mov (ecx, ptr[r14+r13*8+1000]); dump();
mov (ecx, ptr[r14+r13*8-1]); dump();
mov (ecx, ptr[r14+r13*8-1000]); dump();
mov (ecx, ptr[r14+r14+0]); dump();
mov (ecx, ptr[r14+r14+1]); dump();
mov (ecx, ptr[r14+r14+1000]); dump();
mov (ecx, ptr[r14+r14-1]); dump();
mov (ecx, ptr[r14+r14-1000]); dump();
mov (ecx, ptr[r14+r14*1+0]); dump();
mov (ecx, ptr[r14+r14*1+1]); dump();
mov (ecx, ptr[r14+r14*1+1000]); dump();
mov (ecx, ptr[r14+r14*1-1]); dump();
mov (ecx, ptr[r14+r14*1-1000]); dump();
mov (ecx, ptr[r14+r14*2+0]); dump();
mov (ecx, ptr[r14+r14*2+1]); dump();
mov (ecx, ptr[r14+r14*2+1000]); dump();
mov (ecx, ptr[r14+r14*2-1]); dump();
mov (ecx, ptr[r14+r14*2-1000]); dump();
mov (ecx, ptr[r14+r14*4+0]); dump();
mov (ecx, ptr[r14+r14*4+1]); dump();
mov (ecx, ptr[r14+r14*4+1000]); dump();
mov (ecx, ptr[r14+r14*4-1]); dump();
mov (ecx, ptr[r14+r14*4-1000]); dump();
mov (ecx, ptr[r14+r14*8+0]); dump();
mov (ecx, ptr[r14+r14*8+1]); dump();
mov (ecx, ptr[r14+r14*8+1000]); dump();
mov (ecx, ptr[r14+r14*8-1]); dump();
mov (ecx, ptr[r14+r14*8-1000]); dump();
}
    void gen52(){
mov (ecx, ptr[r14+r15+0]); dump();
mov (ecx, ptr[r14+r15+1]); dump();
mov (ecx, ptr[r14+r15+1000]); dump();
mov (ecx, ptr[r14+r15-1]); dump();
mov (ecx, ptr[r14+r15-1000]); dump();
mov (ecx, ptr[r14+r15*1+0]); dump();
mov (ecx, ptr[r14+r15*1+1]); dump();
mov (ecx, ptr[r14+r15*1+1000]); dump();
mov (ecx, ptr[r14+r15*1-1]); dump();
mov (ecx, ptr[r14+r15*1-1000]); dump();
mov (ecx, ptr[r14+r15*2+0]); dump();
mov (ecx, ptr[r14+r15*2+1]); dump();
mov (ecx, ptr[r14+r15*2+1000]); dump();
mov (ecx, ptr[r14+r15*2-1]); dump();
mov (ecx, ptr[r14+r15*2-1000]); dump();
mov (ecx, ptr[r14+r15*4+0]); dump();
mov (ecx, ptr[r14+r15*4+1]); dump();
mov (ecx, ptr[r14+r15*4+1000]); dump();
mov (ecx, ptr[r14+r15*4-1]); dump();
mov (ecx, ptr[r14+r15*4-1000]); dump();
mov (ecx, ptr[r14+r15*8+0]); dump();
mov (ecx, ptr[r14+r15*8+1]); dump();
mov (ecx, ptr[r14+r15*8+1000]); dump();
mov (ecx, ptr[r14+r15*8-1]); dump();
mov (ecx, ptr[r14+r15*8-1000]); dump();
mov (ecx, ptr[r14+0]); dump();
mov (ecx, ptr[r14+1]); dump();
mov (ecx, ptr[r14+1000]); dump();
mov (ecx, ptr[r14-1]); dump();
mov (ecx, ptr[r14-1000]); dump();
mov (ecx, ptr[r14+0]); dump();
mov (ecx, ptr[r14+1]); dump();
mov (ecx, ptr[r14+1000]); dump();
mov (ecx, ptr[r14-1]); dump();
mov (ecx, ptr[r14-1000]); dump();
mov (ecx, ptr[r14+0]); dump();
mov (ecx, ptr[r14+1]); dump();
mov (ecx, ptr[r14+1000]); dump();
mov (ecx, ptr[r14-1]); dump();
mov (ecx, ptr[r14-1000]); dump();
mov (ecx, ptr[r14+0]); dump();
mov (ecx, ptr[r14+1]); dump();
mov (ecx, ptr[r14+1000]); dump();
mov (ecx, ptr[r14-1]); dump();
mov (ecx, ptr[r14-1000]); dump();
mov (ecx, ptr[r14+0]); dump();
mov (ecx, ptr[r14+1]); dump();
mov (ecx, ptr[r14+1000]); dump();
mov (ecx, ptr[r14-1]); dump();
mov (ecx, ptr[r14-1000]); dump();
mov (ecx, ptr[r15+rax+0]); dump();
mov (ecx, ptr[r15+rax+1]); dump();
mov (ecx, ptr[r15+rax+1000]); dump();
mov (ecx, ptr[r15+rax-1]); dump();
mov (ecx, ptr[r15+rax-1000]); dump();
mov (ecx, ptr[r15+rax*1+0]); dump();
mov (ecx, ptr[r15+rax*1+1]); dump();
mov (ecx, ptr[r15+rax*1+1000]); dump();
mov (ecx, ptr[r15+rax*1-1]); dump();
mov (ecx, ptr[r15+rax*1-1000]); dump();
mov (ecx, ptr[r15+rax*2+0]); dump();
mov (ecx, ptr[r15+rax*2+1]); dump();
mov (ecx, ptr[r15+rax*2+1000]); dump();
mov (ecx, ptr[r15+rax*2-1]); dump();
mov (ecx, ptr[r15+rax*2-1000]); dump();
mov (ecx, ptr[r15+rax*4+0]); dump();
mov (ecx, ptr[r15+rax*4+1]); dump();
mov (ecx, ptr[r15+rax*4+1000]); dump();
mov (ecx, ptr[r15+rax*4-1]); dump();
mov (ecx, ptr[r15+rax*4-1000]); dump();
mov (ecx, ptr[r15+rax*8+0]); dump();
mov (ecx, ptr[r15+rax*8+1]); dump();
mov (ecx, ptr[r15+rax*8+1000]); dump();
mov (ecx, ptr[r15+rax*8-1]); dump();
mov (ecx, ptr[r15+rax*8-1000]); dump();
mov (ecx, ptr[r15+rcx+0]); dump();
mov (ecx, ptr[r15+rcx+1]); dump();
mov (ecx, ptr[r15+rcx+1000]); dump();
mov (ecx, ptr[r15+rcx-1]); dump();
mov (ecx, ptr[r15+rcx-1000]); dump();
mov (ecx, ptr[r15+rcx*1+0]); dump();
mov (ecx, ptr[r15+rcx*1+1]); dump();
mov (ecx, ptr[r15+rcx*1+1000]); dump();
mov (ecx, ptr[r15+rcx*1-1]); dump();
mov (ecx, ptr[r15+rcx*1-1000]); dump();
mov (ecx, ptr[r15+rcx*2+0]); dump();
mov (ecx, ptr[r15+rcx*2+1]); dump();
mov (ecx, ptr[r15+rcx*2+1000]); dump();
mov (ecx, ptr[r15+rcx*2-1]); dump();
mov (ecx, ptr[r15+rcx*2-1000]); dump();
mov (ecx, ptr[r15+rcx*4+0]); dump();
mov (ecx, ptr[r15+rcx*4+1]); dump();
mov (ecx, ptr[r15+rcx*4+1000]); dump();
mov (ecx, ptr[r15+rcx*4-1]); dump();
mov (ecx, ptr[r15+rcx*4-1000]); dump();
mov (ecx, ptr[r15+rcx*8+0]); dump();
mov (ecx, ptr[r15+rcx*8+1]); dump();
mov (ecx, ptr[r15+rcx*8+1000]); dump();
mov (ecx, ptr[r15+rcx*8-1]); dump();
mov (ecx, ptr[r15+rcx*8-1000]); dump();
}
    void gen53(){
mov (ecx, ptr[r15+rdx+0]); dump();
mov (ecx, ptr[r15+rdx+1]); dump();
mov (ecx, ptr[r15+rdx+1000]); dump();
mov (ecx, ptr[r15+rdx-1]); dump();
mov (ecx, ptr[r15+rdx-1000]); dump();
mov (ecx, ptr[r15+rdx*1+0]); dump();
mov (ecx, ptr[r15+rdx*1+1]); dump();
mov (ecx, ptr[r15+rdx*1+1000]); dump();
mov (ecx, ptr[r15+rdx*1-1]); dump();
mov (ecx, ptr[r15+rdx*1-1000]); dump();
mov (ecx, ptr[r15+rdx*2+0]); dump();
mov (ecx, ptr[r15+rdx*2+1]); dump();
mov (ecx, ptr[r15+rdx*2+1000]); dump();
mov (ecx, ptr[r15+rdx*2-1]); dump();
mov (ecx, ptr[r15+rdx*2-1000]); dump();
mov (ecx, ptr[r15+rdx*4+0]); dump();
mov (ecx, ptr[r15+rdx*4+1]); dump();
mov (ecx, ptr[r15+rdx*4+1000]); dump();
mov (ecx, ptr[r15+rdx*4-1]); dump();
mov (ecx, ptr[r15+rdx*4-1000]); dump();
mov (ecx, ptr[r15+rdx*8+0]); dump();
mov (ecx, ptr[r15+rdx*8+1]); dump();
mov (ecx, ptr[r15+rdx*8+1000]); dump();
mov (ecx, ptr[r15+rdx*8-1]); dump();
mov (ecx, ptr[r15+rdx*8-1000]); dump();
mov (ecx, ptr[r15+rbx+0]); dump();
mov (ecx, ptr[r15+rbx+1]); dump();
mov (ecx, ptr[r15+rbx+1000]); dump();
mov (ecx, ptr[r15+rbx-1]); dump();
mov (ecx, ptr[r15+rbx-1000]); dump();
mov (ecx, ptr[r15+rbx*1+0]); dump();
mov (ecx, ptr[r15+rbx*1+1]); dump();
mov (ecx, ptr[r15+rbx*1+1000]); dump();
mov (ecx, ptr[r15+rbx*1-1]); dump();
mov (ecx, ptr[r15+rbx*1-1000]); dump();
mov (ecx, ptr[r15+rbx*2+0]); dump();
mov (ecx, ptr[r15+rbx*2+1]); dump();
mov (ecx, ptr[r15+rbx*2+1000]); dump();
mov (ecx, ptr[r15+rbx*2-1]); dump();
mov (ecx, ptr[r15+rbx*2-1000]); dump();
mov (ecx, ptr[r15+rbx*4+0]); dump();
mov (ecx, ptr[r15+rbx*4+1]); dump();
mov (ecx, ptr[r15+rbx*4+1000]); dump();
mov (ecx, ptr[r15+rbx*4-1]); dump();
mov (ecx, ptr[r15+rbx*4-1000]); dump();
mov (ecx, ptr[r15+rbx*8+0]); dump();
mov (ecx, ptr[r15+rbx*8+1]); dump();
mov (ecx, ptr[r15+rbx*8+1000]); dump();
mov (ecx, ptr[r15+rbx*8-1]); dump();
mov (ecx, ptr[r15+rbx*8-1000]); dump();
mov (ecx, ptr[r15+rbp+0]); dump();
mov (ecx, ptr[r15+rbp+1]); dump();
mov (ecx, ptr[r15+rbp+1000]); dump();
mov (ecx, ptr[r15+rbp-1]); dump();
mov (ecx, ptr[r15+rbp-1000]); dump();
mov (ecx, ptr[r15+rbp*1+0]); dump();
mov (ecx, ptr[r15+rbp*1+1]); dump();
mov (ecx, ptr[r15+rbp*1+1000]); dump();
mov (ecx, ptr[r15+rbp*1-1]); dump();
mov (ecx, ptr[r15+rbp*1-1000]); dump();
mov (ecx, ptr[r15+rbp*2+0]); dump();
mov (ecx, ptr[r15+rbp*2+1]); dump();
mov (ecx, ptr[r15+rbp*2+1000]); dump();
mov (ecx, ptr[r15+rbp*2-1]); dump();
mov (ecx, ptr[r15+rbp*2-1000]); dump();
mov (ecx, ptr[r15+rbp*4+0]); dump();
mov (ecx, ptr[r15+rbp*4+1]); dump();
mov (ecx, ptr[r15+rbp*4+1000]); dump();
mov (ecx, ptr[r15+rbp*4-1]); dump();
mov (ecx, ptr[r15+rbp*4-1000]); dump();
mov (ecx, ptr[r15+rbp*8+0]); dump();
mov (ecx, ptr[r15+rbp*8+1]); dump();
mov (ecx, ptr[r15+rbp*8+1000]); dump();
mov (ecx, ptr[r15+rbp*8-1]); dump();
mov (ecx, ptr[r15+rbp*8-1000]); dump();
mov (ecx, ptr[r15+rsi+0]); dump();
mov (ecx, ptr[r15+rsi+1]); dump();
mov (ecx, ptr[r15+rsi+1000]); dump();
mov (ecx, ptr[r15+rsi-1]); dump();
mov (ecx, ptr[r15+rsi-1000]); dump();
mov (ecx, ptr[r15+rsi*1+0]); dump();
mov (ecx, ptr[r15+rsi*1+1]); dump();
mov (ecx, ptr[r15+rsi*1+1000]); dump();
mov (ecx, ptr[r15+rsi*1-1]); dump();
mov (ecx, ptr[r15+rsi*1-1000]); dump();
mov (ecx, ptr[r15+rsi*2+0]); dump();
mov (ecx, ptr[r15+rsi*2+1]); dump();
mov (ecx, ptr[r15+rsi*2+1000]); dump();
mov (ecx, ptr[r15+rsi*2-1]); dump();
mov (ecx, ptr[r15+rsi*2-1000]); dump();
mov (ecx, ptr[r15+rsi*4+0]); dump();
mov (ecx, ptr[r15+rsi*4+1]); dump();
mov (ecx, ptr[r15+rsi*4+1000]); dump();
mov (ecx, ptr[r15+rsi*4-1]); dump();
mov (ecx, ptr[r15+rsi*4-1000]); dump();
mov (ecx, ptr[r15+rsi*8+0]); dump();
mov (ecx, ptr[r15+rsi*8+1]); dump();
mov (ecx, ptr[r15+rsi*8+1000]); dump();
mov (ecx, ptr[r15+rsi*8-1]); dump();
mov (ecx, ptr[r15+rsi*8-1000]); dump();
}
    void gen54(){
mov (ecx, ptr[r15+rdi+0]); dump();
mov (ecx, ptr[r15+rdi+1]); dump();
mov (ecx, ptr[r15+rdi+1000]); dump();
mov (ecx, ptr[r15+rdi-1]); dump();
mov (ecx, ptr[r15+rdi-1000]); dump();
mov (ecx, ptr[r15+rdi*1+0]); dump();
mov (ecx, ptr[r15+rdi*1+1]); dump();
mov (ecx, ptr[r15+rdi*1+1000]); dump();
mov (ecx, ptr[r15+rdi*1-1]); dump();
mov (ecx, ptr[r15+rdi*1-1000]); dump();
mov (ecx, ptr[r15+rdi*2+0]); dump();
mov (ecx, ptr[r15+rdi*2+1]); dump();
mov (ecx, ptr[r15+rdi*2+1000]); dump();
mov (ecx, ptr[r15+rdi*2-1]); dump();
mov (ecx, ptr[r15+rdi*2-1000]); dump();
mov (ecx, ptr[r15+rdi*4+0]); dump();
mov (ecx, ptr[r15+rdi*4+1]); dump();
mov (ecx, ptr[r15+rdi*4+1000]); dump();
mov (ecx, ptr[r15+rdi*4-1]); dump();
mov (ecx, ptr[r15+rdi*4-1000]); dump();
mov (ecx, ptr[r15+rdi*8+0]); dump();
mov (ecx, ptr[r15+rdi*8+1]); dump();
mov (ecx, ptr[r15+rdi*8+1000]); dump();
mov (ecx, ptr[r15+rdi*8-1]); dump();
mov (ecx, ptr[r15+rdi*8-1000]); dump();
mov (ecx, ptr[r15+r9+0]); dump();
mov (ecx, ptr[r15+r9+1]); dump();
mov (ecx, ptr[r15+r9+1000]); dump();
mov (ecx, ptr[r15+r9-1]); dump();
mov (ecx, ptr[r15+r9-1000]); dump();
mov (ecx, ptr[r15+r9*1+0]); dump();
mov (ecx, ptr[r15+r9*1+1]); dump();
mov (ecx, ptr[r15+r9*1+1000]); dump();
mov (ecx, ptr[r15+r9*1-1]); dump();
mov (ecx, ptr[r15+r9*1-1000]); dump();
mov (ecx, ptr[r15+r9*2+0]); dump();
mov (ecx, ptr[r15+r9*2+1]); dump();
mov (ecx, ptr[r15+r9*2+1000]); dump();
mov (ecx, ptr[r15+r9*2-1]); dump();
mov (ecx, ptr[r15+r9*2-1000]); dump();
mov (ecx, ptr[r15+r9*4+0]); dump();
mov (ecx, ptr[r15+r9*4+1]); dump();
mov (ecx, ptr[r15+r9*4+1000]); dump();
mov (ecx, ptr[r15+r9*4-1]); dump();
mov (ecx, ptr[r15+r9*4-1000]); dump();
mov (ecx, ptr[r15+r9*8+0]); dump();
mov (ecx, ptr[r15+r9*8+1]); dump();
mov (ecx, ptr[r15+r9*8+1000]); dump();
mov (ecx, ptr[r15+r9*8-1]); dump();
mov (ecx, ptr[r15+r9*8-1000]); dump();
mov (ecx, ptr[r15+r10+0]); dump();
mov (ecx, ptr[r15+r10+1]); dump();
mov (ecx, ptr[r15+r10+1000]); dump();
mov (ecx, ptr[r15+r10-1]); dump();
mov (ecx, ptr[r15+r10-1000]); dump();
mov (ecx, ptr[r15+r10*1+0]); dump();
mov (ecx, ptr[r15+r10*1+1]); dump();
mov (ecx, ptr[r15+r10*1+1000]); dump();
mov (ecx, ptr[r15+r10*1-1]); dump();
mov (ecx, ptr[r15+r10*1-1000]); dump();
mov (ecx, ptr[r15+r10*2+0]); dump();
mov (ecx, ptr[r15+r10*2+1]); dump();
mov (ecx, ptr[r15+r10*2+1000]); dump();
mov (ecx, ptr[r15+r10*2-1]); dump();
mov (ecx, ptr[r15+r10*2-1000]); dump();
mov (ecx, ptr[r15+r10*4+0]); dump();
mov (ecx, ptr[r15+r10*4+1]); dump();
mov (ecx, ptr[r15+r10*4+1000]); dump();
mov (ecx, ptr[r15+r10*4-1]); dump();
mov (ecx, ptr[r15+r10*4-1000]); dump();
mov (ecx, ptr[r15+r10*8+0]); dump();
mov (ecx, ptr[r15+r10*8+1]); dump();
mov (ecx, ptr[r15+r10*8+1000]); dump();
mov (ecx, ptr[r15+r10*8-1]); dump();
mov (ecx, ptr[r15+r10*8-1000]); dump();
mov (ecx, ptr[r15+r11+0]); dump();
mov (ecx, ptr[r15+r11+1]); dump();
mov (ecx, ptr[r15+r11+1000]); dump();
mov (ecx, ptr[r15+r11-1]); dump();
mov (ecx, ptr[r15+r11-1000]); dump();
mov (ecx, ptr[r15+r11*1+0]); dump();
mov (ecx, ptr[r15+r11*1+1]); dump();
mov (ecx, ptr[r15+r11*1+1000]); dump();
mov (ecx, ptr[r15+r11*1-1]); dump();
mov (ecx, ptr[r15+r11*1-1000]); dump();
mov (ecx, ptr[r15+r11*2+0]); dump();
mov (ecx, ptr[r15+r11*2+1]); dump();
mov (ecx, ptr[r15+r11*2+1000]); dump();
mov (ecx, ptr[r15+r11*2-1]); dump();
mov (ecx, ptr[r15+r11*2-1000]); dump();
mov (ecx, ptr[r15+r11*4+0]); dump();
mov (ecx, ptr[r15+r11*4+1]); dump();
mov (ecx, ptr[r15+r11*4+1000]); dump();
mov (ecx, ptr[r15+r11*4-1]); dump();
mov (ecx, ptr[r15+r11*4-1000]); dump();
mov (ecx, ptr[r15+r11*8+0]); dump();
mov (ecx, ptr[r15+r11*8+1]); dump();
mov (ecx, ptr[r15+r11*8+1000]); dump();
mov (ecx, ptr[r15+r11*8-1]); dump();
mov (ecx, ptr[r15+r11*8-1000]); dump();
}
    void gen55(){
mov (ecx, ptr[r15+r12+0]); dump();
mov (ecx, ptr[r15+r12+1]); dump();
mov (ecx, ptr[r15+r12+1000]); dump();
mov (ecx, ptr[r15+r12-1]); dump();
mov (ecx, ptr[r15+r12-1000]); dump();
mov (ecx, ptr[r15+r12*1+0]); dump();
mov (ecx, ptr[r15+r12*1+1]); dump();
mov (ecx, ptr[r15+r12*1+1000]); dump();
mov (ecx, ptr[r15+r12*1-1]); dump();
mov (ecx, ptr[r15+r12*1-1000]); dump();
mov (ecx, ptr[r15+r12*2+0]); dump();
mov (ecx, ptr[r15+r12*2+1]); dump();
mov (ecx, ptr[r15+r12*2+1000]); dump();
mov (ecx, ptr[r15+r12*2-1]); dump();
mov (ecx, ptr[r15+r12*2-1000]); dump();
mov (ecx, ptr[r15+r12*4+0]); dump();
mov (ecx, ptr[r15+r12*4+1]); dump();
mov (ecx, ptr[r15+r12*4+1000]); dump();
mov (ecx, ptr[r15+r12*4-1]); dump();
mov (ecx, ptr[r15+r12*4-1000]); dump();
mov (ecx, ptr[r15+r12*8+0]); dump();
mov (ecx, ptr[r15+r12*8+1]); dump();
mov (ecx, ptr[r15+r12*8+1000]); dump();
mov (ecx, ptr[r15+r12*8-1]); dump();
mov (ecx, ptr[r15+r12*8-1000]); dump();
mov (ecx, ptr[r15+r13+0]); dump();
mov (ecx, ptr[r15+r13+1]); dump();
mov (ecx, ptr[r15+r13+1000]); dump();
mov (ecx, ptr[r15+r13-1]); dump();
mov (ecx, ptr[r15+r13-1000]); dump();
mov (ecx, ptr[r15+r13*1+0]); dump();
mov (ecx, ptr[r15+r13*1+1]); dump();
mov (ecx, ptr[r15+r13*1+1000]); dump();
mov (ecx, ptr[r15+r13*1-1]); dump();
mov (ecx, ptr[r15+r13*1-1000]); dump();
mov (ecx, ptr[r15+r13*2+0]); dump();
mov (ecx, ptr[r15+r13*2+1]); dump();
mov (ecx, ptr[r15+r13*2+1000]); dump();
mov (ecx, ptr[r15+r13*2-1]); dump();
mov (ecx, ptr[r15+r13*2-1000]); dump();
mov (ecx, ptr[r15+r13*4+0]); dump();
mov (ecx, ptr[r15+r13*4+1]); dump();
mov (ecx, ptr[r15+r13*4+1000]); dump();
mov (ecx, ptr[r15+r13*4-1]); dump();
mov (ecx, ptr[r15+r13*4-1000]); dump();
mov (ecx, ptr[r15+r13*8+0]); dump();
mov (ecx, ptr[r15+r13*8+1]); dump();
mov (ecx, ptr[r15+r13*8+1000]); dump();
mov (ecx, ptr[r15+r13*8-1]); dump();
mov (ecx, ptr[r15+r13*8-1000]); dump();
mov (ecx, ptr[r15+r14+0]); dump();
mov (ecx, ptr[r15+r14+1]); dump();
mov (ecx, ptr[r15+r14+1000]); dump();
mov (ecx, ptr[r15+r14-1]); dump();
mov (ecx, ptr[r15+r14-1000]); dump();
mov (ecx, ptr[r15+r14*1+0]); dump();
mov (ecx, ptr[r15+r14*1+1]); dump();
mov (ecx, ptr[r15+r14*1+1000]); dump();
mov (ecx, ptr[r15+r14*1-1]); dump();
mov (ecx, ptr[r15+r14*1-1000]); dump();
mov (ecx, ptr[r15+r14*2+0]); dump();
mov (ecx, ptr[r15+r14*2+1]); dump();
mov (ecx, ptr[r15+r14*2+1000]); dump();
mov (ecx, ptr[r15+r14*2-1]); dump();
mov (ecx, ptr[r15+r14*2-1000]); dump();
mov (ecx, ptr[r15+r14*4+0]); dump();
mov (ecx, ptr[r15+r14*4+1]); dump();
mov (ecx, ptr[r15+r14*4+1000]); dump();
mov (ecx, ptr[r15+r14*4-1]); dump();
mov (ecx, ptr[r15+r14*4-1000]); dump();
mov (ecx, ptr[r15+r14*8+0]); dump();
mov (ecx, ptr[r15+r14*8+1]); dump();
mov (ecx, ptr[r15+r14*8+1000]); dump();
mov (ecx, ptr[r15+r14*8-1]); dump();
mov (ecx, ptr[r15+r14*8-1000]); dump();
mov (ecx, ptr[r15+r15+0]); dump();
mov (ecx, ptr[r15+r15+1]); dump();
mov (ecx, ptr[r15+r15+1000]); dump();
mov (ecx, ptr[r15+r15-1]); dump();
mov (ecx, ptr[r15+r15-1000]); dump();
mov (ecx, ptr[r15+r15*1+0]); dump();
mov (ecx, ptr[r15+r15*1+1]); dump();
mov (ecx, ptr[r15+r15*1+1000]); dump();
mov (ecx, ptr[r15+r15*1-1]); dump();
mov (ecx, ptr[r15+r15*1-1000]); dump();
mov (ecx, ptr[r15+r15*2+0]); dump();
mov (ecx, ptr[r15+r15*2+1]); dump();
mov (ecx, ptr[r15+r15*2+1000]); dump();
mov (ecx, ptr[r15+r15*2-1]); dump();
mov (ecx, ptr[r15+r15*2-1000]); dump();
mov (ecx, ptr[r15+r15*4+0]); dump();
mov (ecx, ptr[r15+r15*4+1]); dump();
mov (ecx, ptr[r15+r15*4+1000]); dump();
mov (ecx, ptr[r15+r15*4-1]); dump();
mov (ecx, ptr[r15+r15*4-1000]); dump();
mov (ecx, ptr[r15+r15*8+0]); dump();
mov (ecx, ptr[r15+r15*8+1]); dump();
mov (ecx, ptr[r15+r15*8+1000]); dump();
mov (ecx, ptr[r15+r15*8-1]); dump();
mov (ecx, ptr[r15+r15*8-1000]); dump();
}
    void gen56(){
mov (ecx, ptr[r15+0]); dump();
mov (ecx, ptr[r15+1]); dump();
mov (ecx, ptr[r15+1000]); dump();
mov (ecx, ptr[r15-1]); dump();
mov (ecx, ptr[r15-1000]); dump();
mov (ecx, ptr[r15+0]); dump();
mov (ecx, ptr[r15+1]); dump();
mov (ecx, ptr[r15+1000]); dump();
mov (ecx, ptr[r15-1]); dump();
mov (ecx, ptr[r15-1000]); dump();
mov (ecx, ptr[r15+0]); dump();
mov (ecx, ptr[r15+1]); dump();
mov (ecx, ptr[r15+1000]); dump();
mov (ecx, ptr[r15-1]); dump();
mov (ecx, ptr[r15-1000]); dump();
mov (ecx, ptr[r15+0]); dump();
mov (ecx, ptr[r15+1]); dump();
mov (ecx, ptr[r15+1000]); dump();
mov (ecx, ptr[r15-1]); dump();
mov (ecx, ptr[r15-1000]); dump();
mov (ecx, ptr[r15+0]); dump();
mov (ecx, ptr[r15+1]); dump();
mov (ecx, ptr[r15+1000]); dump();
mov (ecx, ptr[r15-1]); dump();
mov (ecx, ptr[r15-1000]); dump();
mov (ecx, ptr[rax+0]); dump();
mov (ecx, ptr[rax+1]); dump();
mov (ecx, ptr[rax+1000]); dump();
mov (ecx, ptr[rax-1]); dump();
mov (ecx, ptr[rax-1000]); dump();
mov (ecx, ptr[rax*1+0]); dump();
mov (ecx, ptr[rax*1+1]); dump();
mov (ecx, ptr[rax*1+1000]); dump();
mov (ecx, ptr[rax*1-1]); dump();
mov (ecx, ptr[rax*1-1000]); dump();
mov (ecx, ptr[rax*2+0]); dump();
mov (ecx, ptr[rax*2+1]); dump();
mov (ecx, ptr[rax*2+1000]); dump();
mov (ecx, ptr[rax*2-1]); dump();
mov (ecx, ptr[rax*2-1000]); dump();
mov (ecx, ptr[rax*4+0]); dump();
mov (ecx, ptr[rax*4+1]); dump();
mov (ecx, ptr[rax*4+1000]); dump();
mov (ecx, ptr[rax*4-1]); dump();
mov (ecx, ptr[rax*4-1000]); dump();
mov (ecx, ptr[rax*8+0]); dump();
mov (ecx, ptr[rax*8+1]); dump();
mov (ecx, ptr[rax*8+1000]); dump();
mov (ecx, ptr[rax*8-1]); dump();
mov (ecx, ptr[rax*8-1000]); dump();
mov (ecx, ptr[rcx+0]); dump();
mov (ecx, ptr[rcx+1]); dump();
mov (ecx, ptr[rcx+1000]); dump();
mov (ecx, ptr[rcx-1]); dump();
mov (ecx, ptr[rcx-1000]); dump();
mov (ecx, ptr[rcx*1+0]); dump();
mov (ecx, ptr[rcx*1+1]); dump();
mov (ecx, ptr[rcx*1+1000]); dump();
mov (ecx, ptr[rcx*1-1]); dump();
mov (ecx, ptr[rcx*1-1000]); dump();
mov (ecx, ptr[rcx*2+0]); dump();
mov (ecx, ptr[rcx*2+1]); dump();
mov (ecx, ptr[rcx*2+1000]); dump();
mov (ecx, ptr[rcx*2-1]); dump();
mov (ecx, ptr[rcx*2-1000]); dump();
mov (ecx, ptr[rcx*4+0]); dump();
mov (ecx, ptr[rcx*4+1]); dump();
mov (ecx, ptr[rcx*4+1000]); dump();
mov (ecx, ptr[rcx*4-1]); dump();
mov (ecx, ptr[rcx*4-1000]); dump();
mov (ecx, ptr[rcx*8+0]); dump();
mov (ecx, ptr[rcx*8+1]); dump();
mov (ecx, ptr[rcx*8+1000]); dump();
mov (ecx, ptr[rcx*8-1]); dump();
mov (ecx, ptr[rcx*8-1000]); dump();
mov (ecx, ptr[rdx+0]); dump();
mov (ecx, ptr[rdx+1]); dump();
mov (ecx, ptr[rdx+1000]); dump();
mov (ecx, ptr[rdx-1]); dump();
mov (ecx, ptr[rdx-1000]); dump();
mov (ecx, ptr[rdx*1+0]); dump();
mov (ecx, ptr[rdx*1+1]); dump();
mov (ecx, ptr[rdx*1+1000]); dump();
mov (ecx, ptr[rdx*1-1]); dump();
mov (ecx, ptr[rdx*1-1000]); dump();
mov (ecx, ptr[rdx*2+0]); dump();
mov (ecx, ptr[rdx*2+1]); dump();
mov (ecx, ptr[rdx*2+1000]); dump();
mov (ecx, ptr[rdx*2-1]); dump();
mov (ecx, ptr[rdx*2-1000]); dump();
mov (ecx, ptr[rdx*4+0]); dump();
mov (ecx, ptr[rdx*4+1]); dump();
mov (ecx, ptr[rdx*4+1000]); dump();
mov (ecx, ptr[rdx*4-1]); dump();
mov (ecx, ptr[rdx*4-1000]); dump();
mov (ecx, ptr[rdx*8+0]); dump();
mov (ecx, ptr[rdx*8+1]); dump();
mov (ecx, ptr[rdx*8+1000]); dump();
mov (ecx, ptr[rdx*8-1]); dump();
mov (ecx, ptr[rdx*8-1000]); dump();
}
    void gen57(){
mov (ecx, ptr[rbx+0]); dump();
mov (ecx, ptr[rbx+1]); dump();
mov (ecx, ptr[rbx+1000]); dump();
mov (ecx, ptr[rbx-1]); dump();
mov (ecx, ptr[rbx-1000]); dump();
mov (ecx, ptr[rbx*1+0]); dump();
mov (ecx, ptr[rbx*1+1]); dump();
mov (ecx, ptr[rbx*1+1000]); dump();
mov (ecx, ptr[rbx*1-1]); dump();
mov (ecx, ptr[rbx*1-1000]); dump();
mov (ecx, ptr[rbx*2+0]); dump();
mov (ecx, ptr[rbx*2+1]); dump();
mov (ecx, ptr[rbx*2+1000]); dump();
mov (ecx, ptr[rbx*2-1]); dump();
mov (ecx, ptr[rbx*2-1000]); dump();
mov (ecx, ptr[rbx*4+0]); dump();
mov (ecx, ptr[rbx*4+1]); dump();
mov (ecx, ptr[rbx*4+1000]); dump();
mov (ecx, ptr[rbx*4-1]); dump();
mov (ecx, ptr[rbx*4-1000]); dump();
mov (ecx, ptr[rbx*8+0]); dump();
mov (ecx, ptr[rbx*8+1]); dump();
mov (ecx, ptr[rbx*8+1000]); dump();
mov (ecx, ptr[rbx*8-1]); dump();
mov (ecx, ptr[rbx*8-1000]); dump();
mov (ecx, ptr[rbp+0]); dump();
mov (ecx, ptr[rbp+1]); dump();
mov (ecx, ptr[rbp+1000]); dump();
mov (ecx, ptr[rbp-1]); dump();
mov (ecx, ptr[rbp-1000]); dump();
mov (ecx, ptr[rbp*1+0]); dump();
mov (ecx, ptr[rbp*1+1]); dump();
mov (ecx, ptr[rbp*1+1000]); dump();
mov (ecx, ptr[rbp*1-1]); dump();
mov (ecx, ptr[rbp*1-1000]); dump();
mov (ecx, ptr[rbp*2+0]); dump();
mov (ecx, ptr[rbp*2+1]); dump();
mov (ecx, ptr[rbp*2+1000]); dump();
mov (ecx, ptr[rbp*2-1]); dump();
mov (ecx, ptr[rbp*2-1000]); dump();
mov (ecx, ptr[rbp*4+0]); dump();
mov (ecx, ptr[rbp*4+1]); dump();
mov (ecx, ptr[rbp*4+1000]); dump();
mov (ecx, ptr[rbp*4-1]); dump();
mov (ecx, ptr[rbp*4-1000]); dump();
mov (ecx, ptr[rbp*8+0]); dump();
mov (ecx, ptr[rbp*8+1]); dump();
mov (ecx, ptr[rbp*8+1000]); dump();
mov (ecx, ptr[rbp*8-1]); dump();
mov (ecx, ptr[rbp*8-1000]); dump();
mov (ecx, ptr[rsi+0]); dump();
mov (ecx, ptr[rsi+1]); dump();
mov (ecx, ptr[rsi+1000]); dump();
mov (ecx, ptr[rsi-1]); dump();
mov (ecx, ptr[rsi-1000]); dump();
mov (ecx, ptr[rsi*1+0]); dump();
mov (ecx, ptr[rsi*1+1]); dump();
mov (ecx, ptr[rsi*1+1000]); dump();
mov (ecx, ptr[rsi*1-1]); dump();
mov (ecx, ptr[rsi*1-1000]); dump();
mov (ecx, ptr[rsi*2+0]); dump();
mov (ecx, ptr[rsi*2+1]); dump();
mov (ecx, ptr[rsi*2+1000]); dump();
mov (ecx, ptr[rsi*2-1]); dump();
mov (ecx, ptr[rsi*2-1000]); dump();
mov (ecx, ptr[rsi*4+0]); dump();
mov (ecx, ptr[rsi*4+1]); dump();
mov (ecx, ptr[rsi*4+1000]); dump();
mov (ecx, ptr[rsi*4-1]); dump();
mov (ecx, ptr[rsi*4-1000]); dump();
mov (ecx, ptr[rsi*8+0]); dump();
mov (ecx, ptr[rsi*8+1]); dump();
mov (ecx, ptr[rsi*8+1000]); dump();
mov (ecx, ptr[rsi*8-1]); dump();
mov (ecx, ptr[rsi*8-1000]); dump();
mov (ecx, ptr[rdi+0]); dump();
mov (ecx, ptr[rdi+1]); dump();
mov (ecx, ptr[rdi+1000]); dump();
mov (ecx, ptr[rdi-1]); dump();
mov (ecx, ptr[rdi-1000]); dump();
mov (ecx, ptr[rdi*1+0]); dump();
mov (ecx, ptr[rdi*1+1]); dump();
mov (ecx, ptr[rdi*1+1000]); dump();
mov (ecx, ptr[rdi*1-1]); dump();
mov (ecx, ptr[rdi*1-1000]); dump();
mov (ecx, ptr[rdi*2+0]); dump();
mov (ecx, ptr[rdi*2+1]); dump();
mov (ecx, ptr[rdi*2+1000]); dump();
mov (ecx, ptr[rdi*2-1]); dump();
mov (ecx, ptr[rdi*2-1000]); dump();
mov (ecx, ptr[rdi*4+0]); dump();
mov (ecx, ptr[rdi*4+1]); dump();
mov (ecx, ptr[rdi*4+1000]); dump();
mov (ecx, ptr[rdi*4-1]); dump();
mov (ecx, ptr[rdi*4-1000]); dump();
mov (ecx, ptr[rdi*8+0]); dump();
mov (ecx, ptr[rdi*8+1]); dump();
mov (ecx, ptr[rdi*8+1000]); dump();
mov (ecx, ptr[rdi*8-1]); dump();
mov (ecx, ptr[rdi*8-1000]); dump();
}
    void gen58(){
mov (ecx, ptr[r9+0]); dump();
mov (ecx, ptr[r9+1]); dump();
mov (ecx, ptr[r9+1000]); dump();
mov (ecx, ptr[r9-1]); dump();
mov (ecx, ptr[r9-1000]); dump();
mov (ecx, ptr[r9*1+0]); dump();
mov (ecx, ptr[r9*1+1]); dump();
mov (ecx, ptr[r9*1+1000]); dump();
mov (ecx, ptr[r9*1-1]); dump();
mov (ecx, ptr[r9*1-1000]); dump();
mov (ecx, ptr[r9*2+0]); dump();
mov (ecx, ptr[r9*2+1]); dump();
mov (ecx, ptr[r9*2+1000]); dump();
mov (ecx, ptr[r9*2-1]); dump();
mov (ecx, ptr[r9*2-1000]); dump();
mov (ecx, ptr[r9*4+0]); dump();
mov (ecx, ptr[r9*4+1]); dump();
mov (ecx, ptr[r9*4+1000]); dump();
mov (ecx, ptr[r9*4-1]); dump();
mov (ecx, ptr[r9*4-1000]); dump();
mov (ecx, ptr[r9*8+0]); dump();
mov (ecx, ptr[r9*8+1]); dump();
mov (ecx, ptr[r9*8+1000]); dump();
mov (ecx, ptr[r9*8-1]); dump();
mov (ecx, ptr[r9*8-1000]); dump();
mov (ecx, ptr[r10+0]); dump();
mov (ecx, ptr[r10+1]); dump();
mov (ecx, ptr[r10+1000]); dump();
mov (ecx, ptr[r10-1]); dump();
mov (ecx, ptr[r10-1000]); dump();
mov (ecx, ptr[r10*1+0]); dump();
mov (ecx, ptr[r10*1+1]); dump();
mov (ecx, ptr[r10*1+1000]); dump();
mov (ecx, ptr[r10*1-1]); dump();
mov (ecx, ptr[r10*1-1000]); dump();
mov (ecx, ptr[r10*2+0]); dump();
mov (ecx, ptr[r10*2+1]); dump();
mov (ecx, ptr[r10*2+1000]); dump();
mov (ecx, ptr[r10*2-1]); dump();
mov (ecx, ptr[r10*2-1000]); dump();
mov (ecx, ptr[r10*4+0]); dump();
mov (ecx, ptr[r10*4+1]); dump();
mov (ecx, ptr[r10*4+1000]); dump();
mov (ecx, ptr[r10*4-1]); dump();
mov (ecx, ptr[r10*4-1000]); dump();
mov (ecx, ptr[r10*8+0]); dump();
mov (ecx, ptr[r10*8+1]); dump();
mov (ecx, ptr[r10*8+1000]); dump();
mov (ecx, ptr[r10*8-1]); dump();
mov (ecx, ptr[r10*8-1000]); dump();
mov (ecx, ptr[r11+0]); dump();
mov (ecx, ptr[r11+1]); dump();
mov (ecx, ptr[r11+1000]); dump();
mov (ecx, ptr[r11-1]); dump();
mov (ecx, ptr[r11-1000]); dump();
mov (ecx, ptr[r11*1+0]); dump();
mov (ecx, ptr[r11*1+1]); dump();
mov (ecx, ptr[r11*1+1000]); dump();
mov (ecx, ptr[r11*1-1]); dump();
mov (ecx, ptr[r11*1-1000]); dump();
mov (ecx, ptr[r11*2+0]); dump();
mov (ecx, ptr[r11*2+1]); dump();
mov (ecx, ptr[r11*2+1000]); dump();
mov (ecx, ptr[r11*2-1]); dump();
mov (ecx, ptr[r11*2-1000]); dump();
mov (ecx, ptr[r11*4+0]); dump();
mov (ecx, ptr[r11*4+1]); dump();
mov (ecx, ptr[r11*4+1000]); dump();
mov (ecx, ptr[r11*4-1]); dump();
mov (ecx, ptr[r11*4-1000]); dump();
mov (ecx, ptr[r11*8+0]); dump();
mov (ecx, ptr[r11*8+1]); dump();
mov (ecx, ptr[r11*8+1000]); dump();
mov (ecx, ptr[r11*8-1]); dump();
mov (ecx, ptr[r11*8-1000]); dump();
mov (ecx, ptr[r12+0]); dump();
mov (ecx, ptr[r12+1]); dump();
mov (ecx, ptr[r12+1000]); dump();
mov (ecx, ptr[r12-1]); dump();
mov (ecx, ptr[r12-1000]); dump();
mov (ecx, ptr[r12*1+0]); dump();
mov (ecx, ptr[r12*1+1]); dump();
mov (ecx, ptr[r12*1+1000]); dump();
mov (ecx, ptr[r12*1-1]); dump();
mov (ecx, ptr[r12*1-1000]); dump();
mov (ecx, ptr[r12*2+0]); dump();
mov (ecx, ptr[r12*2+1]); dump();
mov (ecx, ptr[r12*2+1000]); dump();
mov (ecx, ptr[r12*2-1]); dump();
mov (ecx, ptr[r12*2-1000]); dump();
mov (ecx, ptr[r12*4+0]); dump();
mov (ecx, ptr[r12*4+1]); dump();
mov (ecx, ptr[r12*4+1000]); dump();
mov (ecx, ptr[r12*4-1]); dump();
mov (ecx, ptr[r12*4-1000]); dump();
mov (ecx, ptr[r12*8+0]); dump();
mov (ecx, ptr[r12*8+1]); dump();
mov (ecx, ptr[r12*8+1000]); dump();
mov (ecx, ptr[r12*8-1]); dump();
mov (ecx, ptr[r12*8-1000]); dump();
}
    void gen59(){
mov (ecx, ptr[r13+0]); dump();
mov (ecx, ptr[r13+1]); dump();
mov (ecx, ptr[r13+1000]); dump();
mov (ecx, ptr[r13-1]); dump();
mov (ecx, ptr[r13-1000]); dump();
mov (ecx, ptr[r13*1+0]); dump();
mov (ecx, ptr[r13*1+1]); dump();
mov (ecx, ptr[r13*1+1000]); dump();
mov (ecx, ptr[r13*1-1]); dump();
mov (ecx, ptr[r13*1-1000]); dump();
mov (ecx, ptr[r13*2+0]); dump();
mov (ecx, ptr[r13*2+1]); dump();
mov (ecx, ptr[r13*2+1000]); dump();
mov (ecx, ptr[r13*2-1]); dump();
mov (ecx, ptr[r13*2-1000]); dump();
mov (ecx, ptr[r13*4+0]); dump();
mov (ecx, ptr[r13*4+1]); dump();
mov (ecx, ptr[r13*4+1000]); dump();
mov (ecx, ptr[r13*4-1]); dump();
mov (ecx, ptr[r13*4-1000]); dump();
mov (ecx, ptr[r13*8+0]); dump();
mov (ecx, ptr[r13*8+1]); dump();
mov (ecx, ptr[r13*8+1000]); dump();
mov (ecx, ptr[r13*8-1]); dump();
mov (ecx, ptr[r13*8-1000]); dump();
mov (ecx, ptr[r14+0]); dump();
mov (ecx, ptr[r14+1]); dump();
mov (ecx, ptr[r14+1000]); dump();
mov (ecx, ptr[r14-1]); dump();
mov (ecx, ptr[r14-1000]); dump();
mov (ecx, ptr[r14*1+0]); dump();
mov (ecx, ptr[r14*1+1]); dump();
mov (ecx, ptr[r14*1+1000]); dump();
mov (ecx, ptr[r14*1-1]); dump();
mov (ecx, ptr[r14*1-1000]); dump();
mov (ecx, ptr[r14*2+0]); dump();
mov (ecx, ptr[r14*2+1]); dump();
mov (ecx, ptr[r14*2+1000]); dump();
mov (ecx, ptr[r14*2-1]); dump();
mov (ecx, ptr[r14*2-1000]); dump();
mov (ecx, ptr[r14*4+0]); dump();
mov (ecx, ptr[r14*4+1]); dump();
mov (ecx, ptr[r14*4+1000]); dump();
mov (ecx, ptr[r14*4-1]); dump();
mov (ecx, ptr[r14*4-1000]); dump();
mov (ecx, ptr[r14*8+0]); dump();
mov (ecx, ptr[r14*8+1]); dump();
mov (ecx, ptr[r14*8+1000]); dump();
mov (ecx, ptr[r14*8-1]); dump();
mov (ecx, ptr[r14*8-1000]); dump();
mov (ecx, ptr[r15+0]); dump();
mov (ecx, ptr[r15+1]); dump();
mov (ecx, ptr[r15+1000]); dump();
mov (ecx, ptr[r15-1]); dump();
mov (ecx, ptr[r15-1000]); dump();
mov (ecx, ptr[r15*1+0]); dump();
mov (ecx, ptr[r15*1+1]); dump();
mov (ecx, ptr[r15*1+1000]); dump();
mov (ecx, ptr[r15*1-1]); dump();
mov (ecx, ptr[r15*1-1000]); dump();
mov (ecx, ptr[r15*2+0]); dump();
mov (ecx, ptr[r15*2+1]); dump();
mov (ecx, ptr[r15*2+1000]); dump();
mov (ecx, ptr[r15*2-1]); dump();
mov (ecx, ptr[r15*2-1000]); dump();
mov (ecx, ptr[r15*4+0]); dump();
mov (ecx, ptr[r15*4+1]); dump();
mov (ecx, ptr[r15*4+1000]); dump();
mov (ecx, ptr[r15*4-1]); dump();
mov (ecx, ptr[r15*4-1000]); dump();
mov (ecx, ptr[r15*8+0]); dump();
mov (ecx, ptr[r15*8+1]); dump();
mov (ecx, ptr[r15*8+1000]); dump();
mov (ecx, ptr[r15*8-1]); dump();
mov (ecx, ptr[r15*8-1000]); dump();
mov (ecx, ptr[(void*)0x00000000]); dump();
mov (ecx, ptr[(void*)0x00000001]); dump();
mov (ecx, ptr[(void*)0x000003E8]); dump();
mov (ecx, ptr[(void*)0xFFFFFFFF]); dump();
mov (ecx, ptr[(void*)0xFFFFFC18]); dump();
mov (ecx, ptr[(void*)0x00000000]); dump();
mov (ecx, ptr[(void*)0x00000001]); dump();
mov (ecx, ptr[(void*)0x000003E8]); dump();
mov (ecx, ptr[(void*)0xFFFFFFFF]); dump();
mov (ecx, ptr[(void*)0xFFFFFC18]); dump();
mov (ecx, ptr[(void*)0x00000000]); dump();
mov (ecx, ptr[(void*)0x00000001]); dump();
mov (ecx, ptr[(void*)0x000003E8]); dump();
mov (ecx, ptr[(void*)0xFFFFFFFF]); dump();
mov (ecx, ptr[(void*)0xFFFFFC18]); dump();
mov (ecx, ptr[(void*)0x00000000]); dump();
mov (ecx, ptr[(void*)0x00000001]); dump();
mov (ecx, ptr[(void*)0x000003E8]); dump();
mov (ecx, ptr[(void*)0xFFFFFFFF]); dump();
mov (ecx, ptr[(void*)0xFFFFFC18]); dump();
mov (ecx, ptr[(void*)0x00000000]); dump();
mov (ecx, ptr[(void*)0x00000001]); dump();
mov (ecx, ptr[(void*)0x000003E8]); dump();
mov (ecx, ptr[(void*)0xFFFFFFFF]); dump();
mov (ecx, ptr[(void*)0xFFFFFC18]); dump();
}
    void gen60(){
}
void gen(){
   gen0();
   gen1();
   gen2();
   gen3();
   gen4();
   gen5();
   gen6();
   gen7();
   gen8();
   gen9();
   gen10();
   gen11();
   gen12();
   gen13();
   gen14();
   gen15();
   gen16();
   gen17();
   gen18();
   gen19();
   gen20();
   gen21();
   gen22();
   gen23();
   gen24();
   gen25();
   gen26();
   gen27();
   gen28();
   gen29();
   gen30();
   gen31();
   gen32();
   gen33();
   gen34();
   gen35();
   gen36();
   gen37();
   gen38();
   gen39();
   gen40();
   gen41();
   gen42();
   gen43();
   gen44();
   gen45();
   gen46();
   gen47();
   gen48();
   gen49();
   gen50();
   gen51();
   gen52();
   gen53();
   gen54();
   gen55();
   gen56();
   gen57();
   gen58();
   gen59();
   gen60();
}
